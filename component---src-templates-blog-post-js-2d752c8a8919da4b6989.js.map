{"version":3,"file":"component---src-templates-blog-post-js-2d752c8a8919da4b6989.js","mappings":"qJAsBA,IAlBe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAE5B,OACE,uBAAKC,UAAU,iBAAiB,oBAAmBF,GACjD,4BAAOD,GACP,0BAAQG,UAAU,UAChB,4BAAM,MACD,IAAIC,MAAOC,cAAc,eAC5B,IACA,qBAAGC,KAAK,4BAA2B,YAGnC,C,+ECSV,MAvBe,KACX,MAAMC,EAA4B,oBAANC,OAAwBA,OAAOC,QAAU,MAC/D,EAAEC,EAAM,EAACC,IAAaC,EAAAA,EAAAA,UAASL,IACrCM,EAAAA,EAAAA,YAAU,KACNF,EAASH,OAAOC,SAChBD,OAAOM,gBAAkB,KACzBH,EAASH,OAAOC,QAAQ,CACvB,GACF,IAKH,OACI,gCACI,0BAAQM,QALI,KAChBP,OAAOQ,oBAAqC,SAAjBT,EAA0B,QAAU,OAAO,EAIpCU,GAAG,QACjC,yBAAOd,UAAU,aAAae,QAAQ,OAC9B,uBAAKf,UAAU,eAExB,EC2EX,MA1FY,IAAiD,IAAhD,MAACJ,EAAK,KAAEoB,EAAI,WAAEC,EAAU,MAAEC,EAAK,SAAEvB,GAAS,EACrD,MAAMwB,EAAcvB,GAAgB,iCAC9BwB,EAAaJ,GAAc,iCAC3BK,EAAUJ,GAA0B,iCAEpCK,EAAsB,MAAb3B,EAAmB,SAAW,cAEvC,EAAC4B,EAAQ,EAACC,IAAcf,EAAAA,EAAAA,WAAS,GACjCgB,EAAU,KACVF,GACFG,SAASC,eAAe,QAAQC,MAAMC,SAAW,SACjDH,SAASC,eAAe,QAAQC,MAAME,aAAe,MAErDJ,SAASC,eAAe,cAAcC,MAAMG,WAAa,SACzDL,SAASC,eAAe,cAAcC,MAAMI,QAAU,IAEtDN,SAASC,eAAe,YAAYC,MAAMK,UAAY,oBAEtDT,GAAW,KAGPnB,OAAO6B,WAAaR,SAASS,KAAKC,YAAc,KAClDV,SAASC,eAAe,QAAQC,MAAME,aAAe,QAEvDJ,SAASC,eAAe,QAAQC,MAAMC,SAAW,SAEjDH,SAASC,eAAe,cAAcC,MAAMG,WAAa,UACzDL,SAASC,eAAe,cAAcC,MAAMI,QAAU,MAEtDN,SAASC,eAAe,YAAYC,MAAMK,UAAY,iBAEtDT,GAAW,GACb,EAWF,IARAd,EAAAA,EAAAA,YAAU,KACRgB,SAASC,eAAe,OAAOC,MAAMS,IAAM,MACpC,KACLX,SAASC,eAAe,OAAOC,MAAMS,IAAM,KAAK,IAEjD,IAGmB,oBAAXhC,OAAwB,CAC/B,IAAIiC,EAAgBjC,OAAOkC,YAC3BlC,OAAOmC,SAAW,WAChB,MAAMC,EAAYf,SAASS,KAAKO,aAAerC,OAAOsC,YACtD,IAAIC,EAAmBvC,OAAOkC,YAC1BM,EAAexC,OAAOkC,YAAc,IAAM,EAAI,EAClDb,SAASC,eAAe,eAAeC,MAAMI,QAAO,GAAMa,EAMxDnB,SAASC,eAAe,OAAOC,MAAMS,IAJlCI,EAAY,GAAKH,EAAgBM,GAAoBN,GAAiBG,GACrEA,GAAa,GAAKH,EAAgBM,GAClCN,GAAiB,GAAKM,GAAoB,EAEH,MAEA,QAE7CN,EAAgBM,CAClB,CACF,CACF,OACI,uBAAK9B,GAAG,MAAMd,UAAU,aACtB,uBAAKe,QAAQ,YAAYD,GAAG,YAAYF,QAASa,GAC/C,6BAAO,6BAAO,8BAEhB,uBAAKX,GAAG,aAAaF,QAASa,IAC9B,uBAAKX,GAAG,YACJ,0BACI,sBAAIgC,IAAI,gBAAe,gBAAC,EAAAC,KAAI,CAACC,GAAG,IAAIhD,UAAWsB,GAAQ,OAAKJ,EAAM,MACjEG,EAAQ4B,KAAIC,IACT,MAAMC,EAAKD,EAAKE,aAAezD,EAAW,SAAW,aACrD,OACI,sBAAImD,IAAKI,EAAKE,YAAY,gBAAC,EAAAL,KAAI,CAACC,GAAG,GAAGhD,UAAWmD,GAAKD,EAAKE,WAAW,IAAEF,EAAKG,WAAW,KAAa,MAKrH,gBAAC,EAAAN,KAAI,CAACC,GAAG,IAAIhD,UAAU,UAAUsD,SAAS,OAAM,YAChD,uBAAKxC,GAAG,eACN,wBAAMd,UAAU,YAAYmB,GAC5B,wBAAMnB,UAAU,WAAWoB,IAE7B,gBAAC,EAAM,MACP,uBAAKN,GAAG,UAAUd,UAAU,YACxB,C,+CC7CZ,IAvCY,IAAuC,IAAD,UAArC,YAAEuD,EAAW,MAAE3D,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAE2D,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmB/D,MAExC,OACE,gCACE,6BAAQgE,EAAkBhE,EAAK,MAAMgE,EAAiBhE,GACtD,wBAAMiE,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASlE,IACnC,wBAAMmE,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASlE,IACpC,wBAAMiE,KAAK,sBAAsBC,QAASJ,IACzC7D,EACA,C,oJC5BP,MAbaqE,IACT,MAAMC,EAAUD,EAAKA,KACrB,MAAgB,KAAZC,EACQ,iCAGR,uBAAKnE,UAAU,UACX,4BAAM,qBACN,uBAAKoE,wBAAyB,CAAEC,OAAQF,KACtC,ECLd,MAqEaG,EAAO,IAAwC,IAArCJ,MAAQK,eAAgBC,IAAQ,EACrD,OACE,gBAAC,IAAG,CACF5E,MAAO4E,EAAKC,YAAY7E,MACxB2D,YAAaiB,EAAKC,YAAYlB,aAAeiB,EAAKE,SAClD,EAIN,MA9EyB,IAGnB,UAFJR,MAAM,SAAES,EAAQ,KAAEC,EAAI,KAAEpB,EAAMe,eAAgBC,EAAI,kBAAEK,GAAmB,SACvElF,GACD,EACC,MAAMmF,GAA6B,QAAjB,EAAAtB,EAAKG,oBAAY,aAAjB,EAAmB/D,QAAK,QACpCmF,EAAUP,EAAKQ,gBACrBC,QAAQC,IAAIL,GACZ,MAAM5D,EAAa4D,EAAkBM,MAC/BC,EAAWP,EAAkBxB,WACnC,OACE,gBAAC,IAAM,CAAC1D,SAAUA,EAAUC,MAAOkF,GACjC,gBAAC,IAAG,CACJlF,MAAO4E,EAAKC,YAAY7E,MACxBoB,KAAMwD,EAAKC,YAAYzD,KACvBC,WAAYA,EACZC,MAAOkE,EACPzF,SAAU6E,EAAKC,YAAYY,WAE3B,uBAAKrF,UAAU,mBACb,uBAAKA,UAAU,oBACb,uBACEA,UAAU,YACVsF,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIjC,SAAS,YAAYkB,EAAKC,YAAY7E,OAC1C,yBAAI4E,EAAKC,YAAYzD,OAErB,2BACEoD,wBAAyB,CAAEC,OAAQG,EAAKgB,MACxClC,SAAS,gBAEb,gCAGF,gBAAC,EAAG,CAACY,KAAMa,KAEb,uBAAK/E,UAAU,iBACb,sBACE4B,MAAO,CACL6D,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,0BACGlB,GACC,gBAAC,EAAA5B,KAAI,CAACC,GAAI2B,EAASmB,OAAOC,KAAMC,IAAI,QAAO,KACtCrB,EAASF,YAAY7E,QAI9B,0BACGgF,GACC,gBAAC,EAAA7B,KAAI,CAACC,GAAI4B,EAAKkB,OAAOC,KAAMC,IAAI,QAC7BpB,EAAKH,YAAY7E,MAAM,UAO7B,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/themetog.js","webpack://gatsby-starter-blog/./src/components/nav.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/components/toc.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <main>{children}</main>\r\n      <footer className=\"footer\">\r\n        <span>\r\n          © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </span>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState, useEffect } from \"react\"\r\nimport \"./themetog.css\"\r\n\r\n\r\nconst Toggle = () => {\r\n    const websiteTheme = typeof window != `undefined` ? window.__theme : null\r\n    const [ theme, setTheme ] = useState(websiteTheme)\r\n    useEffect(() => {\r\n        setTheme(window.__theme)\r\n        window.__onThemeChange = () => {\r\n        setTheme(window.__theme)\r\n        }\r\n    }, [])\r\n\r\n    const ThemeToggle = () => {\r\n        window.__setPreferredTheme(websiteTheme === 'dark' ? 'light' : 'dark')\r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={ThemeToggle} id=\"tog\"/>\r\n            <label className=\"toggleback\" htmlFor=\"tog\">\r\n                    <div className=\"togglecon\"/>\r\n            </label>\r\n        </>   \r\n    )\r\n}\r\n\r\nexport default Toggle","\r\nimport * as React from \"react\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./nav.css\"\r\nimport Toggle from \"./themetog\"\r\n\r\n\r\nconst Nav = ({title, date, categories, count, location}) => {\r\n  const centerTitle = title ? title : <></>\r\n  const centerDate = date ? date : <></>\r\n  const categrs = categories ? categories : <></>\r\n  const tcount = count ? count : 0\r\n  const isRoot = location === \"/\" ? \"active\" : \"non-active\"\r\n  // 햄버거 메뉴 함수\r\n  const [hamopen, sethamopen] = useState(false)\r\n  const openHam = () => {\r\n    if (hamopen) {\r\n      document.getElementById(\"body\").style.overflow = \"scroll\";\r\n      document.getElementById(\"body\").style.paddingRight = \"0px\";\r\n\r\n      document.getElementById(\"ham-shadow\").style.visibility = \"hidden\"\r\n      document.getElementById(\"ham-shadow\").style.opacity = \"0\"\r\n\r\n      document.getElementById(\"ham-menu\").style.transform = \"translateX(-100%)\"\r\n\r\n      sethamopen(false);\r\n    }\r\n    else {\r\n      if (window.innerWidth - document.body.clientWidth > 15) {\r\n        document.getElementById(\"body\").style.paddingRight = \"17px\";\r\n      }\r\n      document.getElementById(\"body\").style.overflow = \"hidden\";\r\n\r\n      document.getElementById(\"ham-shadow\").style.visibility = \"visible\"\r\n      document.getElementById(\"ham-shadow\").style.opacity = \"0.5\"\r\n\r\n      document.getElementById(\"ham-menu\").style.transform = \"translateX(0%)\"\r\n\r\n      sethamopen(true);\r\n    }\r\n  }\r\n  // 새로고침 및 페이지 이동 시 초기화\r\n  useEffect(() => {\r\n    document.getElementById(\"nav\").style.top = \"0px\";\r\n    return () => {\r\n      document.getElementById(\"nav\").style.top = \"0px\";\r\n    }\r\n  }, []);\r\n\r\n  // (auto-hiding nav) and (title in nav)\r\n  if (typeof window !== 'undefined') {\r\n      let prevScrollpos = window.pageYOffset;\r\n      window.onscroll = function () {\r\n        const maxScroll = document.body.clientHeight - window.innerHeight;\r\n        let currentScrollPos = window.pageYOffset;\r\n        let titleopacity = window.pageYOffset < 200 ? 0 : 1;\r\n        document.getElementById(\"navlocation\").style.opacity = `${titleopacity}`;\r\n        if (\r\n            (maxScroll > 0 && prevScrollpos > currentScrollPos && prevScrollpos <= maxScroll) \r\n          || (maxScroll <= 0 && prevScrollpos > currentScrollPos)\r\n          || (prevScrollpos <= 0 && currentScrollPos <= 0)\r\n          ) {\r\n          document.getElementById(\"nav\").style.top = \"0px\";\r\n        } else {\r\n          document.getElementById(\"nav\").style.top = \"-63px\";\r\n        }\r\n        prevScrollpos = currentScrollPos;\r\n      }\r\n    }\r\n  return(\r\n      <div id=\"nav\" className=\"navmaster\">\r\n        <div htmlFor=\"ham-check\" id=\"ham-label\" onClick={openHam}>\r\n          <span/><span/><span/>\r\n        </div>\r\n        <div id=\"ham-shadow\" onClick={openHam}/>\r\n        <div id=\"ham-menu\">\r\n            <ol>\r\n                <li key=\"category_All\"><Link to=\"/\" className={isRoot}>All({count})</Link></li>\r\n                {categrs.map(cate => {\r\n                    const cn = cate.fieldValue === location ? \"active\" : \"non-active\"\r\n                    return (\r\n                        <li key={cate.fieldValue}><Link to=\"\" className={cn}>{cate.fieldValue}({cate.totalCount})</Link></li>\r\n                    )\r\n                })}\r\n            </ol>\r\n        </div>\r\n        <Link to=\"/\" className=\"navlogo\" itemProp=\"url\">abcde.io</Link>\r\n        <div id=\"navlocation\">\r\n          <span className=\"navtitle\">{centerTitle}</span>\r\n          <span className=\"navdate\">{centerDate}</span>\r\n        </div>\r\n        <Toggle/>\r\n        <div id=\"navline\" className=\"navline\"/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n\r\n\r\n\r\n\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport \"./toc.css\"\r\n\r\n\r\nconst Toc = (data) => {\r\n    const tochtml = data.data\r\n    if (tochtml === \"\") {\r\n        return (<></>)\r\n    }\r\n    return (\r\n        <nav className=\"tocnav\">\r\n            <span>Table of Contents</span>\r\n            <div dangerouslySetInnerHTML={{ __html: tochtml }}/>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Toc","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Nav from \"../components/nav\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Toc from \"../components/toc\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { previous, next, site, markdownRemark: post, allMarkdownRemark },\r\n  location,\r\n}) => {\r\n  const siteTitle = site.siteMetadata?.title || `Title`\r\n  const tocdata = post.tableOfContents\r\n  console.log(allMarkdownRemark)\r\n  const categories = allMarkdownRemark.group\r\n  const totcount = allMarkdownRemark.totalCount\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Nav \r\n      title={post.frontmatter.title} \r\n      date={post.frontmatter.date} \r\n      categories={categories} \r\n      count={totcount} \r\n      location={post.frontmatter.category}\r\n      />\r\n      <div className=\"blogpostwrapper\">\r\n        <div className=\"post-toc-wrapper\">\r\n          <div\r\n            className=\"blog-post\"\r\n            itemScope\r\n            itemType=\"http://schema.org/Article\"\r\n          >\r\n            <header>\r\n              <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n              <p>{post.frontmatter.date}</p>\r\n            </header>\r\n              <section\r\n                dangerouslySetInnerHTML={{ __html: post.html }}\r\n                itemProp=\"articleBody\"\r\n              />\r\n            <footer>\r\n            </footer>\r\n          </div>\r\n          <Toc data={tocdata}/>\r\n        </div>\r\n        <nav className=\"blog-post-nav\">\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <li>\r\n              {previous && (\r\n                <Link to={previous.fields.slug} rel=\"prev\">\r\n                  ← {previous.frontmatter.title}\r\n                </Link>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {next && (\r\n                <Link to={next.fields.slug} rel=\"next\">\r\n                  {next.frontmatter.title} →\r\n                </Link>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ data: { markdownRemark: post } }) => {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) \r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      tableOfContents\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        category\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      totalCount\r\n      group(field: { frontmatter: { category: SELECT }}) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["location","title","children","isRootPath","pathname","className","Date","getFullYear","href","websiteTheme","window","__theme","theme","setTheme","useState","useEffect","__onThemeChange","onClick","__setPreferredTheme","id","htmlFor","date","categories","count","centerTitle","centerDate","categrs","isRoot","hamopen","sethamopen","openHam","document","getElementById","style","overflow","paddingRight","visibility","opacity","transform","innerWidth","body","clientWidth","top","prevScrollpos","pageYOffset","onscroll","maxScroll","clientHeight","innerHeight","currentScrollPos","titleopacity","key","Link","to","map","cate","cn","fieldValue","totalCount","itemProp","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","data","tochtml","dangerouslySetInnerHTML","__html","Head","markdownRemark","post","frontmatter","excerpt","previous","next","allMarkdownRemark","siteTitle","tocdata","tableOfContents","console","log","group","totcount","category","itemScope","itemType","html","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}