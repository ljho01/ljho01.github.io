{"version":3,"file":"component---src-templates-blog-post-js-429a84122cc714e868c2.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/themetog.js","webpack://gatsby-starter-blog/./src/components/nav.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/components/toc.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <main>{children}</main>\r\n      <footer className=\"footer\">\r\n        <span>\r\n          © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </span>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState, useEffect } from \"react\"\r\nimport \"./themetog.css\"\r\n\r\n\r\nconst Toggle = () => {\r\n    const websiteTheme = typeof window != `undefined` ? window.__theme : null\r\n    const [ theme, setTheme ] = useState(websiteTheme)\r\n    useEffect(() => {\r\n        setTheme(window.__theme)\r\n        window.__onThemeChange = () => {\r\n        setTheme(window.__theme)\r\n        }\r\n    }, [])\r\n\r\n    const ThemeToggle = () => {\r\n        window.__setPreferredTheme(websiteTheme === 'dark' ? 'light' : 'dark')\r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={ThemeToggle} id=\"tog\"/>\r\n            <label className=\"toggleback\" htmlFor=\"tog\">\r\n                    <div className=\"togglecon\"/>\r\n            </label>\r\n        </>   \r\n    )\r\n}\r\n\r\nexport default Toggle","\r\nimport * as React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./nav.css\"\r\nimport Toggle from \"./themetog\"\r\n\r\n\r\nconst Nav = (arg) => {\r\n  const centerTitle = arg.title ? arg.title : <></>\r\n  const centerDate = arg.date ? arg.date : <></>\r\n  // 새로고침 및 페이지 이동 시 초기화\r\n  useEffect(() => {\r\n    document.getElementById(\"nav\").style.top = \"0px\";\r\n    return () => {\r\n      document.getElementById(\"nav\").style.top = \"0px\";\r\n    }\r\n  }, []);\r\n\r\n  if (typeof window !== 'undefined') {\r\n      let prevScrollpos = window.pageYOffset;\r\n      window.onscroll = function () {\r\n        const maxScroll = document.body.clientHeight - window.innerHeight;\r\n        let currentScrollPos = window.pageYOffset;\r\n        let titleopacity = window.pageYOffset < 200 ? 0 : 1;\r\n        document.getElementById(\"navlocation\").style.opacity = `${titleopacity}`;\r\n        if (\r\n            (maxScroll > 0 && prevScrollpos > currentScrollPos && prevScrollpos <= maxScroll) \r\n          || (maxScroll <= 0 && prevScrollpos > currentScrollPos)\r\n          || (prevScrollpos <= 0 && currentScrollPos <= 0)\r\n          ) {\r\n          document.getElementById(\"nav\").style.top = \"0px\";\r\n        } else {\r\n          document.getElementById(\"nav\").style.top = \"-63px\";\r\n        }\r\n        prevScrollpos = currentScrollPos;\r\n      }\r\n    }\r\n  return(\r\n      <div id=\"nav\" className=\"navmaster\">\r\n        <Link to=\"/\" className=\"navlogo\" itemProp=\"url\">abcde.io</Link>\r\n        <div id=\"navlocation\">\r\n          <span className=\"navtitle\">{centerTitle}</span>\r\n          <span className=\"navdate\">{centerDate}</span>\r\n        </div>\r\n        <Toggle/>\r\n        <div id=\"navline\" className=\"navline\"/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./toc.css\"\r\n\r\n\r\nconst Toc = (data) => {\r\n    const tochtml = data.data\r\n    if (tochtml === \"\") {\r\n        return (<></>)\r\n    }\r\n    return (\r\n        <nav className=\"tocnav\" dangerouslySetInnerHTML={{ __html: tochtml }}/> \r\n    )\r\n}\r\n\r\nexport default Toc","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Nav from \"../components/nav\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Toc from \"../components/toc\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { previous, next, site, markdownRemark: post },\r\n  location,\r\n}) => {\r\n  const siteTitle = site.siteMetadata?.title || `Title`\r\n  const tocdata = post.tableOfContents\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Nav title={post.frontmatter.title} date={post.frontmatter.date}/>\r\n      <div className=\"blogpostwrapper\">\r\n        <div className=\"post-toc-wrapper\">\r\n          <div\r\n            className=\"blog-post\"\r\n            itemScope\r\n            itemType=\"http://schema.org/Article\"\r\n          >\r\n            <header>\r\n              <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n              <p>{post.frontmatter.date}</p>\r\n            </header>\r\n              <section\r\n                dangerouslySetInnerHTML={{ __html: post.html }}\r\n                itemProp=\"articleBody\"\r\n              />\r\n            <footer>\r\n            </footer>\r\n          </div>\r\n          <Toc data={tocdata}/>\r\n        </div>\r\n        <nav className=\"blog-post-nav\">\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <li>\r\n              {previous && (\r\n                <Link to={previous.fields.slug} rel=\"prev\">\r\n                  ← {previous.frontmatter.title}\r\n                </Link>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {next && (\r\n                <Link to={next.fields.slug} rel=\"next\">\r\n                  {next.frontmatter.title} →\r\n                </Link>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ data: { markdownRemark: post } }) => {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      tableOfContents\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["location","title","children","isRootPath","pathname","className","Date","getFullYear","href","websiteTheme","window","__theme","theme","setTheme","useState","useEffect","__onThemeChange","onClick","__setPreferredTheme","id","htmlFor","arg","centerTitle","centerDate","date","document","getElementById","style","top","prevScrollpos","pageYOffset","onscroll","maxScroll","body","clientHeight","innerHeight","currentScrollPos","titleopacity","opacity","Link","to","itemProp","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","data","tochtml","dangerouslySetInnerHTML","__html","Head","markdownRemark","post","frontmatter","excerpt","previous","next","siteTitle","tocdata","tableOfContents","itemScope","itemType","html","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}