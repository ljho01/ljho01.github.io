{"version":3,"file":"component---src-templates-blog-index-js-eeeccb75ad0c4890f38e.js","mappings":"uJAcA,IAVkB,IAEV,uBAAKA,UAAU,gBACX,gBAAC,EAAAC,EAAW,CAACC,MAAM,kBAAkBC,IAAK,gCAAiCC,IAAI,YAAW,sBAC1F,gBAAC,EAAAH,EAAW,CAACC,MAAM,iBAAiBC,IAAI,+BAA+BC,IAAI,YAAW,sB,oJCmBlG,MAtBqB,IAAgC,IAA/B,KAAEC,EAAI,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAMC,EAAsB,MAAbD,EAAmB,SAAW,aACvCE,EAAUJ,EAEhB,OACA,gCACI,uBAAKL,UAAU,gBACX,0BACI,sBAAIU,IAAI,gBAAe,gBAAC,EAAAC,KAAI,CAACC,GAAG,IAAIZ,UAAWQ,GAAQ,OAAKF,EAAM,MACjEG,EAAQI,KAAIC,IACT,MAAMC,EAAKD,EAAKE,aAAeT,EAAW,SAAW,aACrD,OACI,sBAAIG,IAAKI,EAAKE,YAAY,gBAAC,EAAAL,KAAI,CAACC,GAAG,GAAGZ,UAAWe,GAAKD,EAAKE,WAAW,IAAEF,EAAKG,WAAW,KAAa,MAKtH,E,UCyBP,MAzCkBC,IACd,MAAMC,EAAOD,EAAKC,KACZC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,IAAIC,EAOJ,OALIA,EAD8B,MAA9BL,EAAKE,YAAYI,UACT,gBAAC,EAAAC,EAAW,CAACC,MAAOR,EAAKE,YAAYI,UAAUG,gBAAgBC,gBAAiBzB,IAAI,cAGpF,iCAGV,0BACE,gBAAC,EAAAO,KAAI,CAACC,GAAIO,EAAKG,OAAOC,KAAMO,SAAS,OACnC,2BACE9B,UAAU,iBACV+B,WAAS,EACTC,SAAS,6BAET,uBAAKhC,UAAU,sBACb,8BACE,0BACE,wBAAM8B,SAAS,YAAYV,IAE7B,6BAAQD,EAAKE,YAAYY,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQhB,EAAKE,YAAYe,aAAejB,EAAKkB,SAE/CP,SAAS,kBAIf,uBAAK9B,UAAU,uBAAuBwB,KAGvC,E,UCCX,MAjCkB,IAAyB,IAAD,MAAvB,KAAEnB,EAAI,SAAEE,GAAU,EACK,QAAtB,EAAAF,EAAKiC,KAAKC,oBAAY,OAAtB,EAAwBnB,MAA1C,MACMoB,EAAQnC,EAAKoC,kBAAkBC,MAC/BC,EAAatC,EAAKoC,kBAAkBG,MACpCC,EAAWxC,EAAKoC,kBAAkBxB,WACxC,OAAqB,IAAjBuB,EAAMM,OAEN,gBAAC,IAAM,KACL,yBAAG,8JAUP,gBAAC,IAAM,KACL,gBAAC,IAAG,CAACH,WAAYA,EAAYrC,MAAOuC,EAAUtC,SAAS,MACvD,gBAAC,IAAS,MACV,uBAAKP,UAAU,SACb,gBAAC,EAAY,CAACK,KAAMsC,EAAYrC,MAAOuC,EAAUtC,SAAS,MAC1D,sBAAIwC,MAAO,CAAEC,UAAU,SACpBR,EAAM3B,KAAI,CAACM,EAAM8B,IAChB,gBAAC,EAAQ,CAAC9B,KAAMA,EAAMT,IAAKuC,QAI1B,EAWN,MAAMC,EAAO,IAAM,gBAAC,IAAG,CAAC9B,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/wallpaper.js","webpack://gatsby-starter-blog/./src/components/sidecategory.js","webpack://gatsby-starter-blog/./src/components/postcard.js","webpack://gatsby-starter-blog/./src/templates/blog-index.js"],"sourcesContent":["import * as React from \"react\"\r\nimport \"./wallpaper.css\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Wallpaper = () => {\r\n    return (\r\n        <div className=\"wallpaperbox\">\r\n            <StaticImage class=\"wallpaper-light\" src={\"../images/Wallpaper-light.png\"} alt=\"wallpaper\"/>\r\n            <StaticImage class=\"wallpaper-dark\" src=\"../images/Wallpaper-dark.png\" alt=\"wallpaper\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Wallpaper","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./sidecategory.css\"\r\n\r\n\r\nconst Sidecategory = ({ data, count, location }) => {\r\n    const isRoot = location === \"/\" ? \"active\" : \"non-active\"\r\n    const categrs = data\r\n\r\n    return(\r\n    <>\r\n        <div className=\"sidecategory\">\r\n            <ol>\r\n                <li key=\"category_All\"><Link to=\"/\" className={isRoot}>All({count})</Link></li>\r\n                {categrs.map(cate => {\r\n                    const cn = cate.fieldValue === location ? \"active\" : \"non-active\"\r\n                    return (\r\n                        <li key={cate.fieldValue}><Link to=\"\" className={cn}>{cate.fieldValue}({cate.totalCount})</Link></li>\r\n                    )\r\n                })}\r\n            </ol>\r\n        </div>\r\n    </>\r\n    )\r\n\r\n}\r\n\r\nexport default Sidecategory","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./postcard.css\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\n\r\n\r\nconst postcard = (args) => {\r\n    const post = args.post\r\n    const title = post.frontmatter.title || post.fields.slug\r\n    let thumb\r\n    if (post.frontmatter.thumbnail != null) {\r\n        thumb = <GatsbyImage image={post.frontmatter.thumbnail.childImageSharp.gatsbyImageData} alt=\"Thumbnail\"/>\r\n    }\r\n    else {\r\n        thumb = <></>\r\n    }\r\n    return (\r\n      <li>\r\n        <Link to={post.fields.slug} itemProp=\"url\">\r\n          <article\r\n            className=\"post-list-item\"\r\n            itemScope\r\n            itemType=\"http://schema.org/Article\"\r\n          >\r\n            <div className=\"post-list-leftside\">\r\n              <header>\r\n                <h2>\r\n                  <span itemProp=\"headline\">{title}</span>\r\n                </h2>\r\n                <small>{post.frontmatter.date}</small>\r\n              </header>\r\n              <section>\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: post.frontmatter.description || post.excerpt,\r\n                  }}\r\n                  itemProp=\"description\"\r\n                />\r\n              </section>\r\n            </div>\r\n            <div className=\"post-list-rightside\">{thumb}</div>\r\n          </article>\r\n        </Link>\r\n      </li>\r\n    )\r\n}\r\n\r\nexport default postcard","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Nav from \"../components/nav\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Sidecategory from \"../components/sidecategory\"\r\nimport Postcard from \"../components/postcard\"\r\nimport Wallpaper from \"../components/wallpaper\"\r\n\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n  const categories = data.allMarkdownRemark.group\r\n  const totcount = data.allMarkdownRemark.totalCount\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout>\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Nav categories={categories} count={totcount} location=\"/\"/>\r\n      <Wallpaper/>\r\n      <div className=\"box37\">\r\n        <Sidecategory data={categories} count={totcount} location=\"/\"/>\r\n        <ol style={{ listStyle: `none` }}>\r\n          {posts.map((post, index) => (\r\n            <Postcard post={post} key={index}/>\r\n            ))}\r\n        </ol>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = () => <Seo title=\"All posts\" />\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        excerpt(pruneLength: 100)\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          category\r\n          thumbnail{\r\n            childImageSharp{\r\n              gatsbyImageData\r\n            }\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n      group(field: { frontmatter: { category: SELECT }}) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["className","S","class","src","alt","data","count","location","isRoot","categrs","key","Link","to","map","cate","cn","fieldValue","totalCount","args","post","title","frontmatter","fields","slug","thumb","thumbnail","G","image","childImageSharp","gatsbyImageData","itemProp","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt","site","siteMetadata","posts","allMarkdownRemark","nodes","categories","group","totcount","length","style","listStyle","index","Head"],"sourceRoot":""}