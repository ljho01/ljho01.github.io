{"version":3,"file":"component---src-templates-blog-index-js-71930d958b06ae09c055.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/@notionhq/client/build/src/Client.js","webpack://gatsby-starter-blog/./node_modules/@notionhq/client/build/src/api-endpoints.js","webpack://gatsby-starter-blog/./node_modules/@notionhq/client/build/src/errors.js","webpack://gatsby-starter-blog/./node_modules/@notionhq/client/build/src/helpers.js","webpack://gatsby-starter-blog/./node_modules/@notionhq/client/build/src/index.js","webpack://gatsby-starter-blog/./node_modules/@notionhq/client/build/src/logging.js","webpack://gatsby-starter-blog/./node_modules/@notionhq/client/build/src/utils.js","webpack://gatsby-starter-blog/./src/components/wallpaper.js","webpack://gatsby-starter-blog/./src/components/sidecategory.js","webpack://gatsby-starter-blog/./src/components/postcard.js","webpack://gatsby-starter-blog/./src/notion_api.js","webpack://gatsby-starter-blog/./src/templates/blog-index.js","webpack://gatsby-starter-blog/./node_modules/node-fetch/browser.js"],"sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Client_auth, _Client_logLevel, _Client_logger, _Client_prefixUrl, _Client_timeoutMs, _Client_notionVersion, _Client_fetch, _Client_agent, _Client_userAgent;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logging_1 = require(\"./logging\");\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"./utils\");\nconst api_endpoints_1 = require(\"./api-endpoints\");\nconst node_fetch_1 = require(\"node-fetch\");\nconst package_json_1 = require(\"../package.json\");\nclass Client {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f;\n        _Client_auth.set(this, void 0);\n        _Client_logLevel.set(this, void 0);\n        _Client_logger.set(this, void 0);\n        _Client_prefixUrl.set(this, void 0);\n        _Client_timeoutMs.set(this, void 0);\n        _Client_notionVersion.set(this, void 0);\n        _Client_fetch.set(this, void 0);\n        _Client_agent.set(this, void 0);\n        _Client_userAgent.set(this, void 0);\n        /*\n         * Notion API endpoints\n         */\n        this.blocks = {\n            /**\n             * Retrieve block\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getBlock.path(args),\n                    method: api_endpoints_1.getBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update block\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updateBlock.path(args),\n                    method: api_endpoints_1.updateBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updateBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updateBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Delete block\n             */\n            delete: (args) => {\n                return this.request({\n                    path: api_endpoints_1.deleteBlock.path(args),\n                    method: api_endpoints_1.deleteBlock.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.deleteBlock.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.deleteBlock.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            children: {\n                /**\n                 * Append block children\n                 */\n                append: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.appendBlockChildren.path(args),\n                        method: api_endpoints_1.appendBlockChildren.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.appendBlockChildren.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.appendBlockChildren.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n                /**\n                 * Retrieve block children\n                 */\n                list: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.listBlockChildren.path(args),\n                        method: api_endpoints_1.listBlockChildren.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.listBlockChildren.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.listBlockChildren.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n            },\n        };\n        this.databases = {\n            /**\n             * List databases\n             *\n             * @deprecated Please use `search`\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listDatabases.path(),\n                    method: api_endpoints_1.listDatabases.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listDatabases.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listDatabases.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a database\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getDatabase.path(args),\n                    method: api_endpoints_1.getDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Query a database\n             */\n            query: (args) => {\n                return this.request({\n                    path: api_endpoints_1.queryDatabase.path(args),\n                    method: api_endpoints_1.queryDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.queryDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.queryDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Create a database\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createDatabase.path(),\n                    method: api_endpoints_1.createDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update a database\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updateDatabase.path(args),\n                    method: api_endpoints_1.updateDatabase.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updateDatabase.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updateDatabase.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.pages = {\n            /**\n             * Create a page\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createPage.path(),\n                    method: api_endpoints_1.createPage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createPage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createPage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Retrieve a page\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getPage.path(args),\n                    method: api_endpoints_1.getPage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getPage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getPage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Update page properties\n             */\n            update: (args) => {\n                return this.request({\n                    path: api_endpoints_1.updatePage.path(args),\n                    method: api_endpoints_1.updatePage.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.updatePage.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.updatePage.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            properties: {\n                /**\n                 * Retrieve page property\n                 */\n                retrieve: (args) => {\n                    return this.request({\n                        path: api_endpoints_1.getPageProperty.path(args),\n                        method: api_endpoints_1.getPageProperty.method,\n                        query: (0, utils_1.pick)(args, api_endpoints_1.getPageProperty.queryParams),\n                        body: (0, utils_1.pick)(args, api_endpoints_1.getPageProperty.bodyParams),\n                        auth: args === null || args === void 0 ? void 0 : args.auth,\n                    });\n                },\n            },\n        };\n        this.users = {\n            /**\n             * Retrieve a user\n             */\n            retrieve: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getUser.path(args),\n                    method: api_endpoints_1.getUser.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getUser.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getUser.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List all users\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listUsers.path(),\n                    method: api_endpoints_1.listUsers.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listUsers.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listUsers.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * Get details about bot\n             */\n            me: (args) => {\n                return this.request({\n                    path: api_endpoints_1.getSelf.path(),\n                    method: api_endpoints_1.getSelf.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.getSelf.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.getSelf.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        this.comments = {\n            /**\n             * Create a comment\n             */\n            create: (args) => {\n                return this.request({\n                    path: api_endpoints_1.createComment.path(),\n                    method: api_endpoints_1.createComment.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.createComment.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.createComment.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n            /**\n             * List comments\n             */\n            list: (args) => {\n                return this.request({\n                    path: api_endpoints_1.listComments.path(),\n                    method: api_endpoints_1.listComments.method,\n                    query: (0, utils_1.pick)(args, api_endpoints_1.listComments.queryParams),\n                    body: (0, utils_1.pick)(args, api_endpoints_1.listComments.bodyParams),\n                    auth: args === null || args === void 0 ? void 0 : args.auth,\n                });\n            },\n        };\n        /**\n         * Search\n         */\n        this.search = (args) => {\n            return this.request({\n                path: api_endpoints_1.search.path(),\n                method: api_endpoints_1.search.method,\n                query: (0, utils_1.pick)(args, api_endpoints_1.search.queryParams),\n                body: (0, utils_1.pick)(args, api_endpoints_1.search.bodyParams),\n                auth: args === null || args === void 0 ? void 0 : args.auth,\n            });\n        };\n        __classPrivateFieldSet(this, _Client_auth, options === null || options === void 0 ? void 0 : options.auth, \"f\");\n        __classPrivateFieldSet(this, _Client_logLevel, (_a = options === null || options === void 0 ? void 0 : options.logLevel) !== null && _a !== void 0 ? _a : logging_1.LogLevel.WARN, \"f\");\n        __classPrivateFieldSet(this, _Client_logger, (_b = options === null || options === void 0 ? void 0 : options.logger) !== null && _b !== void 0 ? _b : (0, logging_1.makeConsoleLogger)(package_json_1.name), \"f\");\n        __classPrivateFieldSet(this, _Client_prefixUrl, ((_c = options === null || options === void 0 ? void 0 : options.baseUrl) !== null && _c !== void 0 ? _c : \"https://api.notion.com\") + \"/v1/\", \"f\");\n        __classPrivateFieldSet(this, _Client_timeoutMs, (_d = options === null || options === void 0 ? void 0 : options.timeoutMs) !== null && _d !== void 0 ? _d : 60000, \"f\");\n        __classPrivateFieldSet(this, _Client_notionVersion, (_e = options === null || options === void 0 ? void 0 : options.notionVersion) !== null && _e !== void 0 ? _e : Client.defaultNotionVersion, \"f\");\n        __classPrivateFieldSet(this, _Client_fetch, (_f = options === null || options === void 0 ? void 0 : options.fetch) !== null && _f !== void 0 ? _f : node_fetch_1.default, \"f\");\n        __classPrivateFieldSet(this, _Client_agent, options === null || options === void 0 ? void 0 : options.agent, \"f\");\n        __classPrivateFieldSet(this, _Client_userAgent, `notionhq-client/${package_json_1.version}`, \"f\");\n    }\n    /**\n     * Sends a request.\n     *\n     * @param path\n     * @param method\n     * @param query\n     * @param body\n     * @returns\n     */\n    async request({ path, method, query, body, auth, }) {\n        this.log(logging_1.LogLevel.INFO, \"request start\", { method, path });\n        // If the body is empty, don't send the body in the HTTP request\n        const bodyAsJsonString = !body || Object.entries(body).length === 0\n            ? undefined\n            : JSON.stringify(body);\n        const url = new URL(`${__classPrivateFieldGet(this, _Client_prefixUrl, \"f\")}${path}`);\n        if (query) {\n            for (const [key, value] of Object.entries(query)) {\n                if (value !== undefined) {\n                    if (Array.isArray(value)) {\n                        value.forEach(val => url.searchParams.append(key, String(val)));\n                    }\n                    else {\n                        url.searchParams.append(key, String(value));\n                    }\n                }\n            }\n        }\n        const headers = {\n            ...this.authAsHeaders(auth),\n            \"Notion-Version\": __classPrivateFieldGet(this, _Client_notionVersion, \"f\"),\n            \"user-agent\": __classPrivateFieldGet(this, _Client_userAgent, \"f\"),\n        };\n        if (bodyAsJsonString !== undefined) {\n            headers[\"content-type\"] = \"application/json\";\n        }\n        try {\n            const response = await errors_1.RequestTimeoutError.rejectAfterTimeout(__classPrivateFieldGet(this, _Client_fetch, \"f\").call(this, url.toString(), {\n                method: method.toUpperCase(),\n                headers,\n                body: bodyAsJsonString,\n                agent: __classPrivateFieldGet(this, _Client_agent, \"f\"),\n            }), __classPrivateFieldGet(this, _Client_timeoutMs, \"f\"));\n            const responseText = await response.text();\n            if (!response.ok) {\n                throw (0, errors_1.buildRequestError)(response, responseText);\n            }\n            const responseJson = JSON.parse(responseText);\n            this.log(logging_1.LogLevel.INFO, `request success`, { method, path });\n            return responseJson;\n        }\n        catch (error) {\n            if (!(0, errors_1.isNotionClientError)(error)) {\n                throw error;\n            }\n            // Log the error if it's one of our known error types\n            this.log(logging_1.LogLevel.WARN, `request fail`, {\n                code: error.code,\n                message: error.message,\n            });\n            if ((0, errors_1.isHTTPResponseError)(error)) {\n                // The response body may contain sensitive information so it is logged separately at the DEBUG level\n                this.log(logging_1.LogLevel.DEBUG, `failed response body`, {\n                    body: error.body,\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Emits a log message to the console.\n     *\n     * @param level The level for this message\n     * @param args Arguments to send to the console\n     */\n    log(level, message, extraInfo) {\n        if ((0, logging_1.logLevelSeverity)(level) >= (0, logging_1.logLevelSeverity)(__classPrivateFieldGet(this, _Client_logLevel, \"f\"))) {\n            __classPrivateFieldGet(this, _Client_logger, \"f\").call(this, level, message, extraInfo);\n        }\n    }\n    /**\n     * Transforms an API key or access token into a headers object suitable for an HTTP request.\n     *\n     * This method uses the instance's value as the default when the input is undefined. If neither are defined, it returns\n     * an empty object\n     *\n     * @param auth API key or access token\n     * @returns headers key-value object\n     */\n    authAsHeaders(auth) {\n        const headers = {};\n        const authHeaderValue = auth !== null && auth !== void 0 ? auth : __classPrivateFieldGet(this, _Client_auth, \"f\");\n        if (authHeaderValue !== undefined) {\n            headers[\"authorization\"] = `Bearer ${authHeaderValue}`;\n        }\n        return headers;\n    }\n}\nexports.default = Client;\n_Client_auth = new WeakMap(), _Client_logLevel = new WeakMap(), _Client_logger = new WeakMap(), _Client_prefixUrl = new WeakMap(), _Client_timeoutMs = new WeakMap(), _Client_notionVersion = new WeakMap(), _Client_fetch = new WeakMap(), _Client_agent = new WeakMap(), _Client_userAgent = new WeakMap();\nClient.defaultNotionVersion = \"2022-06-28\";\n//# sourceMappingURL=Client.js.map","\"use strict\";\n// cspell:disable-file\n// Note: This is a generated file.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.listComments = exports.createComment = exports.search = exports.createDatabase = exports.listDatabases = exports.queryDatabase = exports.updateDatabase = exports.getDatabase = exports.appendBlockChildren = exports.listBlockChildren = exports.deleteBlock = exports.updateBlock = exports.getBlock = exports.getPageProperty = exports.updatePage = exports.getPage = exports.createPage = exports.listUsers = exports.getUser = exports.getSelf = void 0;\nexports.getSelf = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [],\n    path: () => `users/me`,\n};\nexports.getUser = {\n    method: \"get\",\n    pathParams: [\"user_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `users/${p.user_id}`,\n};\nexports.listUsers = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `users`,\n};\nexports.createPage = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"parent\", \"properties\", \"icon\", \"cover\", \"content\", \"children\"],\n    path: () => `pages`,\n};\nexports.getPage = {\n    method: \"get\",\n    pathParams: [\"page_id\"],\n    queryParams: [\"filter_properties\"],\n    bodyParams: [],\n    path: (p) => `pages/${p.page_id}`,\n};\nexports.updatePage = {\n    method: \"patch\",\n    pathParams: [\"page_id\"],\n    queryParams: [],\n    bodyParams: [\"properties\", \"icon\", \"cover\", \"archived\"],\n    path: (p) => `pages/${p.page_id}`,\n};\nexports.getPageProperty = {\n    method: \"get\",\n    pathParams: [\"page_id\", \"property_id\"],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: (p) => `pages/${p.page_id}/properties/${p.property_id}`,\n};\nexports.getBlock = {\n    method: \"get\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.updateBlock = {\n    method: \"patch\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [\n        \"embed\",\n        \"type\",\n        \"archived\",\n        \"bookmark\",\n        \"image\",\n        \"video\",\n        \"pdf\",\n        \"file\",\n        \"audio\",\n        \"code\",\n        \"equation\",\n        \"divider\",\n        \"breadcrumb\",\n        \"table_of_contents\",\n        \"link_to_page\",\n        \"table_row\",\n        \"heading_1\",\n        \"heading_2\",\n        \"heading_3\",\n        \"paragraph\",\n        \"bulleted_list_item\",\n        \"numbered_list_item\",\n        \"quote\",\n        \"to_do\",\n        \"toggle\",\n        \"template\",\n        \"callout\",\n        \"synced_block\",\n        \"table\",\n    ],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.deleteBlock = {\n    method: \"delete\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}`,\n};\nexports.listBlockChildren = {\n    method: \"get\",\n    pathParams: [\"block_id\"],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: (p) => `blocks/${p.block_id}/children`,\n};\nexports.appendBlockChildren = {\n    method: \"patch\",\n    pathParams: [\"block_id\"],\n    queryParams: [],\n    bodyParams: [\"children\"],\n    path: (p) => `blocks/${p.block_id}/children`,\n};\nexports.getDatabase = {\n    method: \"get\",\n    pathParams: [\"database_id\"],\n    queryParams: [],\n    bodyParams: [],\n    path: (p) => `databases/${p.database_id}`,\n};\nexports.updateDatabase = {\n    method: \"patch\",\n    pathParams: [\"database_id\"],\n    queryParams: [],\n    bodyParams: [\n        \"title\",\n        \"description\",\n        \"icon\",\n        \"cover\",\n        \"properties\",\n        \"is_inline\",\n        \"archived\",\n    ],\n    path: (p) => `databases/${p.database_id}`,\n};\nexports.queryDatabase = {\n    method: \"post\",\n    pathParams: [\"database_id\"],\n    queryParams: [\"filter_properties\"],\n    bodyParams: [\"sorts\", \"filter\", \"start_cursor\", \"page_size\", \"archived\"],\n    path: (p) => `databases/${p.database_id}/query`,\n};\nexports.listDatabases = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `databases`,\n};\nexports.createDatabase = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\n        \"parent\",\n        \"properties\",\n        \"icon\",\n        \"cover\",\n        \"title\",\n        \"description\",\n        \"is_inline\",\n    ],\n    path: () => `databases`,\n};\nexports.search = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"sort\", \"query\", \"start_cursor\", \"page_size\", \"filter\"],\n    path: () => `search`,\n};\nexports.createComment = {\n    method: \"post\",\n    pathParams: [],\n    queryParams: [],\n    bodyParams: [\"parent\", \"rich_text\", \"discussion_id\"],\n    path: () => `comments`,\n};\nexports.listComments = {\n    method: \"get\",\n    pathParams: [],\n    queryParams: [\"block_id\", \"start_cursor\", \"page_size\"],\n    bodyParams: [],\n    path: () => `comments`,\n};\n//# sourceMappingURL=api-endpoints.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildRequestError = exports.APIResponseError = exports.UnknownHTTPResponseError = exports.isHTTPResponseError = exports.RequestTimeoutError = exports.isNotionClientError = exports.ClientErrorCode = exports.APIErrorCode = void 0;\nconst utils_1 = require(\"./utils\");\n/**\n * Error codes returned in responses from the API.\n */\nvar APIErrorCode;\n(function (APIErrorCode) {\n    APIErrorCode[\"Unauthorized\"] = \"unauthorized\";\n    APIErrorCode[\"RestrictedResource\"] = \"restricted_resource\";\n    APIErrorCode[\"ObjectNotFound\"] = \"object_not_found\";\n    APIErrorCode[\"RateLimited\"] = \"rate_limited\";\n    APIErrorCode[\"InvalidJSON\"] = \"invalid_json\";\n    APIErrorCode[\"InvalidRequestURL\"] = \"invalid_request_url\";\n    APIErrorCode[\"InvalidRequest\"] = \"invalid_request\";\n    APIErrorCode[\"ValidationError\"] = \"validation_error\";\n    APIErrorCode[\"ConflictError\"] = \"conflict_error\";\n    APIErrorCode[\"InternalServerError\"] = \"internal_server_error\";\n    APIErrorCode[\"ServiceUnavailable\"] = \"service_unavailable\";\n})(APIErrorCode = exports.APIErrorCode || (exports.APIErrorCode = {}));\n/**\n * Error codes generated for client errors.\n */\nvar ClientErrorCode;\n(function (ClientErrorCode) {\n    ClientErrorCode[\"RequestTimeout\"] = \"notionhq_client_request_timeout\";\n    ClientErrorCode[\"ResponseError\"] = \"notionhq_client_response_error\";\n})(ClientErrorCode = exports.ClientErrorCode || (exports.ClientErrorCode = {}));\n/**\n * Base error type.\n */\nclass NotionClientErrorBase extends Error {\n}\n/**\n * @param error any value, usually a caught error.\n * @returns `true` if error is a `NotionClientError`.\n */\nfunction isNotionClientError(error) {\n    return (0, utils_1.isObject)(error) && error instanceof NotionClientErrorBase;\n}\nexports.isNotionClientError = isNotionClientError;\n/**\n * Narrows down the types of a NotionClientError.\n * @param error any value, usually a caught error.\n * @param codes an object mapping from possible error codes to `true`\n * @returns `true` if error is a `NotionClientError` with a code in `codes`.\n */\nfunction isNotionClientErrorWithCode(error, codes) {\n    return isNotionClientError(error) && error.code in codes;\n}\n/**\n * Error thrown by the client if a request times out.\n */\nclass RequestTimeoutError extends NotionClientErrorBase {\n    constructor(message = \"Request to Notion API has timed out\") {\n        super(message);\n        this.code = ClientErrorCode.RequestTimeout;\n        this.name = \"RequestTimeoutError\";\n    }\n    static isRequestTimeoutError(error) {\n        return isNotionClientErrorWithCode(error, {\n            [ClientErrorCode.RequestTimeout]: true,\n        });\n    }\n    static rejectAfterTimeout(promise, timeoutMS) {\n        return new Promise((resolve, reject) => {\n            const timeoutId = setTimeout(() => {\n                reject(new RequestTimeoutError());\n            }, timeoutMS);\n            promise\n                .then(resolve)\n                .catch(reject)\n                .then(() => clearTimeout(timeoutId));\n        });\n    }\n}\nexports.RequestTimeoutError = RequestTimeoutError;\nclass HTTPResponseError extends NotionClientErrorBase {\n    constructor(args) {\n        super(args.message);\n        this.name = \"HTTPResponseError\";\n        const { code, status, headers, rawBodyText } = args;\n        this.code = code;\n        this.status = status;\n        this.headers = headers;\n        this.body = rawBodyText;\n    }\n}\nconst httpResponseErrorCodes = {\n    [ClientErrorCode.ResponseError]: true,\n    [APIErrorCode.Unauthorized]: true,\n    [APIErrorCode.RestrictedResource]: true,\n    [APIErrorCode.ObjectNotFound]: true,\n    [APIErrorCode.RateLimited]: true,\n    [APIErrorCode.InvalidJSON]: true,\n    [APIErrorCode.InvalidRequestURL]: true,\n    [APIErrorCode.InvalidRequest]: true,\n    [APIErrorCode.ValidationError]: true,\n    [APIErrorCode.ConflictError]: true,\n    [APIErrorCode.InternalServerError]: true,\n    [APIErrorCode.ServiceUnavailable]: true,\n};\nfunction isHTTPResponseError(error) {\n    if (!isNotionClientErrorWithCode(error, httpResponseErrorCodes)) {\n        return false;\n    }\n    return true;\n}\nexports.isHTTPResponseError = isHTTPResponseError;\n/**\n * Error thrown if an API call responds with an unknown error code, or does not respond with\n * a property-formatted error.\n */\nclass UnknownHTTPResponseError extends HTTPResponseError {\n    constructor(args) {\n        var _a;\n        super({\n            ...args,\n            code: ClientErrorCode.ResponseError,\n            message: (_a = args.message) !== null && _a !== void 0 ? _a : `Request to Notion API failed with status: ${args.status}`,\n        });\n        this.name = \"UnknownHTTPResponseError\";\n    }\n    static isUnknownHTTPResponseError(error) {\n        return isNotionClientErrorWithCode(error, {\n            [ClientErrorCode.ResponseError]: true,\n        });\n    }\n}\nexports.UnknownHTTPResponseError = UnknownHTTPResponseError;\nconst apiErrorCodes = {\n    [APIErrorCode.Unauthorized]: true,\n    [APIErrorCode.RestrictedResource]: true,\n    [APIErrorCode.ObjectNotFound]: true,\n    [APIErrorCode.RateLimited]: true,\n    [APIErrorCode.InvalidJSON]: true,\n    [APIErrorCode.InvalidRequestURL]: true,\n    [APIErrorCode.InvalidRequest]: true,\n    [APIErrorCode.ValidationError]: true,\n    [APIErrorCode.ConflictError]: true,\n    [APIErrorCode.InternalServerError]: true,\n    [APIErrorCode.ServiceUnavailable]: true,\n};\n/**\n * A response from the API indicating a problem.\n * Use the `code` property to handle various kinds of errors. All its possible values are in `APIErrorCode`.\n */\nclass APIResponseError extends HTTPResponseError {\n    constructor() {\n        super(...arguments);\n        this.name = \"APIResponseError\";\n    }\n    static isAPIResponseError(error) {\n        return isNotionClientErrorWithCode(error, apiErrorCodes);\n    }\n}\nexports.APIResponseError = APIResponseError;\nfunction buildRequestError(response, bodyText) {\n    const apiErrorResponseBody = parseAPIErrorResponseBody(bodyText);\n    if (apiErrorResponseBody !== undefined) {\n        return new APIResponseError({\n            code: apiErrorResponseBody.code,\n            message: apiErrorResponseBody.message,\n            headers: response.headers,\n            status: response.status,\n            rawBodyText: bodyText,\n        });\n    }\n    return new UnknownHTTPResponseError({\n        message: undefined,\n        headers: response.headers,\n        status: response.status,\n        rawBodyText: bodyText,\n    });\n}\nexports.buildRequestError = buildRequestError;\nfunction parseAPIErrorResponseBody(body) {\n    if (typeof body !== \"string\") {\n        return;\n    }\n    let parsed;\n    try {\n        parsed = JSON.parse(body);\n    }\n    catch (parseError) {\n        return;\n    }\n    if (!(0, utils_1.isObject)(parsed) ||\n        typeof parsed[\"message\"] !== \"string\" ||\n        !isAPIErrorCode(parsed[\"code\"])) {\n        return;\n    }\n    return {\n        ...parsed,\n        code: parsed[\"code\"],\n        message: parsed[\"message\"],\n    };\n}\nfunction isAPIErrorCode(code) {\n    return typeof code === \"string\" && code in apiErrorCodes;\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFullComment = exports.isFullUser = exports.isFullDatabase = exports.isFullPage = exports.isFullBlock = exports.collectPaginatedAPI = exports.iteratePaginatedAPI = void 0;\n/**\n * Returns an async iterator over the results of any paginated Notion API.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * for await (const block of iteratePaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })) {\n *   // Do something with block.\n * }\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nasync function* iteratePaginatedAPI(listFn, firstPageArgs) {\n    let nextCursor = firstPageArgs.start_cursor;\n    do {\n        const response = await listFn({\n            ...firstPageArgs,\n            start_cursor: nextCursor,\n        });\n        yield* response.results;\n        nextCursor = response.next_cursor;\n    } while (nextCursor);\n}\nexports.iteratePaginatedAPI = iteratePaginatedAPI;\n/**\n * Collect all of the results of paginating an API into an in-memory array.\n *\n * Example (given a notion Client called `notion`):\n *\n * ```\n * const blocks = collectPaginatedAPI(notion.blocks.children.list, {\n *   block_id: parentBlockId,\n * })\n * // Do something with blocks.\n * ```\n *\n * @param listFn A bound function on the Notion client that represents a conforming paginated\n *   API. Example: `notion.blocks.children.list`.\n * @param firstPageArgs Arguments that should be passed to the API on the first and subsequent\n *   calls to the API. Any necessary `next_cursor` will be automatically populated by\n *   this function. Example: `{ block_id: \"<my block id>\" }`\n */\nasync function collectPaginatedAPI(listFn, firstPageArgs) {\n    const results = [];\n    for await (const item of iteratePaginatedAPI(listFn, firstPageArgs)) {\n        results.push(item);\n    }\n    return results;\n}\nexports.collectPaginatedAPI = collectPaginatedAPI;\n/**\n * @returns `true` if `response` is a full `BlockObjectResponse`.\n */\nfunction isFullBlock(response) {\n    return \"type\" in response;\n}\nexports.isFullBlock = isFullBlock;\n/**\n * @returns `true` if `response` is a full `PageObjectResponse`.\n */\nfunction isFullPage(response) {\n    return \"url\" in response;\n}\nexports.isFullPage = isFullPage;\n/**\n * @returns `true` if `response` is a full `DatabaseObjectResponse`.\n */\nfunction isFullDatabase(response) {\n    return \"title\" in response;\n}\nexports.isFullDatabase = isFullDatabase;\n/**\n * @returns `true` if `response` is a full `UserObjectResponse`.\n */\nfunction isFullUser(response) {\n    return \"type\" in response;\n}\nexports.isFullUser = isFullUser;\n/**\n * @returns `true` if `response` is a full `CommentObjectResponse`.\n */\nfunction isFullComment(response) {\n    return \"created_by\" in response;\n}\nexports.isFullComment = isFullComment;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFullComment = exports.isFullUser = exports.isFullPage = exports.isFullDatabase = exports.isFullBlock = exports.iteratePaginatedAPI = exports.collectPaginatedAPI = exports.isNotionClientError = exports.RequestTimeoutError = exports.UnknownHTTPResponseError = exports.APIResponseError = exports.ClientErrorCode = exports.APIErrorCode = exports.LogLevel = exports.Client = void 0;\nvar Client_1 = require(\"./Client\");\nObject.defineProperty(exports, \"Client\", { enumerable: true, get: function () { return Client_1.default; } });\nvar logging_1 = require(\"./logging\");\nObject.defineProperty(exports, \"LogLevel\", { enumerable: true, get: function () { return logging_1.LogLevel; } });\nvar errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"APIErrorCode\", { enumerable: true, get: function () { return errors_1.APIErrorCode; } });\nObject.defineProperty(exports, \"ClientErrorCode\", { enumerable: true, get: function () { return errors_1.ClientErrorCode; } });\nObject.defineProperty(exports, \"APIResponseError\", { enumerable: true, get: function () { return errors_1.APIResponseError; } });\nObject.defineProperty(exports, \"UnknownHTTPResponseError\", { enumerable: true, get: function () { return errors_1.UnknownHTTPResponseError; } });\nObject.defineProperty(exports, \"RequestTimeoutError\", { enumerable: true, get: function () { return errors_1.RequestTimeoutError; } });\n// Error helpers\nObject.defineProperty(exports, \"isNotionClientError\", { enumerable: true, get: function () { return errors_1.isNotionClientError; } });\nvar helpers_1 = require(\"./helpers\");\nObject.defineProperty(exports, \"collectPaginatedAPI\", { enumerable: true, get: function () { return helpers_1.collectPaginatedAPI; } });\nObject.defineProperty(exports, \"iteratePaginatedAPI\", { enumerable: true, get: function () { return helpers_1.iteratePaginatedAPI; } });\nObject.defineProperty(exports, \"isFullBlock\", { enumerable: true, get: function () { return helpers_1.isFullBlock; } });\nObject.defineProperty(exports, \"isFullDatabase\", { enumerable: true, get: function () { return helpers_1.isFullDatabase; } });\nObject.defineProperty(exports, \"isFullPage\", { enumerable: true, get: function () { return helpers_1.isFullPage; } });\nObject.defineProperty(exports, \"isFullUser\", { enumerable: true, get: function () { return helpers_1.isFullUser; } });\nObject.defineProperty(exports, \"isFullComment\", { enumerable: true, get: function () { return helpers_1.isFullComment; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logLevelSeverity = exports.makeConsoleLogger = exports.LogLevel = void 0;\nconst utils_1 = require(\"./utils\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"debug\";\n    LogLevel[\"INFO\"] = \"info\";\n    LogLevel[\"WARN\"] = \"warn\";\n    LogLevel[\"ERROR\"] = \"error\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nfunction makeConsoleLogger(name) {\n    return (level, message, extraInfo) => {\n        console[level](`${name} ${level}:`, message, extraInfo);\n    };\n}\nexports.makeConsoleLogger = makeConsoleLogger;\n/**\n * Transforms a log level into a comparable (numerical) value ordered by severity.\n */\nfunction logLevelSeverity(level) {\n    switch (level) {\n        case LogLevel.DEBUG:\n            return 20;\n        case LogLevel.INFO:\n            return 40;\n        case LogLevel.WARN:\n            return 60;\n        case LogLevel.ERROR:\n            return 80;\n        default:\n            return (0, utils_1.assertNever)(level);\n    }\n}\nexports.logLevelSeverity = logLevelSeverity;\n//# sourceMappingURL=logging.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isObject = exports.pick = exports.assertNever = void 0;\n/**\n * Utility for enforcing exhaustiveness checks in the type system.\n *\n * @see https://basarat.gitbook.io/typescript/type-system/discriminated-unions#throw-in-exhaustive-checks\n *\n * @param value The variable with no remaining values\n */\nfunction assertNever(value) {\n    throw new Error(`Unexpected value should never occur: ${value}`);\n}\nexports.assertNever = assertNever;\nfunction pick(base, keys) {\n    const entries = keys.map(key => [key, base === null || base === void 0 ? void 0 : base[key]]);\n    return Object.fromEntries(entries);\n}\nexports.pick = pick;\nfunction isObject(o) {\n    return typeof o === \"object\" && o !== null;\n}\nexports.isObject = isObject;\n//# sourceMappingURL=utils.js.map","import * as React from \"react\"\r\nimport \"./wallpaper.css\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Wallpaper = () => {\r\n    return (\r\n        <div className=\"wallpaperbox\">\r\n            <StaticImage class=\"wallpaper-light\" src={\"../images/Wallpaper-light.png\"} alt=\"wallpaper\"/>\r\n            <StaticImage class=\"wallpaper-dark\" src=\"../images/Wallpaper-dark.png\" alt=\"wallpaper\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Wallpaper","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./sidecategory.css\"\r\n\r\n\r\nconst Sidecategory = ({ data, count, location }) => {\r\n    const isRoot = location === \"/\" ? \"active\" : \"non-active\"\r\n    const categrs = data\r\n\r\n    return(\r\n    <>\r\n        <div className=\"sidecategory\">\r\n            <ol>\r\n                <li key=\"category_All\"><Link to=\"/\" className={isRoot}>All({count})</Link></li>\r\n                {categrs.map(cate => {\r\n                    const cn = cate.fieldValue === location ? \"active\" : \"non-active\"\r\n                    return (\r\n                        <li key={cate.fieldValue}><Link to=\"\" className={cn}>{cate.fieldValue}({cate.totalCount})</Link></li>\r\n                    )\r\n                })}\r\n            </ol>\r\n        </div>\r\n    </>\r\n    )\r\n\r\n}\r\n\r\nexport default Sidecategory","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./postcard.css\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\n\r\n\r\nconst postcard = (args) => {\r\n    const post = args.post\r\n    const title = post.frontmatter.title || post.fields.slug\r\n    let thumb\r\n    if (post.frontmatter.thumbnail != null) {\r\n        thumb = <GatsbyImage image={post.frontmatter.thumbnail.childImageSharp.gatsbyImageData} alt=\"Thumbnail\"/>\r\n    }\r\n    else {\r\n        thumb = <></>\r\n    }\r\n    return (\r\n      <li>\r\n        <Link to={post.fields.slug} itemProp=\"url\">\r\n          <article\r\n            className=\"post-list-item\"\r\n            itemScope\r\n            itemType=\"http://schema.org/Article\"\r\n          >\r\n            <div className=\"post-list-leftside\">\r\n              <header>\r\n                <h2>\r\n                  <span itemProp=\"headline\">{title}</span>\r\n                </h2>\r\n                <small>{post.frontmatter.date}</small>\r\n              </header>\r\n              <section>\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: post.frontmatter.description || post.excerpt,\r\n                  }}\r\n                  itemProp=\"description\"\r\n                />\r\n              </section>\r\n            </div>\r\n            <div className=\"post-list-rightside\">{thumb}</div>\r\n          </article>\r\n        </Link>\r\n      </li>\r\n    )\r\n}\r\n\r\nexport default postcard","const Client = require(\"@notionhq/client\").Client;\r\n\r\nconst notion = new Client({ auth: process.env.GATSBY_NOTION_API_KEY });\r\n\r\nexport const getDatabase = async (databaseId) => {\r\n    const response = await notion.databases.query({\r\n      database_id: databaseId,\r\n    });\r\n    return response.results;\r\n  };\r\n  \r\n\r\nexport const getPage = async (pageId) => {\r\n    const response = await notion.pages.retrieve({ page_id: pageId });\r\n    return response;\r\n  };\r\n\r\nexport const getBlocks = async (blockId) => {\r\n    const response = await notion.blocks.children.list({\r\n        block_id: blockId,\r\n        page_size: 50,\r\n    });\r\n    return response.results;\r\n};\r\n\r\n\r\nexport const test = async () => {\r\n    const response = await notion.databases.retrieve({ database_id: process.env.GATSBY_DB_ID });\r\n    console.log(response);\r\n}\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Nav from \"../components/nav\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Sidecategory from \"../components/sidecategory\"\r\nimport Postcard from \"../components/postcard\"\r\nimport Wallpaper from \"../components/wallpaper\"\r\nimport { test } from \"../notion_api\"\r\n\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  test()\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n  const categories = data.allMarkdownRemark.group\r\n  const totcount = data.allMarkdownRemark.totalCount\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout>\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Nav categories={categories} count={totcount} location=\"/\"/>\r\n      <Wallpaper/>\r\n      <div className=\"box37\">\r\n        <Sidecategory data={categories} count={totcount} location=\"/\"/>\r\n        <ol style={{ listStyle: `none` }}>\r\n          {posts.map((post, index) => (\r\n            <Postcard post={post} key={index}/>\r\n            ))}\r\n        </ol>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = () => <Seo title=\"All posts\" />\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        excerpt(pruneLength: 100)\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          category\r\n          thumbnail{\r\n            childImageSharp{\r\n              gatsbyImageData\r\n            }\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n      group(field: { frontmatter: { category: SELECT }}) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;"],"names":["_Client_auth","_Client_logLevel","_Client_logger","_Client_prefixUrl","_Client_timeoutMs","_Client_notionVersion","_Client_fetch","_Client_agent","_Client_userAgent","__classPrivateFieldSet","this","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","Object","defineProperty","exports","logging_1","errors_1","utils_1","api_endpoints_1","node_fetch_1","package_json_1","Client","constructor","options","_a","_b","_c","_d","_e","_f","blocks","retrieve","args","request","path","getBlock","method","query","pick","queryParams","body","bodyParams","auth","update","updateBlock","delete","deleteBlock","children","append","appendBlockChildren","list","listBlockChildren","databases","listDatabases","getDatabase","queryDatabase","create","createDatabase","updateDatabase","pages","createPage","getPage","updatePage","properties","getPageProperty","users","getUser","listUsers","me","getSelf","comments","createComment","listComments","search","logLevel","LogLevel","WARN","logger","makeConsoleLogger","name","baseUrl","timeoutMs","notionVersion","defaultNotionVersion","fetch","default","agent","version","async","log","INFO","bodyAsJsonString","entries","length","JSON","stringify","undefined","url","URL","key","Array","isArray","forEach","val","searchParams","String","headers","authAsHeaders","response","RequestTimeoutError","rejectAfterTimeout","toString","toUpperCase","responseText","text","ok","buildRequestError","responseJson","parse","error","isNotionClientError","code","message","isHTTPResponseError","DEBUG","level","extraInfo","logLevelSeverity","authHeaderValue","WeakMap","pathParams","p","user_id","page_id","property_id","block_id","database_id","APIResponseError","UnknownHTTPResponseError","ClientErrorCode","APIErrorCode","NotionClientErrorBase","Error","isObject","isNotionClientErrorWithCode","codes","super","RequestTimeout","static","promise","timeoutMS","Promise","resolve","reject","timeoutId","setTimeout","then","catch","clearTimeout","HTTPResponseError","status","rawBodyText","httpResponseErrorCodes","ResponseError","Unauthorized","RestrictedResource","ObjectNotFound","RateLimited","InvalidJSON","InvalidRequestURL","InvalidRequest","ValidationError","ConflictError","InternalServerError","ServiceUnavailable","apiErrorCodes","arguments","bodyText","apiErrorResponseBody","parsed","parseError","parseAPIErrorResponseBody","iteratePaginatedAPI","listFn","firstPageArgs","nextCursor","start_cursor","results","next_cursor","isFullComment","isFullUser","isFullDatabase","isFullPage","isFullBlock","collectPaginatedAPI","item","push","Client_1","enumerable","helpers_1","console","ERROR","assertNever","base","keys","map","fromEntries","o","className","S","class","src","alt","data","count","location","isRoot","categrs","Link","to","cate","cn","fieldValue","totalCount","post","title","frontmatter","fields","slug","thumb","thumbnail","G","image","childImageSharp","gatsbyImageData","itemProp","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt","notion","require","process","test","site","siteMetadata","posts","allMarkdownRemark","nodes","categories","group","totcount","style","listStyle","index","Head","global","self","window","getGlobal","module","bind","Headers","Request","Response"],"sourceRoot":""}