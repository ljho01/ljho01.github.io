<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[blog]]></description><link>https://ljh01.github.io/blog</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 20 Feb 2023 04:44:47 GMT</lastBuildDate><item><title><![CDATA[AI/ML/Clusturing, K-Means Algorithm]]></title><description><![CDATA[Unsupervised 이전까지는 모델에 정답이 포함된 데이터를 넣어줬다면 여기부터는 정답이 없는 데이터를 학습시키는 비지도 학습을 한다. K-Means Algorithm https://m.blog.naver.com/samsjang…]]></description><link>https://ljh01.github.io/blog/KMeans/</link><guid isPermaLink="false">https://ljh01.github.io/blog/KMeans/</guid><pubDate>Fri, 16 Dec 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;unsupervised&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#unsupervised&quot; aria-label=&quot;unsupervised permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unsupervised&lt;/h1&gt;
&lt;p&gt;이전까지는 모델에 정답이 포함된 데이터를 넣어줬다면 여기부터는 정답이 없는 데이터를 학습시키는 비지도 학습을 한다.&lt;/p&gt;
&lt;h1 id=&quot;k-means-algorithm&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#k-means-algorithm&quot; aria-label=&quot;k means algorithm permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;K-Means Algorithm&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/b4c878b4-17d2-421d-9981-8e6e98619e03/image.png&quot; alt=&quot;https://m.blog.naver.com/samsjang/221016339218&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;임의로 K개의 중심점을 정한다.&lt;/li&gt;
&lt;li&gt;각 데이터마다 가까운 점의 클러스터에 할당한다.&lt;/li&gt;
&lt;li&gt;클러스터의 평균값으로 중심점을 옮긴다.&lt;/li&gt;
&lt;li&gt;변화가 없을 때 까지 2~3 과정을 반복한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;약점: 2, 3번 과정에서 계산량이 많아 속도가 느림&lt;/p&gt;
&lt;p&gt;개선방법&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;차원축소를 한다.&lt;/li&gt;
&lt;li&gt;데이터를 선별해서 개수를 줄인다.&lt;/li&gt;
&lt;li&gt;대체 모델로 t-SNE(gpu가속을 사용함), GMM 등이 있다.(&lt;a href=&quot;https://3months.tistory.com/154&quot;&gt;https://3months.tistory.com/154&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;실습&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%8B%A4%EC%8A%B5&quot; aria-label=&quot;실습 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;실습&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;from sklearn import cluster
import numpy as np

X = np.array([[1, 4], [5, 1], [6, 4], [5, 3], [5, 1], [7, 3]])

kmeans = cluster.KMeans(n_clusters=2, random_state=0).fit(X)

print(kmeans.labels_)

kmeans.predict([[0, 1], [14, 5]])&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;n_clusters&lt;/code&gt;는 K값, &lt;code class=&quot;language-text&quot;&gt;random_state&lt;/code&gt;는 최초로 중심점을 찍는 랜덤시드이다.
&lt;code class=&quot;language-text&quot;&gt;kmeans.clusters_centers_&lt;/code&gt;를 보면 중심점을 뽑아낼 수 있다.
&lt;code class=&quot;language-text&quot;&gt;kmeans.labels_&lt;/code&gt;는 각 데이터들의 클러스터 번호를 출력한다.&lt;/p&gt;
&lt;p&gt;근데 중심점을 처음에 잘못찍으면 군집화자체가 이상해지는 경우가 있는데
&lt;code class=&quot;language-text&quot;&gt;cluster.KMeans()&lt;/code&gt; 안에 &lt;code class=&quot;language-text&quot;&gt;init=&apos;k-means++&apos;&lt;/code&gt;라는 속성이 숨어있어서 그렇게 안된다. &lt;code class=&quot;language-text&quot;&gt;init=&apos;random&apos;&lt;/code&gt;이라고 넣어보면 한번 확인해볼 수 있다.&lt;/p&gt;
&lt;p&gt;근데 데이터를 분류할 때 k를 어떻게 설정해야할까?&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AI/ML/K-Nearest Neighbor Algorithm]]></title><description><![CDATA[KNN 분류 모델의 일종(회귀모델도 있긴 있다). Gradient Boosting이나 C-SVM보다 성능이 뛰어나진 않지만 원리가 단순하다. https://www.javatpoint.com/k-nearest-neighbor-algorithm-for…]]></description><link>https://ljh01.github.io/blog/KNN/</link><guid isPermaLink="false">https://ljh01.github.io/blog/KNN/</guid><pubDate>Wed, 14 Dec 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;knn&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#knn&quot; aria-label=&quot;knn permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KNN&lt;/h1&gt;
&lt;p&gt;분류 모델의 일종(회귀모델도 있긴 있다). Gradient Boosting이나 C-SVM보다 성능이 뛰어나진 않지만 원리가 단순하다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/60df9bd4-2367-4e8a-80a9-efe006b0a388/image.png&quot; alt=&quot;https://www.javatpoint.com/k-nearest-neighbor-algorithm-for-machine-learning&quot;&gt;&lt;/p&gt;
&lt;p&gt;제일 가까운 k개의 원소에 대해 가장 비율이 높은 범주로 예측하는 것이다.
k값이 작을수록 오버피팅된다.&lt;/p&gt;
&lt;h2 id=&quot;실습&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%8B%A4%EC%8A%B5&quot; aria-label=&quot;실습 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;실습&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import numpy as np
import matplotlib
import matploblib.pyplot as plt
from sklearn import neighbors, datasets

iris = datasets.load_iris()
iris_x = iris.data
iris_y = iris.target

model = neighbors.KNeighborsClassifier(n_neighbors=7) # k = 7

model.fit(iris_x, iris_y)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[DS/힙(Heap)]]></title><description><![CDATA[힙 우선 순위가 있는 자료를 관리해야 하는데, 죄다 정렬을 하자니 시간복잡도가 올라간다. 반정렬을 통해 시간복잡도와 정렬 모두 잡는다. 모양 이진 트리 구조로 만들어진 정렬된 자료구조이다. root node…]]></description><link>https://ljh01.github.io/blog/Heap/</link><guid isPermaLink="false">https://ljh01.github.io/blog/Heap/</guid><pubDate>Fri, 09 Dec 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;힙&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%9E%99&quot; aria-label=&quot;힙 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;힙&lt;/h1&gt;
&lt;p&gt;우선 순위가 있는 자료를 관리해야 하는데, 죄다 정렬을 하자니 시간복잡도가 올라간다. 반정렬을 통해 시간복잡도와 정렬 모두 잡는다.&lt;/p&gt;
&lt;h2 id=&quot;모양&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AA%A8%EC%96%91&quot; aria-label=&quot;모양 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;모양&lt;/h2&gt;
&lt;p&gt;이진 트리 구조로 만들어진 정렬된 자료구조이다. root node가 최대 혹은 최솟값을 가지고 느슨한 정렬상태를 보인다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/88806247-77a6-44ae-a6da-c5cc8fb39963/image.png&quot; alt=&quot;https://namu.wiki/w/%ED%9E%99%20%ED%8A%B8%EB%A6%AC&quot;&gt;&lt;/p&gt;
&lt;p&gt;물론 이진트리를 일차원 배열로 구현한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/9dc98818-3d97-40e3-8aba-3541cf8577c4/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;이걸 다시 트리로 만들면&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/4d243f00-3800-466d-a41d-cd136aff4bb4/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;0-인덱스&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#0-%EC%9D%B8%EB%8D%B1%EC%8A%A4&quot; aria-label=&quot;0 인덱스 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;0 인덱스&lt;/h2&gt;
&lt;p&gt;인덱스0은 사용하지 않는다.
이진트리에서 밑의 자식에 접근하려면
&lt;code class=&quot;language-text&quot;&gt;index * 2&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;index * 2 + 1&lt;/code&gt; 이렇게 접근하는게 편한데 root node의 index가 0이라면
(0), (0, 1), (0, 1, 2, 3)
이런식으로 엉망이 된다. 반면 root node = 1이면
(1), (2, 3), (4, 5, 6, 7)
잘 작동할 것이다.&lt;/p&gt;
&lt;h2 id=&quot;데이터-삽입&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85&quot; aria-label=&quot;데이터 삽입 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 삽입&lt;/h2&gt;
&lt;p&gt;rote node가 최댓값이 되는 최대 힙을 기준으로
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/7cbc70a2-79a5-4d76-af8d-a4f44ea57939/image.png&quot; alt=&quot;&quot;&gt;
이런 트리가 있다고 하자. 여기서 데이터 11을 삽입한다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/cb987041-f0f7-4c98-bdcc-325686a6ebbb/image.png&quot; alt=&quot;&quot;&gt;
부모 노드와 비교하며 자리를 교환하면 된다.
4 &amp;#x3C; 11이므로 부모와 자리를 바꾼다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/be9ab71d-dff6-4e30-8844-cbf0a66f70ea/image.png&quot; alt=&quot;&quot;&gt;
7 &amp;#x3C; 11이므로 또 부모와 자리를 바꾼다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/072de6e6-bdbf-4ae9-b38b-73076e431206/image.png&quot; alt=&quot;&quot;&gt;
이제 부모보다 작으므로 끝&lt;/p&gt;
&lt;h2 id=&quot;데이터-삭제&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%AD%EC%A0%9C&quot; aria-label=&quot;데이터 삭제 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 삭제&lt;/h2&gt;
&lt;p&gt;root node만 삭제할 수 있다. 아까의 힙에서 그대로 삭제해보자.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/cf03d4c6-8c25-43e8-9fe4-1eb43be92ec3/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;그 다음 마지막 노드를 맨 앞으로 옮긴다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/50cd4dd2-ab94-40d0-93b4-98077b0bf552/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;이제 자식 노드 중 큰 노드와 비교해서 교환하는 방식으로 내려간다.&lt;/p&gt;
&lt;p&gt;4 &amp;#x3C; 14이므로 바꾼다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/73219b41-5f52-4129-9dae-0d5c680e8d3e/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;4 &amp;#x3C; 10이므로 바꾼다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/bd8cdf9d-a16c-4043-845b-b326f6e92798/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;꺼무위키 외 여러개 참고함&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Algoritm/진법]]></title><description><![CDATA[deimal a를 n진법 수로 변환 스트링을 하나 만들고 a를 n으로 나눈다. 나머지를 스트링 앞(왼쪽 끝)에 붙이고 몫에다 다시 반복한다.]]></description><link>https://ljh01.github.io/blog/진법/</link><guid isPermaLink="false">https://ljh01.github.io/blog/진법/</guid><pubDate>Thu, 08 Dec 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;deimal-a를-n진법-수로-변환&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#deimal-a%EB%A5%BC-n%EC%A7%84%EB%B2%95-%EC%88%98%EB%A1%9C-%EB%B3%80%ED%99%98&quot; aria-label=&quot;deimal a를 n진법 수로 변환 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;deimal a를 n진법 수로 변환&lt;/h1&gt;
&lt;p&gt;스트링을 하나 만들고 a를 n으로 나눈다. 나머지를 스트링 앞(왼쪽 끝)에 붙이고 몫에다 다시 반복한다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AI/ML/SVM(Support Vector Machine)]]></title><description><![CDATA[Support Vector Machine Gradient Boosting(의사결정나무 기반 모델)과 같이 가장 강력한 머신러닝 모델 중 하나이다. 회귀, 분류 둘다 가능하다. 개념(분류 모델) https://static.javatpoint.com…]]></description><link>https://ljh01.github.io/blog/SVM/</link><guid isPermaLink="false">https://ljh01.github.io/blog/SVM/</guid><pubDate>Wed, 07 Dec 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;support-vector-machine&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#support-vector-machine&quot; aria-label=&quot;support vector machine permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support Vector Machine&lt;/h1&gt;
&lt;p&gt;Gradient Boosting(의사결정나무 기반 모델)과 같이 가장 강력한 머신러닝 모델 중 하나이다. 회귀, 분류 둘다 가능하다.&lt;/p&gt;
&lt;h2 id=&quot;개념분류-모델&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B0%9C%EB%85%90%EB%B6%84%EB%A5%98-%EB%AA%A8%EB%8D%B8&quot; aria-label=&quot;개념분류 모델 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;개념(분류 모델)&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/19dff13f-a99a-4e48-87b0-4e8169240bbc/image.png&quot; alt=&quot;https://static.javatpoint.com/tutorial/machine-learning/images/support-vector-machine-algorithm.png&quot;&gt;
클래스 간 margin을 최대화하는 결정경계 Decision Boundary를 찾는 것이 핵심이다. 경계에서 가까운 데이터를 Support vector라고 한다.&lt;/p&gt;
&lt;p&gt;positive plane과 negative plane 사이의 최소거리를 margin이라고 한다.&lt;/p&gt;
&lt;p&gt;positive plane, negative plane은 각각 support vector를 지난다&lt;/p&gt;
&lt;h3 id=&quot;soft-margin-svm-hard-margin-svm&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#soft-margin-svm-hard-margin-svm&quot; aria-label=&quot;soft margin svm hard margin svm permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Soft Margin SVM, Hard Margin SVM&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/03548725-c4fc-49e9-8ed3-5710f87f81e7/image.png&quot; alt=&quot;https://towardsdatascience.com/support-vector-machines-soft-margin-formulation-and-kernel-trick-4c9729dc8efe&quot;&gt;&lt;/p&gt;
&lt;p&gt;경계를 넘는 데이터가 있으면 어떻게 Decision Boundary를 만들까? 기존 SVM의 목적함수에 약간의 오차를 허용하면 된다. 이를 Soft Margin SVM이라고 한다.(이전은 Hard Margin)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://yngie-c.github.io/machine%20learning/2021/03/13/soft_margin_svm/&quot;&gt;https://yngie-c.github.io/machine%20learning/2021/03/13/soft_margin_svm/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;요기 c-svm의 목적 함수를 참고하면, w는 마진, xi는 일탈한 데이터와 p-plane, n-plane중 먼 것 과의 거리를 나타낸다. C는 가중치(Hyper-Parameter)다. 2/w인 margin과 달리 w^^2를 쓰는 이유는 미분하기 편해서 라고..&lt;/p&gt;
&lt;p&gt;이를 통해 모델의 Robustness가 올라간다. 이상치의 영향을 덜 받는다는 뜻이다.&lt;/p&gt;
&lt;h3 id=&quot;kernel-svm&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#kernel-svm&quot; aria-label=&quot;kernel svm permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kernel SVM&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/288507f6-9c50-4678-a8d9-b8a9cfd2fb1d/image.png&quot; alt=&quot;Implementation and Analysis of Power Analysis Attack Using Multi-Layer
Perceptron Method Hongpil Kwon, DaeHyeon Bae, Jaecheol Ha Hoseo University&quot;&gt;&lt;/p&gt;
&lt;p&gt;위와 같이 선형 분리 불가능(Linearly-Unseparable)한 데이터의 경계를 찾아내기 위해 Kernel SVM이 등장한다. 한 축에있는 데이터를 조작하여 새로운 z축을 만들어내고 입체화해서 결정 경계를 만든 후 다시 2차원으로 돌아오는 방식이다. 그러면 타원형 결정 경계가 생긴다.&lt;/p&gt;
&lt;p&gt;여기서 기존 데이터를 고차원으로 옮길 때 사용되는 함수를 커널 함수라고 한다. 이 커널 함수는 사람 마음대로 결정하는 것(Hyper-Parameter)이다. 물론 다항 커널, 가우시안 커널 등 이미 잘 만들어진 커널들이 많다. (&lt;a href=&quot;https://sanghyu.tistory.com/14&quot;&gt;https://sanghyu.tistory.com/14&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;기존 데이터를 조작해 새롭게 데이터를 만들어낸다는 점에서 딥러닝의 layer개념과 비슷하다. 근데 딥러닝에선 컴퓨터가 알아서 계산하지만 여기선 사람이 커널을 정해야 한다. 그래서 layer를 Learnable Kernel이라고도 한다. (&lt;a href=&quot;https://developers.google.com/machine-learning/crash-course/feature-crosses/video-lecture&quot;&gt;https://developers.google.com/machine-learning/crash-course/feature-crosses/video-lecture&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&quot;실습&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%8B%A4%EC%8A%B5&quot; aria-label=&quot;실습 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;실습&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;from sklearn.svm import SVC

clf = SVC(C=10, kernel=&apos;rbf, gamma=0.1)
clf.fit(x, y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;보통 &lt;code class=&quot;language-text&quot;&gt;SVC&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;SVR&lt;/code&gt;을 많이 사용한다. &lt;code class=&quot;language-text&quot;&gt;LinearSVC&lt;/code&gt;같은 것도 있음.
Hyper-Parameter&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C: 목적함수에서 xi의 총합에 곱하는 계수. 클 수록 아웃라이어들에 민감해짐(오버피팅).&lt;/li&gt;
&lt;li&gt;kernel: 커널함수를 정할 수 있다. &apos;linear&apos;, &apos;poly&apos;, &apos;rbf&apos; 등등 있는데 가우시안 커널 (Radial Basis Function)을 많이 사용한다고함&lt;/li&gt;
&lt;li&gt;gamma: 가우시안 커널에서 1/r. 커질수록 좀더 구체적이고 작은 타원모양이 나오고 작을 수록 둔하고 큰 타원모양이 나온다. (2차원에서)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/2c736727-d834-4e6a-b3bb-9ad6c66492bc/image.png&quot; alt=&quot;https://bskyvision.com/entry/%EC%84%9C%ED%8F%AC%ED%8A%B8-%EB%B2%A1%ED%84%B0-%EB%A8%B8%EC%8B%A0SVM%EC%9D%98-%EC%82%AC%EC%9A%A9%EC%9E%90%EB%A1%9C%EC%84%9C-%EA%BC%AD-%EC%95%8C%EC%95%84%EC%95%BC%ED%95%A0-%EA%B2%83%EB%93%A4-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-C%EC%99%80-gamma&quot;&gt;&lt;/p&gt;
&lt;p&gt;C와 gamma모두 커질수록 오버피팅되는 경향이 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SVM은 X데이터들 간 스케일이 차이가 많이나면 성능이 잘 안나온다&lt;/strong&gt;
예를 들면 어떤 열은 10&lt;del&gt;100사이인데 어떤 열은 0.0001&lt;/del&gt;0.01인 경우&lt;/p&gt;
&lt;h2 id=&quot;feature-scaling&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#feature-scaling&quot; aria-label=&quot;feature scaling permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature Scaling&lt;/h2&gt;
&lt;h3 id=&quot;min-max-normalization&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#min-max-normalization&quot; aria-label=&quot;min max normalization permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;min-max normalization&lt;/h3&gt;
&lt;p&gt;(x-min)/(max-min) 이렇게 0~1 사이에서 값을 조정한다.
SVM뿐만 아니라 다른 모델에도 성능을 올려준다.
Tree기반 모델들은 그닥 필요하지 않다. 해도 상관은 없다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;sc = sklearn.preprocessing.MinMax~~~()
sc.fit(x_train)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;standardization&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#standardization&quot; aria-label=&quot;standardization permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;standardization&lt;/h3&gt;
&lt;p&gt;평균이 0, 표준편차가 1이 되도록 표준화하는 것이다. (정규분포)&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;sc = sklearn.preprocessing.StandardScaler()
sc.fit(x_train)
x_train_scaled = sc.transform(x_train)
x_test_scaled = sc.transform(x_test)

...

model.fit(x_test_scaled)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;**스케일링 과정에서 test data가 개입하면 안된다.(평균, 최대, 최소, 표준편차 등) 쪼개고 Train data에만 하면 된다. **&lt;/p&gt;
&lt;h2 id=&quot;hpo&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#hpo&quot; aria-label=&quot;hpo permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HPO&lt;/h2&gt;
&lt;p&gt;HPO(Hyper-Parameter-Optimization)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Grid-SearchCV 직관적이고 성능도 좋음&lt;/li&gt;
&lt;li&gt;Randomized-Search 딥러닝에서 Grid-Search보다 성능이 잘나오는 경우가 있음.&lt;/li&gt;
&lt;li&gt;Bayesian-Search 난이도가 높음. 딥러닝에서 RandomizedSearch보다 잘 사용됨. AutoML 등에서 사용됨.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;보통 각 조합을 비교할 때도 Cross Validation을 사용하는데 이때 훈련 데이터를 또 쪼개서 검증하기 때문에 수동으로 각 조합을 비교한 것과 점수가 다르게 나올 수 있다. 그럴 땐 수동으로 비교해서 잘 나온 조합을 사용하면 된다.&lt;/p&gt;
&lt;h3 id=&quot;gridsearchcv&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#gridsearchcv&quot; aria-label=&quot;gridsearchcv permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GridSearchCV&lt;/h3&gt;
&lt;p&gt;HPO를 하기 위해 사용하는 모듈이다. (=HP Tuning, Model Tuning)
Hyper-Parameter의 후보군을 주면 알아서 조합해서 보여준다.
CV는 Cross Validation의 줄임말이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;from sklearn.model_selection import GridSearchCV
from sklearn.svm import SVC
from sklearn.metrics import classification_report

param_grid = {&apos;C&apos;:[1, 2, 3, 4, 5],
			&apos;gamma&apos;:[0.1, 0.5, 1, 2, 100],
            &apos;kernel&apos;:[&apos;rbf&apos;]
}

grid = GridSearchCV(SVC(), param_grid, refit=True, verbose=1)
# refit: 최적조합을 바로 적용할지 여부
# verbose: print되는 설명의 정도
grid.fit(x_train_scaled, y_train)


y_pred = grid.predict(x_test_scaled)
print(classification_report(y_test, y_pred))  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;GridSearchCV()&lt;/code&gt;에 모델이 들어갈 때 따로 argument를 주면 안되는데, &lt;code class=&quot;language-text&quot;&gt;param_grid&lt;/code&gt;에 추가해주는 식으로 대신할 수 있다.
&lt;code class=&quot;language-text&quot;&gt;grid.best_params_&lt;/code&gt;로 최적해를 Dictionary로 꺼낼 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;randomizedsearchcv&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#randomizedsearchcv&quot; aria-label=&quot;randomizedsearchcv permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RandomizedSearchCV&lt;/h3&gt;
&lt;p&gt;Hyper-Parameter의 범위를 주면 조합해서 보여준다.&lt;/p&gt;
&lt;h3 id=&quot;bayesiansearchcv&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#bayesiansearchcv&quot; aria-label=&quot;bayesiansearchcv permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BayesianSearchCV&lt;/h3&gt;
&lt;p&gt;베이즈 통계학을 기반으로한 기법 (vs 빈도주의 통계학)&lt;/p&gt;
&lt;p&gt;참고할만한 것
&lt;a href=&quot;https://www.analyticsvidhya.com/blog/2021/10/support-vector-machinessvm-a-complete-guide-for-beginners/&quot;&gt;https://www.analyticsvidhya.com/blog/2021/10/support-vector-machinessvm-a-complete-guide-for-beginners/&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[String 연속된 요소 제거]]></title><description><![CDATA[연속된 요소를 감지해야하는 경우가 있다
"aabdagdsgdsaaaaavvs"의 "aa", "aaaaa", "vv"
for…]]></description><link>https://ljh01.github.io/blog/연속된요소제거/</link><guid isPermaLink="false">https://ljh01.github.io/blog/연속된요소제거/</guid><pubDate>Mon, 28 Nov 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;연속된 요소를 감지해야하는 경우가 있다
&quot;aabdagdsgdsaaaaavvs&quot;의 &quot;aa&quot;, &quot;aaaaa&quot;, &quot;vv&quot;
for문 돌리면서 비교하는 것보다 스택에 넣었다 뺐다 하는게 좋을 수 있다..
예를 들면
각 문자열을 돌면서 스택 맨 위에 같은 문자열이 있으면 pop, 없으면 push하는 식으로 하면 된다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AI/ML/Gradient Boosting]]></title><description><![CDATA[Gradient Boosting Regression 실습(회귀) https://scikit-learn.org/0.20/auto_examples/ensemble/plot_gradient_boosting_regression.html#sphx-glr…]]></description><link>https://ljh01.github.io/blog/GradientBoosting/</link><guid isPermaLink="false">https://ljh01.github.io/blog/GradientBoosting/</guid><pubDate>Tue, 22 Nov 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;gradient-boosting-regression-실습회귀&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#gradient-boosting-regression-%EC%8B%A4%EC%8A%B5%ED%9A%8C%EA%B7%80&quot; aria-label=&quot;gradient boosting regression 실습회귀 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradient Boosting Regression 실습(회귀)&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://scikit-learn.org/0.20/auto_examples/ensemble/plot_gradient_boosting_regression.html#sphx-glr-auto-examples-ensemble-plot-gradient-boosting-regression-py&quot;&gt;https://scikit-learn.org/0.20/auto_examples/ensemble/plot_gradient_boosting_regression.html#sphx-glr-auto-examples-ensemble-plot-gradient-boosting-regression-py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;위 링크를 참고함&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import numpy as np
import matplotlib.pyplot as plt

from sklearn import datasets, ensemble
from sklearn.utils import shuffle
from sklearn.metrics import mean_squared_error&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;boosting기법을 사용하므로 ensemble을 불러와준다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# Load data
boston = datasets.load_boston()
X, y = shuffle(boston.data, boston.target, random_state=13)
X = X.astype(np.float32)
offset = int(X.shape[0] * 0.9)
X_train, y_train = X[:offset], y[:offset]
X_test, y_test = X[offset:], y[offset:]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;shuffle 함수로 데이터를 섞고 astype으로 전부 np.float32로 바꿔준다.
그 다음은 train / test를 9:1로 쪼개는 모습. 굳이 이러지 말고&lt;code class=&quot;language-text&quot;&gt;model_selection.train_test_split(x, y, ratio)&lt;/code&gt; 를 쓰자.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# Fit regression model
params = {&apos;n_estimators&apos;: 500, &apos;max_depth&apos;: 4, &apos;min_samples_split&apos;: 2,
          &apos;learning_rate&apos;: 0.01, &apos;loss&apos;: &apos;ls&apos;}
clf = ensemble.GradientBoostingRegressor(**params)

clf.fit(X_train, y_train)
mse = mean_squared_error(y_test, clf.predict(X_test))
print(&quot;MSE: %.4f&quot; % mse)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;prams에 hyper-parameter를 정리해 넣어준다. 근데 &lt;code class=&quot;language-text&quot;&gt;**params&lt;/code&gt; 이게 낯설다. argument를 이런식으로도 넣을 수 있구나
n_estimators: 의사결정나무(weak learner)의 개수
max_depth: 의사결정나무의 최대깊이
min_samples_split: 의사결정나무로 쪼갰을때 leaf node의 최소 데이터량
learning_rate: gradient decent 적용시 알파의 값. 작을수록 세밀하게 이동하며 계산량이 많아지고, 너무크면 답이 안나온다. 일반적으로 0.01~0.001사이에서 설정한다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/5b9d1dee-4a41-4bb2-a2bb-8d285e8ca72c/image.png&quot; alt=&quot;https://www.jeremyjordan.me/nn-learning-rate/&quot;&gt;
loss: cost function의 종류를 설정하는것. 위에서 적용한 ls는 최소자승법으로 mse랑 같다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/03fa1455-96af-486a-ad73-319be2054437/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# Plot training deviance

# compute test set deviance
test_score = np.zeros((params[&apos;n_estimators&apos;],), dtype=np.float64)

for i, y_pred in enumerate(clf.staged_predict(X_test)):
    test_score[i] = clf.loss_(y_test, y_pred)

plt.figure(figsize=(12, 6))
plt.subplot(1, 2, 1)
plt.title(&apos;Deviance&apos;)
plt.plot(np.arange(params[&apos;n_estimators&apos;]) + 1, clf.train_score_, &apos;b-&apos;,
         label=&apos;Training Set Deviance&apos;)
plt.plot(np.arange(params[&apos;n_estimators&apos;]) + 1, test_score, &apos;r-&apos;,
         label=&apos;Test Set Deviance&apos;)
plt.legend(loc=&apos;upper right&apos;)
plt.xlabel(&apos;Boosting Iterations&apos;)
plt.ylabel(&apos;Deviance&apos;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위 사진의 왼쪽 그림을 만드는 코드이다. 의사결정나무를 몇개 만드냐에 따라 일탈의 정도가 어떻게 변하는지를 보여준다. 사진은 붉은 그래프가 계속 감소하지만 증가한다면 아마 오버피팅일테니 거기서 멈추면 되겠다.
먼저 &lt;code class=&quot;language-text&quot;&gt;clf.staged_precit(X_test)&lt;/code&gt;는 의사결정나무 1개로 예측한 결과부터 500개까지 만들어 예측한 결과까지 다 담아 iteratable object로 리턴해준다. enumerate는 내용물을 꺼내면서 순서도 같이 꺼내주는 함수이다. 그래서 i에 인덱스를, y_pred에 데이터 자체를 꺼내어 test_score에 집어넣는 것이다.
여기서 &lt;code class=&quot;language-text&quot;&gt;clf.loss_()&lt;/code&gt; 는 아까 ls를 적어줬으니 MSE를 사용할 것이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# Plot feature importance
feature_importance = clf.feature_importances_
# make importances relative to max importance
feature_importance = 100.0 * (feature_importance / feature_importance.max())
sorted_idx = np.argsort(feature_importance)
pos = np.arange(sorted_idx.shape[0]) + .5
plt.subplot(1, 2, 2)
plt.barh(pos, feature_importance[sorted_idx], align=&apos;center&apos;)
plt.yticks(pos, boston.feature_names[sorted_idx])
plt.xlabel(&apos;Relative Importance&apos;)
plt.title(&apos;Variable Importance&apos;)
plt.show()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;feature-importances&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#feature-importances&quot; aria-label=&quot;feature importances permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature Importances&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;clf.feature_importances_&lt;/code&gt;는 각 열의 중요도를 반환해준다.&lt;/p&gt;
&lt;h1 id=&quot;permutation-importances&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#permutation-importances&quot; aria-label=&quot;permutation importances permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Permutation Importances&lt;/h1&gt;
&lt;p&gt;Feature Importances와 의미는 비슷하지만 계산방식이 다르다고.. 앵간해서는 후자가 더 좋다고함 번외로 LIME이라는 라이브러리도 비슷한 용도로 사용할 수 있다고 한다.&lt;/p&gt;
&lt;p&gt;원리는 각 열당 데이터를 무작위로 섞어서 무의미하게 만든다음 모델의 성능이 어떻게 나오는지 보는 것이다. 모델을 매번 수정하는건 비용이 크니 데이터를 수정해서 모델의 성능하락폭을 측정하는 것임.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://soohee410.github.io/iml_permutation_importance&quot;&gt;https://soohee410.github.io/iml_permutation_importance&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;from sklearn.inspection import permutation_importance
feature_importance = permutation_importance(clf, X_test, y_test, n_repeat=10, random_state=42, n_jobs=2)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;n_repeat은 섞고 성능측정하는것을 반복하는 횟수이다. n_jobs는 멀티스레드 관련 파라미터.
리턴방식은 2차원 array다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/49781727-1f4a-4597-9785-4181da61c903/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;각 행은 기존에 있던 속성을 의미, 열은 시도횟수를 뜻함 데이터는 기존 모델과 성능차이를 의미함. 이를 통해 boxplot 그림도 그릴 수 있다.&lt;/p&gt;
&lt;p&gt;절대적인 수치는 원래 성능과 특정 열을 뒤섞었을 때 metric의 차이를 의미한다.
metric은 &lt;code class=&quot;language-text&quot;&gt;scoring&lt;/code&gt; 이라고 하는 hyper-parameter에 따라 측정되는 지표이다.
&lt;code class=&quot;language-text&quot;&gt;scoring&lt;/code&gt;을 따로 지정하지 않는 경우(위 코드와 같이) 사용되는 모델의 기본 scorer가 사용된다.
scikit-learn의 모델들은 기본적으로 &lt;code class=&quot;language-text&quot;&gt;model.score(x_test, y_test)&lt;/code&gt;와 같이 score기능을 제공한다. 회귀분석의 경우 R2 Score(설명계수)를 활용하는데, 0~1사이에서 모델의 설명력을 평가한다. (높을수록 좋음) 분류분석의 경우 보통 Accuracy가 기본 scorer가 된다.&lt;/p&gt;
&lt;h1 id=&quot;gradient-boosting-regression-실습분류&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#gradient-boosting-regression-%EC%8B%A4%EC%8A%B5%EB%B6%84%EB%A5%98&quot; aria-label=&quot;gradient boosting regression 실습분류 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gradient Boosting Regression 실습(분류)&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;
import numpy as np
import matplotlib.pyplot as plt

from sklearn import datasets, ensemble
from sklearn.model_selection import train_test_split
# from sklearn.metrics import mean_squared_error
from sklearn.metrics import accuracy_score&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;분류 문제이므로 mse 대신 accuracy score를 사용한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;cancer = datasets.load_breast_cancer()
x, y = cancer.data, cancer.target 
x_train, y_train, x_test, y_test = train_test_split(x, y, test_size=0.1, random_state=42)

params = {&apos;n_estimators&apos;: 1000,
		&apos;max_depth&apos;: 4,
        &apos;min_samples_split&apos;: 5,
        &apos;learning_rate&apos;: 0.01}
clf = ensemble.GradientBoostingClassifier(**params)
clf.fit(x_train, y_train)

acc = accuracy_score(y_test, clf.predict(x_test))
print(acc)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;GradientBoostingClassifier&lt;/code&gt;를 사용한다는 점과 mse 대신 accuracy를 사용한다는 점이 다르다. 여기서 &lt;code class=&quot;language-text&quot;&gt;clf.score(x, y)&lt;/code&gt;를 사용해도 똑같이 accuracy가 나온다. 그래도 명시적으로 &lt;code class=&quot;language-text&quot;&gt;accuracy_score&lt;/code&gt;를 사용해주면 덜 헷갈린다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# Plot training deviance

# compute test set deviance
test_score = np.zeros((params[&apos;n_estimators&apos;],), dtype=np.float64)

for i, y_pred in enumerate(clf.staged_predict(X_test)):
    test_score[i] = accuracy_score(y_test, y_pred)

plt.figure(figsize=(12, 6))
plt.subplot(1, 1, 1)
plt.title(&apos;Accuracy&apos;)
plt.plot(np.arange(params[&apos;n_estimators&apos;]) + 1, clf.train_score_, &apos;b-&apos;,
         label=&apos;Training Set Deviance&apos;)
plt.plot(np.arange(params[&apos;n_estimators&apos;]) + 1, test_score, &apos;r-&apos;,
         label=&apos;Test Set Deviance&apos;)
plt.legend(loc=&apos;upper right&apos;)
plt.xlabel(&apos;Boosting Iterations&apos;)
plt.ylabel(&apos;Deviance&apos;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;test_score[i]&lt;/code&gt; 를 &lt;code class=&quot;language-text&quot;&gt;accuracy_score&lt;/code&gt;로 사용하는 것이 바뀌었다.&lt;/p&gt;
&lt;p&gt;외에도 feature importances, roc_curve, auc 등 이전에 배운 것들을 사용할 수 있다.&lt;/p&gt;
&lt;p&gt;또 classification report라는 것이 있는데&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;from sklearn.metrics import classification_report

predictions = clf.predict(x_test)

print(classification_report(y_test, predictions))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 부르면&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;              precision    recall  f1-score   support

     class 0       0.50      1.00      0.67         1
     class 1       0.00      0.00      0.00         1
     class 2       1.00      0.67      0.80         3

    accuracy                           0.60         5
   macro avg       0.50      0.56      0.49         5
weighted avg       0.70      0.60      0.61         5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://scikit-learn.org/stable/modules/generated/sklearn.metrics.classification_report.html&quot;&gt;https://scikit-learn.org/stable/modules/generated/sklearn.metrics.classification_report.html&lt;/a&gt;
요런 데이터가 나온다.&lt;/p&gt;
&lt;p&gt;precision은 각 class라고 예측한 것 들 중 맞아떨어진 비율
recall은 실제 class 인 것들 중 예측에 성공한 것 들의 비율
f1-score는 이 둘의 조화평균
support는 데이터의 개수
macro avg 는 각 열의 평균
weighted avg는 support를 기준으로한 각 열의 가중평균&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AI/ML/Decision Tree]]></title><description><![CDATA[의사결정나무 https://ratsgo.github.io/machine%20learning/2017/03/26/tree/ https://ratsgo.github.io/machine%20learning/2017/03/26/tree…]]></description><link>https://ljh01.github.io/blog/DecisionTree/</link><guid isPermaLink="false">https://ljh01.github.io/blog/DecisionTree/</guid><pubDate>Mon, 21 Nov 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;의사결정나무&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9D%98%EC%82%AC%EA%B2%B0%EC%A0%95%EB%82%98%EB%AC%B4&quot; aria-label=&quot;의사결정나무 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;의사결정나무&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/64cd1574-a311-4bcf-bf8d-b2b5b0b0f027/image.png&quot; alt=&quot;https://ratsgo.github.io/machine%20learning/2017/03/26/tree/&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ratsgo.github.io/machine%20learning/2017/03/26/tree/&quot;&gt;https://ratsgo.github.io/machine%20learning/2017/03/26/tree/&lt;/a&gt; 이곳에서 더 자세히 알 수 있다. 각 변수들을 이곳저곳에 돌려 배치하면서 가장 명확한 트리를 찾는다.&lt;/p&gt;
&lt;p&gt;의사결정나무는 회귀, 분류 모두 해결 가능하다는 특징을 가진다.&lt;/p&gt;
&lt;p&gt;맨 위를 root node, 맨 밑을 leaf node라고 한다.
아웃라이어들의 영향을 많이 받아 불안정하고, 과적합이 쉽게 발생한다.
가지가 너무 길어지면 각 leaf node에 데이터가 부족해져서 신뢰하기가 좀 그렇다.&lt;/p&gt;
&lt;h1 id=&quot;model-ensemble&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#model-ensemble&quot; aria-label=&quot;model ensemble permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model ensemble&lt;/h1&gt;
&lt;p&gt;여러 모델을 짬뽕하여 예측하는 방법이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boosting&lt;/li&gt;
&lt;li&gt;Bagging&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;등이 있다.&lt;/p&gt;
&lt;p&gt;여기서 의사결정나무의 단점을 보완하기 위해 Boosting기법을 사용한다. weak learner들을 합쳐 strong learner를 만드는 기법이다. 적당히 피팅된 의사결정나무(의사결정나무가 아니어도 됨) 여러개를 섞어 예측한다.&lt;/p&gt;
&lt;p&gt;분류문제의 경우 과반으로 예측을 하면되고, 회귀문제의 경우 평균/가중평균을 낸다.&lt;/p&gt;
&lt;p&gt;Tree-Based Ensemble Model들을 살펴보자&lt;/p&gt;
&lt;h2 id=&quot;boosting&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#boosting&quot; aria-label=&quot;boosting permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Boosting&lt;/h2&gt;
&lt;h3 id=&quot;adaboostingadaptive-boosting&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#adaboostingadaptive-boosting&quot; aria-label=&quot;adaboostingadaptive boosting permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AdaBoosting(Adaptive Boosting)&lt;/h3&gt;
&lt;p&gt;Boosting기법의 업그레이드이다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/e43ff319-02bd-499f-8da9-9cd5925543bf/image.png&quot; alt=&quot;https://towardsdatascience.com/understanding-adaboost-2f94f22d5bfe&quot;&gt;
&lt;a href=&quot;https://towardsdatascience.com/understanding-adaboost-2f94f22d5bfe&quot;&gt;https://towardsdatascience.com/understanding-adaboost-2f94f22d5bfe&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;데이터 학습&lt;/li&gt;
&lt;li&gt;틀린 부분에 가중치를 두고 재 학습 반복&lt;/li&gt;
&lt;li&gt;그 과정에있는 모델들을 모두 사용하여 결정&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;위 사진의 경우 분류문제의 경우고 회귀문제의 경우 회귀를 많이해서 평균을 낸다.&lt;/p&gt;
&lt;p&gt;근데 가중치를 곱하다 보면 모델의 Acurracy가 점점 떨어져 쓰레기가 될 수 있다.
어떻게 가중치를 줘야 하나? 여기서 Gradient decent가 들어온다. 가중치를 이리저리 조정해가면서 선정한다. 그렇게 Gradient Boosting 기법이 등장한다.&lt;/p&gt;
&lt;p&gt;Gradient Boosting을 사용해서 의사결정나무를 막 만들다보니 성능에 대한 아쉬움이 있었다. 의사결정 나무 자체가 만들기 오래걸리는 모델인데 Sequential로 만들다보니 너무 느리다. 그래서 등장한게 XG Boost이다.&lt;/p&gt;
&lt;h3 id=&quot;xg-boost&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#xg-boost&quot; aria-label=&quot;xg boost permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XG Boost&lt;/h3&gt;
&lt;p&gt;병렬 처리 기법으로 Gradient Boosting의 성능을 끌어올렸다. Sequential하게 모델을 만드는 부분은 그대로 두되, 의사결정나무 자체를 만드는 과정에서 병렬 처리 기법을 사용하였다.&lt;/p&gt;
&lt;p&gt;XG Boost는 Hyper-Parameter가 꽤 많아서 최적의 설정값을 찾기가 까다롭다고 한다.&lt;/p&gt;
&lt;p&gt;번외로 MS의 LightGBM, EBM이라는 것도 있다.&lt;/p&gt;
&lt;h2 id=&quot;bagging&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#bagging&quot; aria-label=&quot;bagging permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bagging&lt;/h2&gt;
&lt;p&gt;Bootstrap Aggregating의 줄임말이다.&lt;/p&gt;
&lt;h3 id=&quot;random-forest&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#random-forest&quot; aria-label=&quot;random forest permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Random Forest&lt;/h3&gt;
&lt;p&gt;가장 유명한 예는 Random Forest이다. Boosting과 같이 의사결정나무를 여러개 만들어서 합치는건 같으나 Boosting처럼 모델이 Sequential하게 만들어지지 않고 독립적으로 만들어진다.&lt;/p&gt;
&lt;p&gt;학습 데이터를 랜덤하게 뽑아서 모델을 만들기 때문이다. 병렬로 모델을 만들 수 있다. 그래서 성능이 좋지만 Boosting류가 성능이 일반적으로 좋다.&lt;/p&gt;
&lt;h1 id=&quot;번외&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B2%88%EC%99%B8&quot; aria-label=&quot;번외 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;번외&lt;/h1&gt;
&lt;p&gt;n차원 테이블로 표현되는 정형데이터들은 머신러닝을, 이미지와 영상같은 데이터들은 딥러닝을 활용하는 경우가 많다.
근데 정형데이터를 위한 인공신경망, 즉 딥러닝 모델인 TabNet이라는게 있다고..&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AI/ML/Logistic Regression]]></title><description><![CDATA[로지스틱 회귀는 이진 분류를 해결하는데 사용되는 모델이다. (k-class 모델, k-class & ordinal…]]></description><link>https://ljh01.github.io/blog/LogisticRegression/</link><guid isPermaLink="false">https://ljh01.github.io/blog/LogisticRegression/</guid><pubDate>Mon, 14 Nov 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;로지스틱 회귀는 &lt;strong&gt;이진 분류&lt;/strong&gt;를 해결하는데 사용되는 모델이다. (k-class 모델, k-class &amp;#x26; ordinal 모델 등의 변형모델을 통해 다항 로지스틱 회귀도 가능하다.)&lt;/p&gt;
&lt;p&gt;이진 분류는 분류문제 아닌가? 왜 회귀라는 말을 썼을까?&lt;/p&gt;
&lt;p&gt;계산과정에서 Numerical data를 어쩌구.. 아무튼 회귀라고 부른다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/d75486b0-e3a6-4057-ad12-1dc4c70ea226/image.png&quot; alt=&quot;https://medium.com/@cmukesh8688/logistic-regression-sigmoid-function-and-threshold-b37b82a4cd79&quot;&gt;&lt;/p&gt;
&lt;p&gt;이진 분류라 데이터들이 0 혹은 1을 갖는다. 여기 파란 선은 sigmoid function으로, 선형회귀의 일차함수와 비슷한 역할을 한다. sigmoid function은 데이터의 실제 값이 1일 확률을 예측하여 보여준다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/544142c1-3dd6-4906-a15b-a99b0bda6ed6/image.png&quot; alt=&quot;https://www.researchgate.net/figure/A-Basic-sigmoid-function-with-two-parameters-c1-and-c2-as-commonly-used-for-subitizing_fig2_325868989&quot;&gt;&lt;/p&gt;
&lt;p&gt;여기서도 세타의 조정을 통해 데이터에 함수를 근사한다. 선형회귀하고 매우 비슷한데 이래서 로지스틱 회귀라고 하는가보다.&lt;/p&gt;
&lt;p&gt;로지스틱 회귀에서는 두 가지 정답을 제공할 수 있겠다. 확률과 확률에 기반한 판단이다.
양성 카테고리에 속할 가능성 0.134, 0.655 (&lt;code class=&quot;language-text&quot;&gt;scikit~~~.predict_proba(x_Data)&lt;/code&gt;)
또는
0.6(cutoff)을 넘으니 양성, 못넘으니 음성 이렇게. (&lt;code class=&quot;language-text&quot;&gt;scikit~~~.predict(x_Data)&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;어떤 함수로 근사하는지 알았으면 모델을 학습시켜야한다.&lt;/p&gt;
&lt;p&gt;학습의 기준은 Cost function이 된다. 이 목적함수를 최대한 줄이는 파라미터를 찾는다.&lt;/p&gt;
&lt;p&gt;선형회귀에서는 일차함수가 들어갔기에 그의 제곱 모양인 MSE(평균제곱편차)도 이차함수 형태를 띄었다.
분류문제의 경우 정답 오답을 구분해서 정확도를 구할 수도 있으나 이게 그렇게 좋은방법인 것 같지는 않다. 정확도가 같다면 또 다른 수단을 사용해야 된다.
하지만 sigmoid 함수를 넣은 MSE는 모양이 기괴하다. 근데 자세한 이유는 아직 모름&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/4a299150-91e8-4b2a-9f91-738180068dad/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;보통의 MSE들은 극소이면 최소일 것이라 예상하는 면이 있고 얼추 맞아떨어지는 경우가 많은데 이 경우는 전혀 그렇지 않다. 그래서 MSE가 아닌 Cross-Entropy라고 하는 cost function을 사용한다. 이는 분류문제에서 자주 사용된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/5623c5c9-ea49-40f3-9561-e19a05323a61/image.png&quot; alt=&quot;https://velog.io/@jakeseo_me/%EB%B0%91%EB%B0%94%EB%8B%A5%EB%B6%80%ED%84%B0-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EB%94%A5%EB%9F%AC%EB%8B%9D-3-1-%EC%8B%A0%EA%B2%BD%EB%A7%9D-%ED%95%99%EC%8A%B5&quot;&gt;&lt;/p&gt;
&lt;p&gt;결과값에 로그를 씌우고 실제 정답을 곱해 합산한 것이다. 두 확률 분포의 차를 뜻한다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hoya012.github.io/blog/cross_entropy_vs_kl_divergence/&quot;&gt;https://hoya012.github.io/blog/cross_entropy_vs_kl_divergence/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이곳을 참고하면 더 자세히 배울 수 있다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/1c73dace-d51b-4c35-84c6-f49afe79a754/image.png&quot; alt=&quot;https://hoya012.github.io/blog/cross_entropy_vs_kl_divergence/&quot;&gt;
엔트로피는 information의 평균이다. information은 로그(확률)이다.&lt;/p&gt;
&lt;p&gt;분류 문제들을 해결할 때 모델들은 단순하게 이게 class0이고 class1이고 딱 정해주지 않는다. 확률을 제공한다.
class0, class1, class2가 있을때는 &lt;code class=&quot;language-text&quot;&gt;[0.31, 0.68, 0.01]&lt;/code&gt; 이렇게 뱉는다.
이는 categorical value들을 한 행으로 쭉 늘어놓는 one-hot encoding이다. 과정은 encoding, 결과는 one-hot label로 부른다.&lt;/p&gt;
&lt;h4 id=&quot;softmax&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#softmax&quot; aria-label=&quot;softmax permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;softmax&lt;/h4&gt;
&lt;p&gt;일련의 값들의 분포를 합이 1이 되도록 표준화하는 것&lt;/p&gt;
&lt;h3 id=&quot;실습&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%8B%A4%EC%8A%B5&quot; aria-label=&quot;실습 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;실습&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;from sklearn import linear_model&lt;/code&gt;
로지스틱 회귀도 선형모델 안에 있다.&lt;/p&gt;
&lt;p&gt;아래는 데이터 정제 과정에서 사용됨&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;df[0].apply(function)&lt;/code&gt;
열.apply를 통해 데이터에 function을 일괄적용한 새로운 열을 리턴함&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;nparray[:, a:b]&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;nparray[:, (2, 5, 9)]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;numpy array 슬라이싱.
전자는 모든 행, a에서 b-1열까지 선택 / 후자는 모든 행, 2,5,9번 열만 선택
둘다 이차원 array를 가정한다.&lt;/p&gt;
&lt;p&gt;다시 실습으로&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;x_train, x_test, y_train, y_test = model_selection.train_test_split(data_X, data_Y, test_size = 0.3, random_state = 0)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;데이터를 학습용, 테스트용으로 쪼갠다. 테스트용 데이터는 30%로. random_state(random seed)를 지정함으로써 다음번 실행에도 똑같이 데이터가 섞이고 분배된다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;model = linear_model.LogisticRegression()
model.fit(x_train, y_train)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;목적함수인 CEE(Cross-Entropy Error)를 최소화하도록 학습한다. 학습이 완료되면 테스트한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import sklearn.metrics import accuracy_score
pred_test = model.predict(x_test)
print(accuracy_score(pred_test, y_test))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;accuracy_score은 categorical data를 사용하는 분류문제에서만 사용된다.&lt;/p&gt;
&lt;p&gt;accuracy말고 다른 방식으로 결과를 분석해보자.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/3a19703e-16f2-49d6-87d7-fb7d9719d866/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;한창 코로나 검사키트 나왔을때 위양성 위음성 어쩌구랑 같다.
앞은 예측치의 정답여부에 따라 True/False를 붙여주고 뒤는 예측으로 붙여주면 안 헷갈린다.&lt;/p&gt;
&lt;p&gt;Accuracy는 (TP+TN)/(TP+TN+FP+FN)으로 구할 수 있다.&lt;/p&gt;
&lt;p&gt;Recall(재현율) = TP/(TP+FN) 실제 참인 것중 예측 성공한 것&lt;/p&gt;
&lt;p&gt;Precision(정밀도) = TP/(TP+FP) 참이라고 예측한 것들 중 실제로 맞은 것&lt;/p&gt;
&lt;p&gt;많이 헷갈린다.&lt;/p&gt;
&lt;p&gt;Recall은 참인 것에 대한 민감도를 의미한다. FP가 많더라도 FN을 줄여야 Recall을 끌어올릴 수 있다. 코로나같이 실제 양성을 구멍없이 잡아내야한다면 Recall이 중요하다.&lt;/p&gt;
&lt;p&gt;Precision은 예측 실패에 대한 민감도이다. 진양성을 좀 못잡더라도 위양성을 줄여야한다. 되도록 예측에 실패하면 안되는 스팸메일 거르기같은 경우 Precision이 중요하다.&lt;/p&gt;
&lt;p&gt;F1-Score는 Recall과 Precision의 조화평균이다. 둘다 고려할 경우 사용하면 된다.&lt;/p&gt;
&lt;p&gt;여기서 확장하면 F-Beta Score를 사용할 수 있는데 Recall과 Precision에 가중치를 부여하여 점수를 계산할 수 있다.&lt;/p&gt;
&lt;p&gt;ROC Curve &amp;#x26; AUC&lt;/p&gt;
&lt;p&gt;진양성율: 실제 양성인것들 중 진양성인 것들의 비율 TP/(TP+FN)
위양성율: 실제 음성인것들 중 위양성인 것들의 비율 FP/(TN+FP)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/06c89a6d-bfe3-498d-9a72-7072fcae6c8b/image.png&quot; alt=&quot;https://en.wikipedia.org/wiki/Receiver_operating_characteristic&quot;&gt;&lt;/p&gt;
&lt;p&gt;왼쪽 위로갈 수록 성능이 좋은것. 점선은 랜덤으로 찍었을 경우를 생각할 수 있다.&lt;/p&gt;
&lt;p&gt;수직 위로가면 양성을 빠짐없이 잡아내고
수평 왼쪽으로 음성보고 양성이라고 하는 실수가 줄어든다(위양성)&lt;/p&gt;
&lt;p&gt;사진에서 확인할 수 있듯이 한쪽을 개선하면 한쪽이 나빠지는 경향이 있다. 저 선은 cutoff를 조절해가면서 그려진다고 보면 된다.&lt;/p&gt;
&lt;p&gt;선이 구불구불해서 성능비교가 힘들다면 적분해서 면적을 비교하면 된다. 이 면적이 AUC(Area Under the ROC Curve)이다.&lt;/p&gt;
&lt;p&gt;실용&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;from sklearn.metrics import roc_curve, auc
pred_test = model.predict_proba(x_test)
fpr, tpr, _ = roc_curve(y_true=y_test, y_score=pred_test[:,1])
roc_auc = auc(fpr, tpr)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;y_score=pred_test[:,1]&lt;/code&gt; 이렇게 슬라이싱하는 이유는 &lt;code class=&quot;language-text&quot;&gt;model.predict_proba&lt;/code&gt;가 확률p와 1-p를 같이 제공하기 때문이다.
&lt;code class=&quot;language-text&quot;&gt;fpr&lt;/code&gt;과 &lt;code class=&quot;language-text&quot;&gt;tpr&lt;/code&gt;은 ROC Curve상 특정 점(꺾이는점)들의 x,y좌표를 뜻한다.
&lt;code class=&quot;language-text&quot;&gt;_&lt;/code&gt;는 굳이 필요없는 부분이다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AI/ML/Linear Regression]]></title><description><![CDATA[선형 회귀 회귀분석 중 가장 기본적인 형태. 선형 상관 관계()를 찾는다.
기울기 a를 가중치, b를 보정치 혹은 편향이라고 부른다.
독립변수(x…]]></description><link>https://ljh01.github.io/blog/Linear Regression/</link><guid isPermaLink="false">https://ljh01.github.io/blog/Linear Regression/</guid><pubDate>Mon, 31 Oct 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;선형-회귀&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%84%A0%ED%98%95-%ED%9A%8C%EA%B7%80&quot; aria-label=&quot;선형 회귀 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;선형 회귀&lt;/h1&gt;
&lt;p&gt;회귀분석 중 가장 기본적인 형태. 선형 상관 관계(&lt;code class=&quot;language-text&quot;&gt;ax + b&lt;/code&gt;)를 찾는다.
기울기 a를 가중치, b를 보정치 혹은 편향이라고 부른다.
독립변수(x)가 한개일경우 단순 회귀분석, 여러개일 경우 다중 회귀분석이라고 한다. 여기서 선형회귀를 사용하면 선이 면이 되겠지?(&lt;code class=&quot;language-text&quot;&gt;ax+by+cz+...+C&lt;/code&gt;) 이것이 선형 결합(Linear Combination)이다. 직선식을 여러개 합친 것이라고 생각하자.&lt;/p&gt;
&lt;p&gt;a, b, c 등의 파라미터들을 정할 때 그 값에 대한 평가를 해야한다. 그럴 때 비용 함수를 사용한다.&lt;/p&gt;
&lt;h4 id=&quot;비용-함수cost-function&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B9%84%EC%9A%A9-%ED%95%A8%EC%88%98cost-function&quot; aria-label=&quot;비용 함수cost function permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;비용 함수(cost function)&lt;/h4&gt;
&lt;p&gt;cost 대신 loss, error, objective(목적 함수는 문제를 해결하기 위해 값을 줄이거나 늘려야하는 함수를 말한다. 여기선 cost함수를 최소화시켜야 한다.)가 쓰이기도 한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/dc759aed-370a-402e-91de-6bfd6f0e0f35/image.png&quot; alt=&quot;https://www.kaggle.com/general/156593&quot;&gt;&lt;/p&gt;
&lt;p&gt;Mean Squared Error Function(MSE)라는 가장 흔한 비용함수이다. 보통 비용 함수는 &lt;code class=&quot;language-text&quot;&gt;J&lt;/code&gt;로 표시한다.
오차를 제곱하여 평균을 내어주면 된다. 앞에 1/2를 곱하는 것도 있고 안 곱하는 것도 있는 것 같다.
변종으로 Mean Absolute Error Func(MAE)라는 것도 있다고 한다. 제곱이 들어간 MSE는
MAE보다 아웃라이어에 민감하게 변한다.
또 Mean Absolute Percentage Error(MAPE)라고 절대오차가 아닌 상대오차에 절댓값을 씌워 평균을 낸 것도 있다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/a1271c52-c01e-4850-a477-c5096e30ceeb/image.png&quot; alt=&quot;https://towardsdatascience.com/choosing-the-correct-error-metric-mape-vs-smape-5328dec53fac&quot;&gt;
MSE에 루트를 씌운 RMSE라는 것도 있다.&lt;/p&gt;
&lt;h2 id=&quot;경사-하강법gradient-decent-algorithm&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B2%BD%EC%82%AC-%ED%95%98%EA%B0%95%EB%B2%95gradient-decent-algorithm&quot; aria-label=&quot;경사 하강법gradient decent algorithm permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;경사 하강법(Gradient Decent Algorithm)&lt;/h2&gt;
&lt;p&gt;그럼 목적함수를 어떻게 해결할까?&lt;/p&gt;
&lt;p&gt;비용 함수는 어찌됬건 대부분의 점에서 미분가능한 그래프를 만들 것이다. 사람은 그래프를 대충 그려보고 최솟값을 구할 수 있겠지만 컴퓨터는 그래프를 그리려면 무한개의 점을 찍어야한다. 그래서 미분 후 최소값을 찾는 방식으로 최솟값을 찾는다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/7cd7835b-f8e3-487a-83a0-614a1750223c/image.png&quot; alt=&quot;https://www.analyticsvidhya.com/blog/2020/10/how-does-the-gradient-descent-algorithm-work-in-machine-learning/&quot;&gt;&lt;/p&gt;
&lt;p&gt;랜덤한 지점을 미분 후 쭉 내려가는 방식으로 J&apos; = 0의 해를 찾아 해결한다. (미분 방정식을 직접 풀어서 사용할 수도 있다.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;근데 위와 같은 방식을 사용했다가 잘못해서 Local Minima들로 빠져서 Global Minimum을 놓친다면?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;빠져나오는 방식이 몇개 있다고 하는데 보통 Global Minimum과 비슷한 값으로 떨어진다고 한다.&lt;/p&gt;
&lt;p&gt;보폭을 나타내는 알파(learning rate, step size)는 수동으로 설정하는 상수다. 너무 작으면 속도가 느려지고, 너무 크면 왔다갔다해서 정확도가 떨어질 수 있다. 일반적으로 0.01 ~ 0.001 사이에서 잡는다. 이와 같이 사람이 결정하는 변수를 &lt;code class=&quot;language-text&quot;&gt;Hyper-parameter&lt;/code&gt;라고 한다. 이를 조절하는 것을 Model Tuning이라고 한다.&lt;/p&gt;
&lt;p&gt;번외로 AutoML이라는 것이 있는데, 이는 데이터 전처리, 모델 선택, 하이퍼 파라미터 최적화(HPO)를 알아서 해주는 것이다.&lt;/p&gt;
&lt;h1 id=&quot;scikit-learn&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#scikit-learn&quot; aria-label=&quot;scikit learn permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;scikit-learn&lt;/h1&gt;
&lt;p&gt;파이썬으로 traditional ML 알고리즘들을 구현한 오픈 소스 라이브러리.
장점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;타 라이브러리들과 호환성이 좋음 (Numpy, Pandas 등)&lt;/li&gt;
&lt;li&gt;통일된 인터페이스&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;사용법&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%82%AC%EC%9A%A9%EB%B2%95&quot; aria-label=&quot;사용법 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;사용법&lt;/h2&gt;
&lt;h3 id=&quot;1-데이터-불러오기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0&quot; aria-label=&quot;1 데이터 불러오기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 데이터 불러오기&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;sklearn.datasets.load_[DATA]()&lt;/code&gt; 함수를 통해 데이터를 불러온다.
데이터의 형식은 &lt;code class=&quot;language-text&quot;&gt;numpy.array&lt;/code&gt;형식으로 주면 된다.&lt;/p&gt;
&lt;p&gt;유명한 데이터는 내장되어있다. 예를 들면
&lt;code class=&quot;language-text&quot;&gt;var = sklearn.datasets.load_iris()&lt;/code&gt; 이렇게 불러올 수 있다.
x를 불러오려면
&lt;code class=&quot;language-text&quot;&gt;var.data&lt;/code&gt;
y를 불러오려면
&lt;code class=&quot;language-text&quot;&gt;var.target&lt;/code&gt; 이렇게&lt;/p&gt;
&lt;h3 id=&quot;2-데이터-쪼개기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%AA%BC%EA%B0%9C%EA%B8%B0&quot; aria-label=&quot;2 데이터 쪼개기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 데이터 쪼개기&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;x_train, x_test, y_train, y_test = sklearn.model_selection.train_test_split(x, y, test_size)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;test_size&lt;/code&gt;를 0.3으로 설정하면 0.7을 학습 데이터, 나머지를 테스트 데이터로 사용한다. validation data는 이 함수에서는 없다.&lt;/p&gt;
&lt;h3 id=&quot;3-모델-객체-생성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#3-%EB%AA%A8%EB%8D%B8-%EA%B0%9D%EC%B2%B4-%EC%83%9D%EC%84%B1&quot; aria-label=&quot;3 모델 객체 생성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 모델 객체 생성&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;model = sklearn.linear_model.~~~()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hyperparameter가 있는 모델들은 argument로 넣어주면 된다.
이렇게 모델을 생성하고&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;model.fit(train_x, train_y)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;학습을 시켜주면 된다.&lt;/p&gt;
&lt;p&gt;이제 예측을 하고 Cost function을 돌려보자.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;pred_y = model.predict(test_x)
sklearn.metrics.mean_squared_error(pred_y, test_y)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;mean_squared_error&lt;/code&gt; 외에도 성능지표로 &lt;code class=&quot;language-text&quot;&gt;accuracy_score&lt;/code&gt;(분류문제만), &lt;code class=&quot;language-text&quot;&gt;precision_score&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;recall_score&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;r2_score&lt;/code&gt; 등등 많다.&lt;/p&gt;
&lt;h1 id=&quot;데이터-정제&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%95%EC%A0%9C&quot; aria-label=&quot;데이터 정제 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 정제&lt;/h1&gt;
&lt;p&gt;numerical -&gt; &lt;strong&gt;min-max algorithm&lt;/strong&gt; or &lt;strong&gt;standardization&lt;/strong&gt;
categorical -&gt; &lt;strong&gt;one-hot encoding&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;standardization&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#standardization&quot; aria-label=&quot;standardization permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Standardization&lt;/h2&gt;
&lt;p&gt;표준화이다. 고등학교 때 하던 (x-표준편차)/평균 이다.&lt;/p&gt;
&lt;h2 id=&quot;one-hot-encoding&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#one-hot-encoding&quot; aria-label=&quot;one hot encoding permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-Hot Encoding&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/e4b0a5c3-5719-4fef-b3c9-b81bbba79786/image.png&quot; alt=&quot;https://www.brainstobytes.com/one-hot-encoding-with-pokemon/&quot;&gt;
categorical column과 numerical column을 명확히 구분짓기 위해 categorical column은 정수가 아닌 벡터로 변환해서 사용한다.&lt;/p&gt;
&lt;p&gt;Linear 기반 모델들은 무조건 해줘야 하는 작업.
Tree 계열 모델들은 굳이 해줄 필요가 없다고 한다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[AI/개요]]></title><description><![CDATA[https://dev.to/1801ayush/introduction-to-machine-learning-3mof 인공지능 (AI) 지각, 추론, 행동, 적응할 수 있는 프로그램 머신러닝 (Machine learning…]]></description><link>https://ljh01.github.io/blog/AI개요/</link><guid isPermaLink="false">https://ljh01.github.io/blog/AI개요/</guid><pubDate>Mon, 31 Oct 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/4377c570-70c0-4043-bdaa-13a2962e3088/image.png&quot; alt=&quot;https://dev.to/1801ayush/introduction-to-machine-learning-3mof&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;인공지능-ai&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9D%B8%EA%B3%B5%EC%A7%80%EB%8A%A5-ai&quot; aria-label=&quot;인공지능 ai permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;인공지능 (AI)&lt;/h1&gt;
&lt;p&gt;지각, 추론, 행동, 적응할 수 있는 프로그램&lt;/p&gt;
&lt;h1 id=&quot;머신러닝-machine-learning&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-machine-learning&quot; aria-label=&quot;머신러닝 machine learning permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;머신러닝 (Machine learning)&lt;/h1&gt;
&lt;p&gt;데이터가 늘어날수록 성능이 향상되는 알고리즘&lt;/p&gt;
&lt;h2 id=&quot;정의&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A0%95%EC%9D%98&quot; aria-label=&quot;정의 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;정의&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;A field of AI that gives computers the ability to learn from data, &lt;strong&gt;without being explicitly programmed&lt;/strong&gt; - &lt;em&gt;Arthur Samuel, 1959&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A computer program is said to learn from experience E with repect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E. - &lt;em&gt;Tom M. Mitchell, 1997&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;프로그램이 데이터를 학습하고 성능이 향상된다는 점이 중요한 것 같다.&lt;/p&gt;
&lt;h2 id=&quot;종류&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A2%85%EB%A5%98&quot; aria-label=&quot;종류 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;종류&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/c8d6841c-0805-4a27-a909-f3b2118a513f/image.png&quot; alt=&quot;&quot;&gt;
지도학습(교사학습) / 비지도학습 / 강화학습&lt;/p&gt;
&lt;h2 id=&quot;지도학습&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A7%80%EB%8F%84%ED%95%99%EC%8A%B5&quot; aria-label=&quot;지도학습 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;지도학습&lt;/h2&gt;
&lt;p&gt;데이터와 함께 정답이 제공된다.
데이터에 적합한 함수를 근사하는 과정이라고 볼 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;REGRESSSION(회귀)모델은 정답이 연속적인 값(Numerical)일 경우 (온도, 가격 등)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CLASSIFICATION(분류)은 정답이 불연속적인, 범주형 값(Categorical)일 경우(강아지 품종 등)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;대표적인 알고리즘: Linear/Logistic regression, Decision Tree, Bayesian Classification, Neural Network, Hidden Markov Model (HMM) 등&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;비지도학습&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B9%84%EC%A7%80%EB%8F%84%ED%95%99%EC%8A%B5&quot; aria-label=&quot;비지도학습 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;비지도학습&lt;/h2&gt;
&lt;p&gt;정답이 제공되지 않고 데이터의 성향을 분석함.
CLUSTERING(군집화)는 비슷한 것들 끼리 묶는것,
DIMENSIONALLY REDUCTION(차원축소)은 데이터의 차원을 날리는 것이다. 차원은 2차원데이터에서 column같은 의미이다.
ex) 고객군 분류, 장바구니 분석(Association Rule), 추천 시스템 등&lt;/p&gt;
&lt;h2 id=&quot;강화학습&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B0%95%ED%99%94%ED%95%99%EC%8A%B5&quot; aria-label=&quot;강화학습 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;강화학습&lt;/h2&gt;
&lt;p&gt;연속적인 단계마다 **상태(State)**를 인식하고 각 상태에 대해 결정한 **행동(Action)**들의 집합에 대해 환경으로부터 받는 **보상(Reward)**을 학습하여 전체 행동에 대한 보상을 최대화하는 **행동 선택 정책(Policy)**을 찾는 알고리즘.&lt;/p&gt;
&lt;p&gt;시행착오(Sequential decision making)를 통한 학습을 한다.
알파고가 좋은 예다.&lt;/p&gt;
&lt;p&gt;알고리즘 - Monte Carlo Methods, Markov Decision Processes, Q-learning, Deep Q-learning, Dynamic Programming 등&lt;/p&gt;
&lt;p&gt;ex) 로봇 제어, 공정 최적화 등&lt;/p&gt;
&lt;h2 id=&quot;학습이란&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%99%EC%8A%B5%EC%9D%B4%EB%9E%80&quot; aria-label=&quot;학습이란 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;학습이란?&lt;/h2&gt;
&lt;p&gt;예측과 정답 사이 오차를 줄여가는 과정&lt;/p&gt;
&lt;h3 id=&quot;capaciity&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#capaciity&quot; aria-label=&quot;capaciity permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Capaciity&lt;/h3&gt;
&lt;p&gt;모델의 복잡성을 뜻함. 다항함수로 치면 차수를 생각할 수 있다. 인공신경망의 경우 layer의 개수를 들 수 있따.
근사를 과하게 해서 Capacity가 올라가면 오버피팅이 발생할 수 있다. 그 반대는 언더피팅이 발생한다. (데이터의 경향성을 무시한 채 학습데이터에 대한 오차만 줄이는 방향으로 모델이 발전하면 오버피팅됨)&lt;/p&gt;
&lt;h3 id=&quot;feature&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#feature&quot; aria-label=&quot;feature permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;feature&lt;/h3&gt;
&lt;p&gt;데이터들에서 현상의 원인이 되는 독립변수, 결과가 되는 종속변수가 있는데 여기서 독립변수들을 feature라고 한다. 종속변수들은 회귀모델에서는 label, target 등으로 불리며 분류모델에서는 label 로 부른다&lt;/p&gt;
&lt;h3 id=&quot;generalization&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#generalization&quot; aria-label=&quot;generalization permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;generalization&lt;/h3&gt;
&lt;p&gt;일반화. 학습데이터가 아닌 새 데이터가 투입되었을 때도 오차가 적게나오도록 하는 것이다.
generalization error 라고 하면 새 데이터를 마주칠 시 오차를 말한다.&lt;/p&gt;
&lt;h2 id=&quot;데이터-나누기교차-검증&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%82%98%EB%88%84%EA%B8%B0%EA%B5%90%EC%B0%A8-%EA%B2%80%EC%A6%9D&quot; aria-label=&quot;데이터 나누기교차 검증 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 나누기(교차 검증)&lt;/h2&gt;
&lt;p&gt;가지고 있는 데이터를 전부 모델의 학습용으로 써버리면, 테스트를 할 수 없게된다.
그래서 세 가지 용도로 데이터를 나누어 사용한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Training Data&lt;/li&gt;
&lt;li&gt;Validation Data&lt;/li&gt;
&lt;li&gt;Test Data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Validation Data와 Test Data가 나한테는 비슷하게 느껴지는데(Validation Data를 사용하지 않는 경우도 있다고 한다.), 전자는 유효한 모델을 걸러낼 때 사용하고 후자는 걸러진 모델들의 성능을 평가할 때 사용하는 것 같다.&lt;/p&gt;
&lt;p&gt;세 가지 데이터간 비율은 데이터의 총량이 적을수록 6:2:2, 7:3 정도로 설정하고 엄청 많은 경우는 99:0.5:0.5 정도로 극단적으로 잡는다고 한다.&lt;/p&gt;
&lt;h3 id=&quot;k-fold-cross-validation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#k-fold-cross-validation&quot; aria-label=&quot;k fold cross validation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;K-Fold Cross Validation&lt;/h3&gt;
&lt;p&gt;Test Data를 제외한 나머지 데이터들로 여러 모델을 학습, 비교하는 방법이다. 데이터를 K등분내고 한 조각을 Validation Data로, 나머지 k-1조각을 Training Data로 활용하여 각 모델별 점수를 매기고 비교한다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/d83b7552-7b03-4cef-9251-f0be30abe03a/image.png&quot; alt=&quot;http://ethen8181.github.io/machine-learning/model_selection/model_selection.html
&quot;&gt;
k번 돌고 평균을 낸다.&lt;/p&gt;
&lt;p&gt;점수를 바탕으로 모델을 결정한 다음 등분을 내지 않은 전체 데이터를 대상으로 학습 후 따로 떼어뒀던 Test Data로 테스트 후 점수를 확인한다.&lt;/p&gt;
&lt;h4 id=&quot;stratified&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#stratified&quot; aria-label=&quot;stratified permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stratified&lt;/h4&gt;
&lt;p&gt;분류 문제에서 분류(class)가 몇개 없을 때 표본들에서 분포가 편향되는 것을 방지해주는 것이다. k = 10이면 10토막 모두 비슷한 분포를 맞춰준다는 것이다.&lt;/p&gt;
&lt;p&gt;데이터 불균형에 관한 글
&lt;a href=&quot;https://3months.tistory.com/414?category=756964&quot;&gt;https://3months.tistory.com/414?category=756964&lt;/a&gt;
&lt;a href=&quot;https://www.tensorflow.org/tutorials/structured_data/imbalanced_data?hl=ko#oversample_the_minority_class&quot;&gt;https://www.tensorflow.org/tutorials/structured_data/imbalanced_data?hl=ko#oversample_the_minority_class&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;딥러닝-deep-learning&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%94%A5%EB%9F%AC%EB%8B%9D-deep-learning&quot; aria-label=&quot;딥러닝 deep learning permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;딥러닝 (Deep Learning)&lt;/h1&gt;
&lt;p&gt;머신러닝 중 신경망을 통해 데이터를 학습하는 알고리즘&lt;/p&gt;</content:encoded></item><item><title><![CDATA[JS/프로토타입 설명]]></title><description><![CDATA[…]]></description><link>https://ljh01.github.io/blog/JS_prototype/</link><guid isPermaLink="false">https://ljh01.github.io/blog/JS_prototype/</guid><pubDate>Wed, 14 Sep 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;프로토타입 이해가 도저히 안됐는데 이제 됨
일단 자바스크립트에서 &lt;code class=&quot;language-text&quot;&gt;class&lt;/code&gt;라는 키워드를 잠시 잊어야 한다. 이건 문법이지 파이썬 등에서 쓰는 그런 클래스가 아니다.&lt;/p&gt;
&lt;h1 id=&quot;함수&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%A8%EC%88%98&quot; aria-label=&quot;함수 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;함수&lt;/h1&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function A() {
	this.name = &apos;hi&apos;
	this.x = 3
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 선언하면 이런 일이 일어난다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/5e735674-0fa3-441c-85bc-53a69461b57c/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;엥? 하는 부분 두가지&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;오른쪽에 노란놈은 누구인가?&lt;/li&gt;
&lt;li&gt;A에 프로토타입이라는 프로퍼티는 안만들었는데?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;오른쪽-놈은-누구인가&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%98%A4%EB%A5%B8%EC%AA%BD-%EB%86%88%EC%9D%80-%EB%88%84%EA%B5%AC%EC%9D%B8%EA%B0%80&quot; aria-label=&quot;오른쪽 놈은 누구인가 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;오른쪽 놈은 누구인가?&lt;/h2&gt;
&lt;p&gt;오른쪽은 함수가 아닌 프로토타입 객체라고 하는 것이다. 함수를 만들어지면서 자동으로 만들어지는 객체이다. 왜 생기는거지? 하는 의문은 나중에 해결하자.&lt;/p&gt;
&lt;h2 id=&quot;함수의-prototype-속성은-무엇인가&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%A8%EC%88%98%EC%9D%98-prototype-%EC%86%8D%EC%84%B1%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80&quot; aria-label=&quot;함수의 prototype 속성은 무엇인가 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;함수의 prototype 속성은 무엇인가?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/f1aa6819-c3a8-4129-85eb-6ef6d17be236/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;사실 이건 함수 A의 프로토타입 객체를 가리키는 속성이다. 프로토타입 오브젝트는 함수와 함께 붙어다닌다.&lt;/p&gt;
&lt;h2 id=&quot;프로토타입-오브젝트의-속성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8%EC%9D%98-%EC%86%8D%EC%84%B1&quot; aria-label=&quot;프로토타입 오브젝트의 속성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;프로토타입 오브젝트의 속성&lt;/h2&gt;
&lt;p&gt;내 맘대로 PO라고 줄여서 부르겠다.
&quot;함수 A의 PO가 누구냐?&quot; 라고 함수에게 묻고싶으면 &lt;code class=&quot;language-text&quot;&gt;prototype&lt;/code&gt;속성을 쓰면 되듯이, PO한테도 &quot;너와 연결된 함수가 누구냐?&quot; 라고 물을 수 있다. 이건 PO의 &lt;code class=&quot;language-text&quot;&gt;constructor&lt;/code&gt; 속성을 사용하면 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/a4bdf3b5-1116-4118-95af-61828c24aecf/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;그렇다면 &lt;code class=&quot;language-text&quot;&gt;A.prototype.constructor&lt;/code&gt; 이건 뭘 가르키는 것일까?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/9fbd4762-0f8c-46f5-b46b-0aa27d8e28cd/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt;가 나와버린다 ㅋㅋ&lt;/p&gt;
&lt;p&gt;그럼 우린 PO의 &lt;code class=&quot;language-text&quot;&gt;__proto__&lt;/code&gt; 빼고는 다 뭔지 알았다.&lt;/p&gt;
&lt;h2 id=&quot;함수로-객체-만들기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%A8%EC%88%98%EB%A1%9C-%EA%B0%9D%EC%B2%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0&quot; aria-label=&quot;함수로 객체 만들기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;함수로 객체 만들기&lt;/h2&gt;
&lt;p&gt;A는 this가 들어간 이상 객체를 만드는 빵틀같은 함수가 된다. 당연히 객체(인스턴스)를 찍어내야겠지? 두개만 만들어보자.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/cf46a2d2-4821-44df-8b8b-3c5c809c1c6a/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;이렇게 만들어진다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/1954a9dd-e849-49a3-b889-34500cadd574/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;constructor&lt;/code&gt;는 자기를 만든 함수를 가르킴
?? &lt;code class=&quot;language-text&quot;&gt;__proto__&lt;/code&gt; 얘는 어디서 온거?&lt;/p&gt;
&lt;h2 id=&quot;만들어진-객체&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%A7%8C%EB%93%A4%EC%96%B4%EC%A7%84-%EA%B0%9D%EC%B2%B4&quot; aria-label=&quot;만들어진 객체 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;만들어진 객체&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;__proto__&lt;/code&gt;는 사실 오브젝트의 &quot;어멍&quot;을 가르키는 속성이다. 조상도 괜찮지만 난 어멍이라고 불러야지.
당장은 감이 안온다. 불러보면 안다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/782c3b88-5ae8-4b47-910c-c3a43e2ff5c3/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;A의 PO가 나오네?&lt;/p&gt;
&lt;p&gt;그럼 이렇게 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/12a37b91-8e8b-4a65-8902-e9e284fc2f3d/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;그 다음으로 궁금해지는게 있다. &lt;strong&gt;그럼 PO A의 어멍은 누구임??&lt;/strong&gt;
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/35238d50-472a-4ecd-82e9-f5bf7b923c1a/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;저~~ 위에 조상격 어멍인 함수 &lt;code class=&quot;language-text&quot;&gt;function Object&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;PO Object&lt;/code&gt;가 있는것이다. 이 &lt;code class=&quot;language-text&quot;&gt;PO Object&lt;/code&gt;는 &lt;code class=&quot;language-text&quot;&gt;__proto__&lt;/code&gt;가 &lt;code class=&quot;language-text&quot;&gt;null&lt;/code&gt;이다.&lt;/p&gt;
&lt;p&gt;이렇게 객체들이 어멍과 연결되어있는 것을 보고 &lt;strong&gt;Prototype Chain&lt;/strong&gt;이라고 한다.&lt;/p&gt;
&lt;h2 id=&quot;용도&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9A%A9%EB%8F%84&quot; aria-label=&quot;용도 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;용도&lt;/h2&gt;
&lt;p&gt;그래서 이런게 왜 있는건가? 까지는 나도 모르고 어떻게 활용하는가? 는 가능하다. 위 사진을 보면 빵틀 A로 찍어낸 빵들인 &lt;code class=&quot;language-text&quot;&gt;Aob0&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;Aob1&lt;/code&gt;은 각각 &lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt;과 &lt;code class=&quot;language-text&quot;&gt;x&lt;/code&gt;를 가지고 있는데, 두 변수가 객체마다 차이가 없다면 이건 메모리 낭비겠지? &lt;code class=&quot;language-text&quot;&gt;Aob0.name&lt;/code&gt;이나 &lt;code class=&quot;language-text&quot;&gt;A.ob1.name&lt;/code&gt;이나 같은데 메모리에 두번 할당되니까.
그래서 이런 녀석들을 자신의 어멍에 넣는다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/1dc81b79-fc0a-47e0-8c08-e7d09a651960/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;A.prototype.name =&apos;hi&apos;&lt;/code&gt;
이렇게 적어주면 A의 PO에 name이 생긴다. 그리고
&lt;code class=&quot;language-text&quot;&gt;Aob0.name&lt;/code&gt;이나 &lt;code class=&quot;language-text&quot;&gt;A.ob1.name&lt;/code&gt;를 찾아도 어멍인 &lt;code class=&quot;language-text&quot;&gt;PO A&lt;/code&gt;에서 &lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt;을 찾아준다! 어떻게? &lt;strong&gt;prototype chain&lt;/strong&gt;을 타고 알아서 찾아준다.&lt;/p&gt;
&lt;p&gt;만약 PO A에 &lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt;이 없다? 그럼 PO A의 어멍인 &lt;code class=&quot;language-text&quot;&gt;Object&lt;/code&gt;를 뒤질것이다. 그렇게 나올 때까지 어멍을 찾아 뒤지고 없으면 에러를 내는 방식이다.&lt;/p&gt;
&lt;h1 id=&quot;함수-vs-객체&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%A8%EC%88%98-vs-%EA%B0%9D%EC%B2%B4&quot; aria-label=&quot;함수 vs 객체 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;함수 vs 객체&lt;/h1&gt;
&lt;p&gt;근데 &lt;code class=&quot;language-text&quot;&gt;함수.__proto__&lt;/code&gt;로 함수의 어멍을 불러도 뭔가 나온다 ㅋㅋ 얘도 객체였나? 객체가 맞긴 한듯
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/a13980e3-5d79-4487-aaee-516fd220d23d/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;살펴보니 함수의 어멍이 되는 &lt;code class=&quot;language-text&quot;&gt;() {[native code]}&lt;/code&gt; 얘는 나도 잘 모르겠다 ㅋㅋ 근데 얘는 &lt;code class=&quot;language-text&quot;&gt;__proto__&lt;/code&gt;를 가지지 않는 것을 보니 더 살펴볼 어멍은 없는 듯 해서 굳이 안 알아보련다...&lt;/p&gt;
&lt;p&gt;정리..
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/b44fc431-58dc-4227-9771-0659617c6dd2/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[JS/호이스팅(Hoisting)]]></title><description><![CDATA[자바스크립트에서
인터프리터가 함수,변수의 선언을 맨 윗줄로 땡겨서 먼저 메모리에 할당해주는 것
이라고 이해하면 된다. 예시) 이렇게 작성해도 이라는 함수를 윗줄로 땡겨서 먼저 선언해줬기 때문에 잘 작동한다. 이것도 마찬가지로 잘 된다.]]></description><link>https://ljh01.github.io/blog/Hoisting/</link><guid isPermaLink="false">https://ljh01.github.io/blog/Hoisting/</guid><pubDate>Tue, 13 Sep 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;자바스크립트에서
&lt;strong&gt;인터프리터가 함수,변수의 선언을 맨 윗줄로 땡겨서 먼저 메모리에 할당해주는 것&lt;/strong&gt;
이라고 이해하면 된다.&lt;/p&gt;
&lt;p&gt;예시)&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;catName(&quot;클로이&quot;);

function catName(name) {
  console.log(&quot;제 고양이의 이름은 &quot; + name + &quot;입니다&quot;);
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 작성해도 &lt;code class=&quot;language-text&quot;&gt;catName&lt;/code&gt;이라는 함수를 윗줄로 땡겨서 먼저 선언해줬기 때문에 잘 작동한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;a = &apos;안녕&apos;
console.log(a)
var a&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이것도 마찬가지로 잘 된다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[SQL/DDL, DML]]></title><description><![CDATA[DDL (Data Definition Language) DDL (Data Definition Language) CREATE ALTER DROP 데이터를 정의하는 역할이다. db의 틀을 만들 때 사용하는 것들이다. CREATE…]]></description><link>https://ljh01.github.io/blog/SQLDDLDML/</link><guid isPermaLink="false">https://ljh01.github.io/blog/SQLDDLDML/</guid><pubDate>Thu, 08 Sep 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;ddl-data-definition-language&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#ddl-data-definition-language&quot; aria-label=&quot;ddl data definition language permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DDL (Data Definition Language)&lt;/h1&gt;
&lt;h1 id=&quot;ddl-data-definition-language-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#ddl-data-definition-language-1&quot; aria-label=&quot;ddl data definition language 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DDL (Data Definition Language)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CREATE&lt;/li&gt;
&lt;li&gt;ALTER&lt;/li&gt;
&lt;li&gt;DROP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;데이터를 정의하는 역할이다. db의 틀을 만들 때 사용하는 것들이다.&lt;/p&gt;
&lt;h2 id=&quot;create&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#create&quot; aria-label=&quot;create permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CREATE&lt;/h2&gt;
&lt;p&gt;테이블을 만들 때 사용&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;CREATE TABLE A (
	A_id INTEGER PRIMARY KEY,
	name TEXT NOT NULL, # NULL이 아님
    password TEXT UNIQUE DEFAULT &apos;1234&apos;, # 중복되지 않아야 함, 기본값 있음.
    phone TEXT NOT NULL UNIQUE CHECK (LENGTH(phone) &gt;= 10), # 길이가 10 이상이어야함
);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;여러 키워드들이 있다. &lt;code class=&quot;language-text&quot;&gt;PRIMARY KEY&lt;/code&gt;의 경우 아래와 같이 따로 지정해줘도 된다.
&lt;code class=&quot;language-text&quot;&gt;UNIQUE&lt;/code&gt; 제약조건의 경우 &lt;code class=&quot;language-text&quot;&gt;NULL&lt;/code&gt;의 중복을 다루지 않는다. 모든 &lt;code class=&quot;language-text&quot;&gt;NULL&lt;/code&gt;이 고유하다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;id INTEGER
phone TEXT NOT NULL ...
PRIMARY KEY(id)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;데이터 테이블 &lt;code class=&quot;language-text&quot;&gt;pandas&lt;/code&gt;의 &lt;code class=&quot;language-text&quot;&gt;dataframe&lt;/code&gt;으로 불러오기
&lt;code class=&quot;language-text&quot;&gt;pd.read_sql_query(&quot;SELECT * FROM A&quot;, conn)&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;외부-테이블-값-참조하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%99%B8%EB%B6%80-%ED%85%8C%EC%9D%B4%EB%B8%94-%EA%B0%92-%EC%B0%B8%EC%A1%B0%ED%95%98%EA%B8%B0&quot; aria-label=&quot;외부 테이블 값 참조하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;외부 테이블 값 참조하기&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;CREATE TABLE B (
	id INTEGER PRIMARY KEY,
	A_id INTEGER,
    FOREIGN KEY (A_id)
    	REFERENCES A(A_id) # A 테이블의 A_id를 참조한다.
        	ON DELETE CASCADE, # A 테이블에서 데이터가 삭제되면 B에서도 자동으로 삭제한다.
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;ON UPDATE&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ON CREATE&lt;/code&gt; / &lt;code class=&quot;language-text&quot;&gt;SET NULL&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;SET DEFAULT&lt;/code&gt; 등등 많다. &lt;a href=&quot;https://sqlitetutorial.net/sqlite-foreign-key/&quot;&gt;참고&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;alter&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#alter&quot; aria-label=&quot;alter permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ALTER&lt;/h2&gt;
&lt;p&gt;기존 테이블을 바꿀 때 사용한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;CREATE TABLE devices (
	name TEXT NOT NULL
    model TEXT NOT NULL
    serial INTEGER NOT NULL UNIQUE
);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;테이블의 이름 변경&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ALTER TABLE devices RENAME TO phones;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;열 추가&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ALTER TABLE phones ADD COLUMN factory TEXT NOT NULL;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;열 이름 변경&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ALTER TABLE phones RENAME COLUMN factory TO country;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;drop&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#drop&quot; aria-label=&quot;drop permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DROP&lt;/h2&gt;
&lt;p&gt;삭제하는 역할이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;DROP TABLE IF EXISTS phone; # 존재하면 삭제하기&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;sqlite-덤프&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sqlite-%EB%8D%A4%ED%94%84&quot; aria-label=&quot;sqlite 덤프 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite 덤프&lt;/h1&gt;
&lt;p&gt;DB 내 테이블의 목록, 테이블의 구조 등을 불러온다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;script = &quot;&quot;&quot;
SELECT name FROM sqlite_master
WHERE 
	type = &apos;table&apos; AND 
    name NOT LIKE &apos;sqlite_%&apos;
&quot;&quot;&quot;
df = pd.read_sql_query(script, conn)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;sqlite_master&lt;/code&gt;에서 전부를 뽑아내면 가장 많은 정보를 뽑을 수 있다.&lt;/p&gt;
&lt;h1 id=&quot;dml-data-manipulation-language&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dml-data-manipulation-language&quot; aria-label=&quot;dml data manipulation language permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DML (Data Manipulation language)&lt;/h1&gt;
&lt;p&gt;테이블 내 데이터를 조작할 때 사용함
&lt;strong&gt;CRUD
SELECT(READ) / INSERT(CREATE) / UPDATE(UPDATE) / DELETE(DELETE)&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;selectfrom&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#selectfrom&quot; aria-label=&quot;selectfrom permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SELECT(FROM)&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT column0, column1, ... FROM tablename;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;파이썬의 경우 &lt;code class=&quot;language-text&quot;&gt;cur.execute()&lt;/code&gt;하고 &lt;code class=&quot;language-text&quot;&gt;cur.fetchall()&lt;/code&gt;을 하면 데이터를 뽑아낼 수 있다. 혹은
&lt;code class=&quot;language-text&quot;&gt;pd.read_sql_query(&quot;SELECT ~~~&quot;, conn)&lt;/code&gt; 이렇게 데이터프레임으로 바로 뽑을 수도 있다.&lt;/p&gt;
&lt;p&gt;column 옆에 &lt;code class=&quot;language-text&quot;&gt;AS 어쩌구&lt;/code&gt;를 붙여준다면 column의 이름을 &lt;code class=&quot;language-text&quot;&gt;어쩌구&lt;/code&gt;로 바꿔준다.&lt;/p&gt;
&lt;h2 id=&quot;insertinto&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#insertinto&quot; aria-label=&quot;insertinto permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INSERT(INTO)&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;INSERT INTO tablename (column0, column1, ...) VALUES (&apos;value0&apos;, &apos;value1&apos;, ...);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;여러 개를 한번에 넣을 수도 있다.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;INSERT INTO tablename (column0, column1, ...) VALUES (&apos;value0&apos;, &apos;value1&apos;, ...), (&apos;value5&apos;, &apos;value6&apos;, ...);&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;updateset&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#updateset&quot; aria-label=&quot;updateset permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UPDATE(SET)&lt;/h2&gt;
&lt;p&gt;이미 존재하는 데이터를 수정할 때 사용한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;UPDATE tablename SET email = &apos;&apos; WHERE id = 4;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;tablename 테이블에 email열을 &apos;&apos;로 수정한다. 어느 데이터? id가 4인 데이터.
&lt;code class=&quot;language-text&quot;&gt;WHERE&lt;/code&gt; 키워드를 사용하지 않으면 전부 &apos;&apos;로 수정된다.&lt;/p&gt;
&lt;p&gt;SET 뒤에 여러 열을 추가해 수정할 수 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;UPDATE tablename SET email = &apos;&apos;, phone = &apos;&apos; WHERE id = 4;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;문자열-가공&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B0%80%EA%B3%B5&quot; aria-label=&quot;문자열 가공 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;문자열 가공&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;UPDATE ~~
SET fullname = UPPER(firstname || &quot;,&quot; || lastname);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이런식으로 &lt;code class=&quot;language-text&quot;&gt;||&lt;/code&gt;혹은 &lt;code class=&quot;language-text&quot;&gt;CONCAT()&lt;/code&gt;을 통해 문자열을 합쳐주고, &lt;code class=&quot;language-text&quot;&gt;UPPER()&lt;/code&gt;함수를 통해 대문자로 변환도 가능하다.
&lt;code class=&quot;language-text&quot;&gt;LENGTH()&lt;/code&gt;와 같이 길이를 반환해주는 함수도 있다. &lt;a href=&quot;https://www.sqlitetutorial.net/sqlite-string-functions/&quot;&gt;더보기&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;deletefrom&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#deletefrom&quot; aria-label=&quot;deletefrom permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DELETE(FROM)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;주의&lt;/strong&gt;: &lt;code class=&quot;language-text&quot;&gt;DROP&lt;/code&gt;은 테이블 및 열을 떨구는 역할이다. 데이터를 삭제하는 것은 &lt;code class=&quot;language-text&quot;&gt;DELETE&lt;/code&gt;다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;DELETE FROM tablename WHERE id=33;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;order-by&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#order-by&quot; aria-label=&quot;order by permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ORDER BY&lt;/h2&gt;
&lt;h4 id=&quot;정렬하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0&quot; aria-label=&quot;정렬하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;정렬하기&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table ORDER BY columnname;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;기본은 오름차순이다. 맨 뒤에 &lt;code class=&quot;language-text&quot;&gt;ASC&lt;/code&gt;가 오거나 기본은 오름차순, &lt;code class=&quot;language-text&quot;&gt;DESC&lt;/code&gt;이 오면 내림차순이다.&lt;/p&gt;
&lt;h4 id=&quot;여러-기준으로-정렬하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%97%AC%EB%9F%AC-%EA%B8%B0%EC%A4%80%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0&quot; aria-label=&quot;여러 기준으로 정렬하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;여러 기준으로 정렬하기&lt;/h4&gt;
&lt;p&gt;구분해서 넣어준다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table ORDER BY column0 ASC, column1 DESC;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;NULL&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;NONE&lt;/code&gt;은 정렬 시 가장 작은 값으로 간주한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;distinct&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#distinct&quot; aria-label=&quot;distinct permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DISTINCT&lt;/h2&gt;
&lt;h4 id=&quot;데이터-종류-확인중복제거&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A2%85%EB%A5%98-%ED%99%95%EC%9D%B8%EC%A4%91%EB%B3%B5%EC%A0%9C%EA%B1%B0&quot; aria-label=&quot;데이터 종류 확인중복제거 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 종류 확인(중복제거)&lt;/h4&gt;
&lt;p&gt;특정 열에서 데이터의 종류가 얼마나 많은지 찾아보자.
(df로 뽑아낸 상황)&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;set(df[&apos;column&apos;])&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;데이터 값을 중복 없이 리턴해준다.&lt;/p&gt;
&lt;h4 id=&quot;데이터-종류별-수-확인&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A2%85%EB%A5%98%EB%B3%84-%EC%88%98-%ED%99%95%EC%9D%B8&quot; aria-label=&quot;데이터 종류별 수 확인 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 종류별 수 확인&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;df[&apos;coloumn&apos;].value_counts&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;데이터 값 별 빈도를 리턴해준다.&lt;/p&gt;
&lt;h3 id=&quot;sql문으로-중복-데이터-제거&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sql%EB%AC%B8%EC%9C%BC%EB%A1%9C-%EC%A4%91%EB%B3%B5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%9C%EA%B1%B0&quot; aria-label=&quot;sql문으로 중복 데이터 제거 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL문으로 중복 데이터 제거&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT DISTINCT column FROM table;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이러면 위 &lt;strong&gt;데이터 종류 확인(중복제거)&lt;/strong&gt; 같은 결과가 나온다.&lt;/p&gt;
&lt;h3 id=&quot;distinct-여러개&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#distinct-%EC%97%AC%EB%9F%AC%EA%B0%9C&quot; aria-label=&quot;distinct 여러개 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DISTINCT 여러개&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT DISTINCT column0 column1 FROM table;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;column0&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;column1&lt;/code&gt;이 둘다 중복되는 경우에만 지운다.&lt;/p&gt;
&lt;h3 id=&quot;중요&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A4%91%EC%9A%94&quot; aria-label=&quot;중요 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;중요&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT&lt;/code&gt;시 &lt;code class=&quot;language-text&quot;&gt;DISTINCT&lt;/code&gt;한 열과 그냥 보통 열을 같이 고를 수 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그냥 &lt;code class=&quot;language-text&quot;&gt;DISTINCT&lt;/code&gt;를 걸면 선택하면 모든 열에 걸리게 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;NULL&lt;/code&gt;의 중복도 허용되지 않는다. DDL에서 &lt;code class=&quot;language-text&quot;&gt;UNIQUE&lt;/code&gt;가 NULL의 중복을 허용해주는 것과는 다르다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;where&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#where&quot; aria-label=&quot;where permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WHERE&lt;/h2&gt;
&lt;p&gt;데이터를 SELECT할 때 보통 필터링 용도로 쓰인다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;대소&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table WHERE column1 &gt; 100;
SELECT * FROM table WHERE number &amp;lt;&gt; 10;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;범위&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;양 끝은 포함된다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table WHERE column1 BETWEEN 1 AND 30;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;집합&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table WHERE column1 IN (1,2,3);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;패턴&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table WHERE name LIKE &apos;%John%&apos;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;NULL&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table WHERE name IS NULL;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;등등&lt;/p&gt;
&lt;h4 id=&quot;와일드카드-문자&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%99%80%EC%9D%BC%EB%93%9C%EC%B9%B4%EB%93%9C-%EB%AC%B8%EC%9E%90&quot; aria-label=&quot;와일드카드 문자 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;와일드카드 문자&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;아무 문자열. &apos;%picture&apos;는 끝에 picture가 오기만하면 된다. &apos;%pic%&apos;은 아무 곳이나 pic이 들어가면 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;_&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;글자 하나&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;범위 내 문자열 한개. &apos;[1-3]&apos;은 1-3사이 문자 하나를 뜻하고, &apos;[a-f]&apos;는 a-f사이 하나를 뜻함.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[^]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위의 여집합. [^1-3]은 1-3사이 문자열이 아닌 문자열 하나를 뜻함.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&apos;+&apos;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;말 그대로 문자열 더하기&lt;/p&gt;
&lt;h3 id=&quot;subquery&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#subquery&quot; aria-label=&quot;subquery permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subquery&lt;/h3&gt;
&lt;p&gt;필터링을 위해 다른 테이블의 정보가 필요하다면?&lt;/p&gt;
&lt;p&gt;예를 들어,
table &quot;영수증&quot; 에 고객이름(cust_name), 고객이 구매한 상품품번(item_num)이 있고
table &quot;상품&quot; 에 상품품번(item_num)과 상품 이름(item_name)이 있는 상황에서
스마트폰을 산 고객의 명단이 궁금하다면?&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT cust_name 
FROM 영수증 
WHERE item_num IN (
	SELECT item_num 
    FROM 물건 
    WHERE item_name = &apos;스마트폰&apos;
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;limit&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#limit&quot; aria-label=&quot;limit permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LIMIT&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;LIMIT&lt;/code&gt; 키워드를 사용하면 위 혹은 아래서부터 N개의 행만 보여준다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table LIMIT 4;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같은 코드는 위에서 4개까지 보여준다.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;OFFSET&lt;/code&gt;을 뒤에 붙여주면 데이터를 몇개 덜어내고 그 다음부터 4개를 보여준다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table LIMIT 4 OFFSET 4;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;ORDER BY&lt;/code&gt;를 사용해 정렬 후 사용하면 &quot;A등 ~ B등 추출하기&quot; 같은 것들이 된다.&lt;/p&gt;
&lt;h2 id=&quot;join&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#join&quot; aria-label=&quot;join permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JOIN&lt;/h2&gt;
&lt;p&gt;테이블을 합병한다. 네가지 종류가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;INNER JOIN (교집합)&lt;/li&gt;
&lt;li&gt;LEFT JOIN, RIGHT JOIN&lt;/li&gt;
&lt;li&gt;OUTER JOIN (합집합)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JOIN을 &lt;code class=&quot;language-text&quot;&gt;FROM&lt;/code&gt; 뒤에 줄줄이 붙여서 여러 테이블을 합병할 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;inner-join&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#inner-join&quot; aria-label=&quot;inner join permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INNER JOIN&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;두 테이블의 교집합만 살아남는다.&lt;/strong&gt;
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/6970930b-0b53-4959-8659-9fc7e3c50a5a/image.png&quot; alt=&quot;microsoft docs&quot;&gt;&lt;/p&gt;
&lt;p&gt;SQL문은 다음과 비스무리하겠다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT Date, CountryID, Units, Country
FROM Lefttable 
INNER JOIN Righttable ON CountryID = ID&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT&lt;/code&gt;문은 &lt;code class=&quot;language-text&quot;&gt;lefttable&lt;/code&gt;에서 column들을 고르는게 아니라 두 테이블을 합병한 테이블에서 column들을 고른다&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;두 테이블의 column명이 같다면 &lt;code class=&quot;language-text&quot;&gt;테이블명.columnname&lt;/code&gt; 식으로 적어주면 된다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;매번 테이블명. ~~~ 하기 싫다면 아래와 같이 테이블명에 이름을 더 붙여줄 수 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT l.Date, l.CountryID, l.Units, r.Country
FROM Lefttable l
INNER JOIN Righttable r ON l.CountryID = r.ID&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;2번 내용에서, &lt;code class=&quot;language-text&quot;&gt;ON&lt;/code&gt; 뒤에 비교하는 두 column의 이름이 같다면 &lt;code class=&quot;language-text&quot;&gt;ON 조건&lt;/code&gt; 대신 &lt;code class=&quot;language-text&quot;&gt;USING(columnname)&lt;/code&gt;을 사용하는 것이 간결하다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;번외-pandas로-테이블-합병하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B2%88%EC%99%B8-pandas%EB%A1%9C-%ED%85%8C%EC%9D%B4%EB%B8%94-%ED%95%A9%EB%B3%91%ED%95%98%EA%B8%B0&quot; aria-label=&quot;번외 pandas로 테이블 합병하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;번외: &lt;code class=&quot;language-text&quot;&gt;pandas&lt;/code&gt;로 테이블 합병하기&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;pd.merge(df_a, df_b, left_on=&apos;CountryID&apos;, right_on=&apos;ID&apos;, how=&apos;inner&apos;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;위의 예시와 같다.&lt;/p&gt;
&lt;h3 id=&quot;left-join&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#left-join&quot; aria-label=&quot;left join permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LEFT JOIN&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;왼쪽 테이블만 유지된다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/7e803b31-8c28-4db5-82ac-6bda6847b860/image.png&quot; alt=&quot;microsoft docs&quot;&gt;&lt;/p&gt;
&lt;p&gt;위의 &lt;code class=&quot;language-text&quot;&gt;INNER JOIN&lt;/code&gt;은 조건에 맞지않는 양 테이블의 데이터를 모두 버렸지만&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;LEFT JOIN&lt;/code&gt; 은 왼쪽 테이블을 유지하면서 조건에 맞는 오른쪽 테이블의 데이터를 불러오는 느낌이다.&lt;/p&gt;
&lt;p&gt;SQL문은 &lt;code class=&quot;language-text&quot;&gt;INNER JOIN&lt;/code&gt;과 다를게 없다.&lt;/p&gt;
&lt;h3 id=&quot;right-join&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#right-join&quot; aria-label=&quot;right join permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RIGHT JOIN&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;LEFT JOIN&lt;/code&gt; 으로 대체 가능&lt;/p&gt;
&lt;h3 id=&quot;outer-join&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#outer-join&quot; aria-label=&quot;outer join permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OUTER JOIN&lt;/h3&gt;
&lt;p&gt;합집합&lt;/p&gt;
&lt;h3 id=&quot;번외--self-join&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B2%88%EC%99%B8--self-join&quot; aria-label=&quot;번외  self join permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;번외 : SELF JOIN&lt;/h3&gt;
&lt;p&gt;테이블 하나를 두개로 보고 합병하는 것이다. 사실 한 테이블이지만 두 테이블로 생각하고 코드를 짜면 된다.
&lt;strong&gt;테이블 뒤 별명을 만들어서 헷갈리지 않도록 한다.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;group-by&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#group-by&quot; aria-label=&quot;group by permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GROUP BY&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;pd.pivot_table(df, index=&apos;columnname&apos;, aggfunc=np.sum)&lt;/code&gt;
위의 &lt;code class=&quot;language-text&quot;&gt;pd.pivot_table()&lt;/code&gt;과 유사하다.&lt;/p&gt;
&lt;p&gt;데이터프레임 df에서 index열을 기준으로 같은 것끼리 모아 aggfunc을 실행해준다.&lt;/p&gt;
&lt;p&gt;예를 들면 멜론차트에서 같은 가수가 부른 음원끼리 모아서 몇곡이 있는지를 계산하는 것이 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT ArtistName, COUNT(TrackId) 
FROM tracks 
GROUP BY ArtistName&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이러면 아티스트 이름, 트랙 수가 있는 테이블이 나온다.
맨 윗줄에 &lt;code class=&quot;language-text&quot;&gt;COUNT()&lt;/code&gt;라는 함수가 있다. &lt;code class=&quot;language-text&quot;&gt;pd.pivot_table()&lt;/code&gt;로 치면 &lt;code class=&quot;language-text&quot;&gt;aggfunc&lt;/code&gt;과 같은 역할이다. 쓸 수 있는 함수는
&lt;code class=&quot;language-text&quot;&gt;SUM()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;AVG()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;COUNT()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;MIN()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;MAX()&lt;/code&gt; 등이 있다.&lt;/p&gt;
&lt;h3 id=&quot;having&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#having&quot; aria-label=&quot;having permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HAVING&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;GROUP BY&lt;/code&gt;에서 필터링이 필요할 때 사용한다. &lt;code class=&quot;language-text&quot;&gt;HAVING&lt;/code&gt; 뒤에 조건을 붙여주면 된다.&lt;/p&gt;
&lt;h4 id=&quot;where과의-차이&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#where%EA%B3%BC%EC%9D%98-%EC%B0%A8%EC%9D%B4&quot; aria-label=&quot;where과의 차이 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WHERE과의 차이?&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;WHERE&lt;/code&gt;가 &lt;code class=&quot;language-text&quot;&gt;GROUP BY&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;HAVING&lt;/code&gt;보다 먼저 적용된다.
일반적으로는 &lt;code class=&quot;language-text&quot;&gt;WHERE&lt;/code&gt;을 먼저 써주는게 빠르다. 그런데 &lt;code class=&quot;language-text&quot;&gt;HAVING&lt;/code&gt;을 써야만 하는 경우도 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT ArtistName, COUNT(TrackId) 
FROM tracks 
GROUP BY ArtistName
HAVING COUNT(TrackId) = 2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;GROUP BY&lt;/code&gt;를 먼저 해야 aggregate 함수인 &lt;code class=&quot;language-text&quot;&gt;COUNT&lt;/code&gt;를 쓸 수 있으니 &lt;code class=&quot;language-text&quot;&gt;WHERE&lt;/code&gt;로는 불가능하다.&lt;/p&gt;
&lt;h4 id=&quot;날짜-다루기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%82%A0%EC%A7%9C-%EB%8B%A4%EB%A3%A8%EA%B8%B0&quot; aria-label=&quot;날짜 다루기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;날짜 다루기&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;STRFTIME(a, b)&lt;/code&gt;이라는 함수가 있는데, 날짜를 다루기 위한 함수이다.
첫번째 인수에는 원하는 출력방식을, 두번째에는 시간 객체를 넣으면 된다.&lt;/p&gt;
&lt;p&gt;풀 시간에서 년도만 추출하고 싶다면
&lt;code class=&quot;language-text&quot;&gt;STRFTIME(&apos;%Y&apos;, Date)&lt;/code&gt; 이렇게 사용하면 된다.&lt;/p&gt;
&lt;h2 id=&quot;순서&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%88%9C%EC%84%9C&quot; aria-label=&quot;순서 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;순서&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SELECT FROM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JOIN&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WHERE&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GROUP BY, HAVING&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ORDER BY&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LIMIT, OFFSET&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CREATE&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ALTER&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DROP&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;데이터를 정의하는 역할이다. db의 틀을 만들 때 사용하는 것들이다.&lt;/p&gt;
&lt;h2 id=&quot;create-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#create-1&quot; aria-label=&quot;create 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CREATE&lt;/h2&gt;
&lt;p&gt;테이블을 만들 때 사용&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;CREATE TABLE A (
	A_id INTEGER PRIMARY KEY,
	name TEXT NOT NULL, # NULL이 아님
    password TEXT UNIQUE DEFAULT &apos;1234&apos;, # 중복되지 않아야 함, 기본값 있음.
    phone TEXT NOT NULL UNIQUE CHECK (LENGTH(phone) &gt;= 10), # 길이가 10 이상이어야함
);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;여러 키워드들이 있다. &lt;code class=&quot;language-text&quot;&gt;PRIMARY KEY&lt;/code&gt;의 경우 아래와 같이 따로 지정해줘도 된다.
&lt;code class=&quot;language-text&quot;&gt;UNIQUE&lt;/code&gt; 제약조건의 경우 &lt;code class=&quot;language-text&quot;&gt;NULL&lt;/code&gt;의 중복을 다루지 않는다. 모든 &lt;code class=&quot;language-text&quot;&gt;NULL&lt;/code&gt;이 고유하다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;id INTEGER
phone TEXT NOT NULL ...
PRIMARY KEY(id)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;데이터 테이블 &lt;code class=&quot;language-text&quot;&gt;pandas&lt;/code&gt;의 &lt;code class=&quot;language-text&quot;&gt;dataframe&lt;/code&gt;으로 불러오기
&lt;code class=&quot;language-text&quot;&gt;pd.read_sql_query(&quot;SELECT * FROM A&quot;, conn)&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;외부-테이블-값-참조하기-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%99%B8%EB%B6%80-%ED%85%8C%EC%9D%B4%EB%B8%94-%EA%B0%92-%EC%B0%B8%EC%A1%B0%ED%95%98%EA%B8%B0-1&quot; aria-label=&quot;외부 테이블 값 참조하기 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;외부 테이블 값 참조하기&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;CREATE TABLE B (
	id INTEGER PRIMARY KEY,
	A_id INTEGER,
    FOREIGN KEY (A_id)
    	REFERENCES A(A_id) # A 테이블의 A_id를 참조한다.
        	ON DELETE CASCADE, # A 테이블에서 데이터가 삭제되면 B에서도 자동으로 삭제한다.
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;ON UPDATE&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ON CREATE&lt;/code&gt; / &lt;code class=&quot;language-text&quot;&gt;SET NULL&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;SET DEFAULT&lt;/code&gt; 등등 많다. &lt;a href=&quot;https://sqlitetutorial.net/sqlite-foreign-key/&quot;&gt;참고&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;alter-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#alter-1&quot; aria-label=&quot;alter 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ALTER&lt;/h2&gt;
&lt;p&gt;기존 테이블을 바꿀 때 사용한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;CREATE TABLE devices (
	name TEXT NOT NULL
    model TEXT NOT NULL
    serial INTEGER NOT NULL UNIQUE
);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;테이블의 이름 변경&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ALTER TABLE devices RENAME TO phones;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;열 추가&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ALTER TABLE phones ADD COLUMN factory TEXT NOT NULL;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;열 이름 변경&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ALTER TABLE phones RENAME COLUMN factory TO country;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;drop-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#drop-1&quot; aria-label=&quot;drop 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DROP&lt;/h2&gt;
&lt;p&gt;삭제하는 역할이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;DROP TABLE IF EXISTS phone; # 존재하면 삭제하기&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;sqlite-덤프-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sqlite-%EB%8D%A4%ED%94%84-1&quot; aria-label=&quot;sqlite 덤프 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite 덤프&lt;/h1&gt;
&lt;p&gt;DB 내 테이블의 목록, 테이블의 구조 등을 불러온다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;script = &quot;&quot;&quot;
SELECT name FROM sqlite_master
WHERE 
	type = &apos;table&apos; AND 
    name NOT LIKE &apos;sqlite_%&apos;
&quot;&quot;&quot;
df = pd.read_sql_query(script, conn)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;sqlite_master&lt;/code&gt;에서 전부를 뽑아내면 가장 많은 정보를 뽑을 수 있다.&lt;/p&gt;
&lt;h1 id=&quot;dml-data-manipulation-language-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dml-data-manipulation-language-1&quot; aria-label=&quot;dml data manipulation language 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DML (Data Manipulation language)&lt;/h1&gt;
&lt;p&gt;테이블 내 데이터를 조작할 때 사용함
&lt;strong&gt;CRUD
SELECT(READ) / INSERT(CREATE) / UPDATE(UPDATE) / DELETE(DELETE)&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;selectfrom-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#selectfrom-1&quot; aria-label=&quot;selectfrom 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SELECT(FROM)&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT column0, column1, ... FROM tablename;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;파이썬의 경우 &lt;code class=&quot;language-text&quot;&gt;cur.execute()&lt;/code&gt;하고 &lt;code class=&quot;language-text&quot;&gt;cur.fetchall()&lt;/code&gt;을 하면 데이터를 뽑아낼 수 있다. 혹은
&lt;code class=&quot;language-text&quot;&gt;pd.read_sql_query(&quot;SELECT ~~~&quot;, conn)&lt;/code&gt; 이렇게 데이터프레임으로 바로 뽑을 수도 있다.&lt;/p&gt;
&lt;p&gt;column 옆에 &lt;code class=&quot;language-text&quot;&gt;AS 어쩌구&lt;/code&gt;를 붙여준다면 column의 이름을 &lt;code class=&quot;language-text&quot;&gt;어쩌구&lt;/code&gt;로 바꿔준다.&lt;/p&gt;
&lt;h2 id=&quot;insertinto-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#insertinto-1&quot; aria-label=&quot;insertinto 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INSERT(INTO)&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;INSERT INTO tablename (column0, column1, ...) VALUES (&apos;value0&apos;, &apos;value1&apos;, ...);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;여러 개를 한번에 넣을 수도 있다.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;INSERT INTO tablename (column0, column1, ...) VALUES (&apos;value0&apos;, &apos;value1&apos;, ...), (&apos;value5&apos;, &apos;value6&apos;, ...);&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;updateset-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#updateset-1&quot; aria-label=&quot;updateset 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UPDATE(SET)&lt;/h2&gt;
&lt;p&gt;이미 존재하는 데이터를 수정할 때 사용한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;UPDATE tablename SET email = &apos;&apos; WHERE id = 4;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;tablename 테이블에 email열을 &apos;&apos;로 수정한다. 어느 데이터? id가 4인 데이터.
&lt;code class=&quot;language-text&quot;&gt;WHERE&lt;/code&gt; 키워드를 사용하지 않으면 전부 &apos;&apos;로 수정된다.&lt;/p&gt;
&lt;p&gt;SET 뒤에 여러 열을 추가해 수정할 수 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;UPDATE tablename SET email = &apos;&apos;, phone = &apos;&apos; WHERE id = 4;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;문자열-가공-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B0%80%EA%B3%B5-1&quot; aria-label=&quot;문자열 가공 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;문자열 가공&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;UPDATE ~~
SET fullname = UPPER(firstname || &quot;,&quot; || lastname);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이런식으로 &lt;code class=&quot;language-text&quot;&gt;||&lt;/code&gt;혹은 &lt;code class=&quot;language-text&quot;&gt;CONCAT()&lt;/code&gt;을 통해 문자열을 합쳐주고, &lt;code class=&quot;language-text&quot;&gt;UPPER()&lt;/code&gt;함수를 통해 대문자로 변환도 가능하다.
&lt;code class=&quot;language-text&quot;&gt;LENGTH()&lt;/code&gt;와 같이 길이를 반환해주는 함수도 있다. &lt;a href=&quot;https://www.sqlitetutorial.net/sqlite-string-functions/&quot;&gt;더보기&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;deletefrom-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#deletefrom-1&quot; aria-label=&quot;deletefrom 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DELETE(FROM)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;주의&lt;/strong&gt;: &lt;code class=&quot;language-text&quot;&gt;DROP&lt;/code&gt;은 테이블 및 열을 떨구는 역할이다. 데이터를 삭제하는 것은 &lt;code class=&quot;language-text&quot;&gt;DELETE&lt;/code&gt;다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;DELETE FROM tablename WHERE id=33;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;order-by-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#order-by-1&quot; aria-label=&quot;order by 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ORDER BY&lt;/h2&gt;
&lt;h4 id=&quot;정렬하기-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-1&quot; aria-label=&quot;정렬하기 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;정렬하기&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table ORDER BY columnname;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;기본은 오름차순이다. 맨 뒤에 &lt;code class=&quot;language-text&quot;&gt;ASC&lt;/code&gt;가 오거나 기본은 오름차순, &lt;code class=&quot;language-text&quot;&gt;DESC&lt;/code&gt;이 오면 내림차순이다.&lt;/p&gt;
&lt;h4 id=&quot;여러-기준으로-정렬하기-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%97%AC%EB%9F%AC-%EA%B8%B0%EC%A4%80%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-1&quot; aria-label=&quot;여러 기준으로 정렬하기 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;여러 기준으로 정렬하기&lt;/h4&gt;
&lt;p&gt;구분해서 넣어준다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table ORDER BY column0 ASC, column1 DESC;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;NULL&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;NONE&lt;/code&gt;은 정렬 시 가장 작은 값으로 간주한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;distinct-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#distinct-1&quot; aria-label=&quot;distinct 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DISTINCT&lt;/h2&gt;
&lt;h4 id=&quot;데이터-종류-확인중복제거-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A2%85%EB%A5%98-%ED%99%95%EC%9D%B8%EC%A4%91%EB%B3%B5%EC%A0%9C%EA%B1%B0-1&quot; aria-label=&quot;데이터 종류 확인중복제거 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 종류 확인(중복제거)&lt;/h4&gt;
&lt;p&gt;특정 열에서 데이터의 종류가 얼마나 많은지 찾아보자.
(df로 뽑아낸 상황)&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;set(df[&apos;column&apos;])&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;데이터 값을 중복 없이 리턴해준다.&lt;/p&gt;
&lt;h4 id=&quot;데이터-종류별-수-확인-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A2%85%EB%A5%98%EB%B3%84-%EC%88%98-%ED%99%95%EC%9D%B8-1&quot; aria-label=&quot;데이터 종류별 수 확인 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 종류별 수 확인&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;df[&apos;coloumn&apos;].value_counts&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;데이터 값 별 빈도를 리턴해준다.&lt;/p&gt;
&lt;h3 id=&quot;sql문으로-중복-데이터-제거-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sql%EB%AC%B8%EC%9C%BC%EB%A1%9C-%EC%A4%91%EB%B3%B5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%9C%EA%B1%B0-1&quot; aria-label=&quot;sql문으로 중복 데이터 제거 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL문으로 중복 데이터 제거&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT DISTINCT column FROM table;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이러면 위 &lt;strong&gt;데이터 종류 확인(중복제거)&lt;/strong&gt; 같은 결과가 나온다.&lt;/p&gt;
&lt;h3 id=&quot;distinct-여러개-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#distinct-%EC%97%AC%EB%9F%AC%EA%B0%9C-1&quot; aria-label=&quot;distinct 여러개 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DISTINCT 여러개&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT DISTINCT column0 column1 FROM table;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;column0&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;column1&lt;/code&gt;이 둘다 중복되는 경우에만 지운다.&lt;/p&gt;
&lt;h3 id=&quot;중요-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A4%91%EC%9A%94-1&quot; aria-label=&quot;중요 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;중요&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT&lt;/code&gt;시 &lt;code class=&quot;language-text&quot;&gt;DISTINCT&lt;/code&gt;한 열과 그냥 보통 열을 같이 고를 수 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그냥 &lt;code class=&quot;language-text&quot;&gt;DISTINCT&lt;/code&gt;를 걸면 선택하면 모든 열에 걸리게 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;NULL&lt;/code&gt;의 중복도 허용되지 않는다. DDL에서 &lt;code class=&quot;language-text&quot;&gt;UNIQUE&lt;/code&gt;가 NULL의 중복을 허용해주는 것과는 다르다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;where-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#where-1&quot; aria-label=&quot;where 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WHERE&lt;/h2&gt;
&lt;p&gt;데이터를 SELECT할 때 보통 필터링 용도로 쓰인다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;대소&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table WHERE column1 &gt; 100;
SELECT * FROM table WHERE number &amp;lt;&gt; 10;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;범위&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;양 끝은 포함된다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table WHERE column1 BETWEEN 1 AND 30;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;집합&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table WHERE column1 IN (1,2,3);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;패턴&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table WHERE name LIKE &apos;%John%&apos;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;NULL&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table WHERE name IS NULL;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;등등&lt;/p&gt;
&lt;h4 id=&quot;와일드카드-문자-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%99%80%EC%9D%BC%EB%93%9C%EC%B9%B4%EB%93%9C-%EB%AC%B8%EC%9E%90-1&quot; aria-label=&quot;와일드카드 문자 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;와일드카드 문자&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;아무 문자열. &apos;%picture&apos;는 끝에 picture가 오기만하면 된다. &apos;%pic%&apos;은 아무 곳이나 pic이 들어가면 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;_&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;글자 하나&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;범위 내 문자열 한개. &apos;[1-3]&apos;은 1-3사이 문자 하나를 뜻하고, &apos;[a-f]&apos;는 a-f사이 하나를 뜻함.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[^]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위의 여집합. [^1-3]은 1-3사이 문자열이 아닌 문자열 하나를 뜻함.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&apos;+&apos;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;말 그대로 문자열 더하기&lt;/p&gt;
&lt;h3 id=&quot;subquery-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#subquery-1&quot; aria-label=&quot;subquery 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subquery&lt;/h3&gt;
&lt;p&gt;필터링을 위해 다른 테이블의 정보가 필요하다면?&lt;/p&gt;
&lt;p&gt;예를 들어,
table &quot;영수증&quot; 에 고객이름(cust_name), 고객이 구매한 상품품번(item_num)이 있고
table &quot;상품&quot; 에 상품품번(item_num)과 상품 이름(item_name)이 있는 상황에서
스마트폰을 산 고객의 명단이 궁금하다면?&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT cust_name 
FROM 영수증 
WHERE item_num IN (
	SELECT item_num 
    FROM 물건 
    WHERE item_name = &apos;스마트폰&apos;
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;limit-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#limit-1&quot; aria-label=&quot;limit 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LIMIT&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;LIMIT&lt;/code&gt; 키워드를 사용하면 위 혹은 아래서부터 N개의 행만 보여준다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table LIMIT 4;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같은 코드는 위에서 4개까지 보여준다.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;OFFSET&lt;/code&gt;을 뒤에 붙여주면 데이터를 몇개 덜어내고 그 다음부터 4개를 보여준다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM table LIMIT 4 OFFSET 4;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;ORDER BY&lt;/code&gt;를 사용해 정렬 후 사용하면 &quot;A등 ~ B등 추출하기&quot; 같은 것들이 된다.&lt;/p&gt;
&lt;h2 id=&quot;join-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#join-1&quot; aria-label=&quot;join 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JOIN&lt;/h2&gt;
&lt;p&gt;테이블을 합병한다. 네가지 종류가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;INNER JOIN (교집합)&lt;/li&gt;
&lt;li&gt;LEFT JOIN, RIGHT JOIN&lt;/li&gt;
&lt;li&gt;OUTER JOIN (합집합)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JOIN을 &lt;code class=&quot;language-text&quot;&gt;FROM&lt;/code&gt; 뒤에 줄줄이 붙여서 여러 테이블을 합병할 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;inner-join-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#inner-join-1&quot; aria-label=&quot;inner join 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INNER JOIN&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;두 테이블의 교집합만 살아남는다.&lt;/strong&gt;
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/6970930b-0b53-4959-8659-9fc7e3c50a5a/image.png&quot; alt=&quot;microsoft docs&quot;&gt;&lt;/p&gt;
&lt;p&gt;SQL문은 다음과 비스무리하겠다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT Date, CountryID, Units, Country
FROM Lefttable 
INNER JOIN Righttable ON CountryID = ID&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT&lt;/code&gt;문은 &lt;code class=&quot;language-text&quot;&gt;lefttable&lt;/code&gt;에서 column들을 고르는게 아니라 두 테이블을 합병한 테이블에서 column들을 고른다&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;두 테이블의 column명이 같다면 &lt;code class=&quot;language-text&quot;&gt;테이블명.columnname&lt;/code&gt; 식으로 적어주면 된다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;매번 테이블명. ~~~ 하기 싫다면 아래와 같이 테이블명에 이름을 더 붙여줄 수 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT l.Date, l.CountryID, l.Units, r.Country
FROM Lefttable l
INNER JOIN Righttable r ON l.CountryID = r.ID&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;2번 내용에서, &lt;code class=&quot;language-text&quot;&gt;ON&lt;/code&gt; 뒤에 비교하는 두 column의 이름이 같다면 &lt;code class=&quot;language-text&quot;&gt;ON 조건&lt;/code&gt; 대신 &lt;code class=&quot;language-text&quot;&gt;USING(columnname)&lt;/code&gt;을 사용하는 것이 간결하다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;번외-pandas로-테이블-합병하기-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B2%88%EC%99%B8-pandas%EB%A1%9C-%ED%85%8C%EC%9D%B4%EB%B8%94-%ED%95%A9%EB%B3%91%ED%95%98%EA%B8%B0-1&quot; aria-label=&quot;번외 pandas로 테이블 합병하기 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;번외: &lt;code class=&quot;language-text&quot;&gt;pandas&lt;/code&gt;로 테이블 합병하기&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;pd.merge(df_a, df_b, left_on=&apos;CountryID&apos;, right_on=&apos;ID&apos;, how=&apos;inner&apos;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;위의 예시와 같다.&lt;/p&gt;
&lt;h3 id=&quot;left-join-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#left-join-1&quot; aria-label=&quot;left join 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LEFT JOIN&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;왼쪽 테이블만 유지된다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/7e803b31-8c28-4db5-82ac-6bda6847b860/image.png&quot; alt=&quot;microsoft docs&quot;&gt;&lt;/p&gt;
&lt;p&gt;위의 &lt;code class=&quot;language-text&quot;&gt;INNER JOIN&lt;/code&gt;은 조건에 맞지않는 양 테이블의 데이터를 모두 버렸지만&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;LEFT JOIN&lt;/code&gt; 은 왼쪽 테이블을 유지하면서 조건에 맞는 오른쪽 테이블의 데이터를 불러오는 느낌이다.&lt;/p&gt;
&lt;p&gt;SQL문은 &lt;code class=&quot;language-text&quot;&gt;INNER JOIN&lt;/code&gt;과 다를게 없다.&lt;/p&gt;
&lt;h3 id=&quot;right-join-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#right-join-1&quot; aria-label=&quot;right join 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RIGHT JOIN&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;LEFT JOIN&lt;/code&gt; 으로 대체 가능&lt;/p&gt;
&lt;h3 id=&quot;outer-join-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#outer-join-1&quot; aria-label=&quot;outer join 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OUTER JOIN&lt;/h3&gt;
&lt;p&gt;합집합&lt;/p&gt;
&lt;h3 id=&quot;번외--self-join-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B2%88%EC%99%B8--self-join-1&quot; aria-label=&quot;번외  self join 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;번외 : SELF JOIN&lt;/h3&gt;
&lt;p&gt;테이블 하나를 두개로 보고 합병하는 것이다. 사실 한 테이블이지만 두 테이블로 생각하고 코드를 짜면 된다.
&lt;strong&gt;테이블 뒤 별명을 만들어서 헷갈리지 않도록 한다.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;group-by-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#group-by-1&quot; aria-label=&quot;group by 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GROUP BY&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;pd.pivot_table(df, index=&apos;columnname&apos;, aggfunc=np.sum)&lt;/code&gt;
위의 &lt;code class=&quot;language-text&quot;&gt;pd.pivot_table()&lt;/code&gt;과 유사하다.&lt;/p&gt;
&lt;p&gt;데이터프레임 df에서 index열을 기준으로 같은 것끼리 모아 aggfunc을 실행해준다.&lt;/p&gt;
&lt;p&gt;예를 들면 멜론차트에서 같은 가수가 부른 음원끼리 모아서 몇곡이 있는지를 계산하는 것이 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT ArtistName, COUNT(TrackId) 
FROM tracks 
GROUP BY ArtistName&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이러면 아티스트 이름, 트랙 수가 있는 테이블이 나온다.
맨 윗줄에 &lt;code class=&quot;language-text&quot;&gt;COUNT()&lt;/code&gt;라는 함수가 있다. &lt;code class=&quot;language-text&quot;&gt;pd.pivot_table()&lt;/code&gt;로 치면 &lt;code class=&quot;language-text&quot;&gt;aggfunc&lt;/code&gt;과 같은 역할이다. 쓸 수 있는 함수는
&lt;code class=&quot;language-text&quot;&gt;SUM()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;AVG()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;COUNT()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;MIN()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;MAX()&lt;/code&gt; 등이 있다.&lt;/p&gt;
&lt;h3 id=&quot;having-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#having-1&quot; aria-label=&quot;having 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HAVING&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;GROUP BY&lt;/code&gt;에서 필터링이 필요할 때 사용한다. &lt;code class=&quot;language-text&quot;&gt;HAVING&lt;/code&gt; 뒤에 조건을 붙여주면 된다.&lt;/p&gt;
&lt;h4 id=&quot;where과의-차이-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#where%EA%B3%BC%EC%9D%98-%EC%B0%A8%EC%9D%B4-1&quot; aria-label=&quot;where과의 차이 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WHERE과의 차이?&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;WHERE&lt;/code&gt;가 &lt;code class=&quot;language-text&quot;&gt;GROUP BY&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;HAVING&lt;/code&gt;보다 먼저 적용된다.
일반적으로는 &lt;code class=&quot;language-text&quot;&gt;WHERE&lt;/code&gt;을 먼저 써주는게 빠르다. 그런데 &lt;code class=&quot;language-text&quot;&gt;HAVING&lt;/code&gt;을 써야만 하는 경우도 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT ArtistName, COUNT(TrackId) 
FROM tracks 
GROUP BY ArtistName
HAVING COUNT(TrackId) = 2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;GROUP BY&lt;/code&gt;를 먼저 해야 aggregate 함수인 &lt;code class=&quot;language-text&quot;&gt;COUNT&lt;/code&gt;를 쓸 수 있으니 &lt;code class=&quot;language-text&quot;&gt;WHERE&lt;/code&gt;로는 불가능하다.&lt;/p&gt;
&lt;h4 id=&quot;날짜-다루기-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%82%A0%EC%A7%9C-%EB%8B%A4%EB%A3%A8%EA%B8%B0-1&quot; aria-label=&quot;날짜 다루기 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;날짜 다루기&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;STRFTIME(a, b)&lt;/code&gt;이라는 함수가 있는데, 날짜를 다루기 위한 함수이다.
첫번째 인수에는 원하는 출력방식을, 두번째에는 시간 객체를 넣으면 된다.&lt;/p&gt;
&lt;p&gt;풀 시간에서 년도만 추출하고 싶다면
&lt;code class=&quot;language-text&quot;&gt;STRFTIME(&apos;%Y&apos;, Date)&lt;/code&gt; 이렇게 사용하면 된다.&lt;/p&gt;
&lt;h2 id=&quot;순서-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%88%9C%EC%84%9C-1&quot; aria-label=&quot;순서 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;순서&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SELECT FROM&lt;/li&gt;
&lt;li&gt;JOIN&lt;/li&gt;
&lt;li&gt;WHERE&lt;/li&gt;
&lt;li&gt;GROUP BY, HAVING&lt;/li&gt;
&lt;li&gt;ORDER BY&lt;/li&gt;
&lt;li&gt;LIMIT, OFFSET&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[구글 포토 사진 일괄 저장 및 정리]]></title><description><![CDATA[학교 계정으로 구글 포토를 무제한으로 쓰다가 20GB로 제한되어서 그만 쓰려고 한다. 문제 일괄 저장 기능 없음 웹 구글 포토 상에서는 일괄 저장 기능이 없다........ 몇천장 되는 사진을 일일이 체크할 수는 없다.
https://takeout…]]></description><link>https://ljh01.github.io/blog/GooglePhoto/</link><guid isPermaLink="false">https://ljh01.github.io/blog/GooglePhoto/</guid><pubDate>Fri, 26 Aug 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;학교 계정으로 구글 포토를 무제한으로 쓰다가 20GB로 제한되어서 그만 쓰려고 한다.&lt;/p&gt;
&lt;h2 id=&quot;문제&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AC%B8%EC%A0%9C&quot; aria-label=&quot;문제 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;문제&lt;/h2&gt;
&lt;h3 id=&quot;일괄-저장-기능-없음&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9D%BC%EA%B4%84-%EC%A0%80%EC%9E%A5-%EA%B8%B0%EB%8A%A5-%EC%97%86%EC%9D%8C&quot; aria-label=&quot;일괄 저장 기능 없음 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;일괄 저장 기능 없음&lt;/h3&gt;
&lt;p&gt;웹 구글 포토 상에서는 일괄 저장 기능이 없다........ 몇천장 되는 사진을 일일이 체크할 수는 없다.
&lt;a href=&quot;https://takeout.google.com/&quot;&gt;https://takeout.google.com/&lt;/a&gt; 에서 사진만 체크하고 따로 뽑아준다. 내보내기를 누르고 수 분이 지나면 다운로드 링크를 메일로 보내준다.
재밌는 점은 일괄 삭제 기능도 없어서 구글에서 자바 스크립트 찾아서 삭제했다.&lt;/p&gt;
&lt;h3 id=&quot;파일-이름-중복&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%8C%8C%EC%9D%BC-%EC%9D%B4%EB%A6%84-%EC%A4%91%EB%B3%B5&quot; aria-label=&quot;파일 이름 중복 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;파일 이름 중복&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;takeout에서 받은 압축 파일에는 년도 별로 폴더가 분리되어있다.&lt;/li&gt;
&lt;li&gt;아이폰에서는 사진 파일 이름이 IMG_xxxx.jpg와 같은 형식으로 저장된다. 폰을 초기화해서 사진이 아예 없다면 0부터 다시 시작한다. (갤럭시는 날짜, 시각으로 되어있다.)&lt;/li&gt;
&lt;li&gt;구글 포토에서는 파일 이름을 원본 그대로 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그래서 2016년의 IMG_1234.JPG가 2017년의 동명 파일과 겹치는 문제가 발생한다.&lt;/p&gt;
&lt;p&gt;또 다른 문제는
IMG_0001.jpg와 IMG_0001(2).jpg가 공존하는 경우 json이 IMG_0001.jpg (2).json 뭐 이딴식으로 생성되는 문제였다. 이게 이유가 저거 때문인지는 확실히 기억이 안나는데..
아무튼 이런 문제가 있었다.&lt;/p&gt;
&lt;p&gt;전자는 이미지와 json파일 둘다 숫자를 더 붙여서, 후자는 일일히 .jpg (2).json을 (2).jpg.json으로 바꿔주며 해결했다.&lt;/p&gt;
&lt;h2 id=&quot;메타데이터-정리&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%A9%94%ED%83%80%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%95%EB%A6%AC&quot; aria-label=&quot;메타데이터 정리 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;메타데이터 정리&lt;/h2&gt;
&lt;p&gt;이상하게 사진의 메타데이터를 사진명.JSON의 형식으로 분리해서 준다.. 너무 불편하다.
우선 1차적으로 &lt;code class=&quot;language-text&quot;&gt;exiftool&lt;/code&gt;을 사용하고 안된 파일에 대해서 &lt;code class=&quot;language-text&quot;&gt;piexif&lt;/code&gt;를 활용한다.&lt;/p&gt;
&lt;h3 id=&quot;exiftool&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#exiftool&quot; aria-label=&quot;exiftool permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;exiftool&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;exiftool &quot;-FileCreateDate&amp;lt;CreateDate&quot; &quot;-FileModifyDate&amp;lt;ModifyDate&quot; &quot;-GpsLatitude&amp;lt;GeoDataExifLatitude&quot; &quot;-GpsLatitudeRef&amp;lt;GeoDataExifLatitude&quot; &quot;-GPSLongitude&amp;lt;GeoDataLongitude&quot; &quot;-GPSLongitudeRef&amp;lt;GeoDataLongitude&quot;&quot;사진폴더&quot; -r&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;요렇게 날짜와 gps를 수정하는 코드를 cmd나 powershell에서 실행해준다.&lt;/p&gt;
&lt;h3 id=&quot;검사&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B2%80%EC%82%AC&quot; aria-label=&quot;검사 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;검사&lt;/h3&gt;
&lt;p&gt;날짜와 gps가 잘 바뀌었는지 검사해야 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;먼저 윈도우 탐색기에서 날짜별로 정렬 후 날짜가 이상한 파일을 json과 격리한다.&lt;/li&gt;
&lt;li&gt;보통 기기마다 gps정보 존재 여부가 달라서 기기에서 찍었을 것으로 예상되는 파일 중 몇개만 gps를 확인하고 잘 되어 있으면 전체 pass한다. gps 정보가 없을 경우 json을 확인해보고 json에도 없으면 pass한다. json에는 있고 그렇다면 격리한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;piexif&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#piexif&quot; aria-label=&quot;piexif permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;piexif&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;piexif&lt;/code&gt;는 파이썬 라이브러리다. 위 검사에서 격리된 항목에 대해 piexif를 통해 날짜, gps정보를 추가한다. 그 다음 다시 위 검사를 반복한다. 거기서 남은 파일들은 애초에 정보가 잘못된 파일들일 것이다.&lt;/p&gt;
&lt;h3 id=&quot;영상-처리&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%98%81%EC%83%81-%EC%B2%98%EB%A6%AC&quot; aria-label=&quot;영상 처리 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;영상 처리&lt;/h3&gt;
&lt;p&gt;영상도 &lt;code class=&quot;language-text&quot;&gt;exiftool&lt;/code&gt;선에서 해결이 되긴 한다. (나는 mov, mp4파일만 다뤘다.)
그러나 영상은 윈도우 속성창에서 gps정보를 확인할 수 없어 &lt;strong&gt;검사&lt;/strong&gt;를 할 때 gps정보가 잘 들어갔는지 알 턱이 없었다. 그래서 이건 또 &lt;code class=&quot;language-text&quot;&gt;ffmpeg-python&lt;/code&gt;라는 파이썬 라이브러리를 사용해서 메타데이터를 뽑아 확인하였다.&lt;/p&gt;
&lt;h2 id=&quot;이름-중복-파일-정리&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9D%B4%EB%A6%84-%EC%A4%91%EB%B3%B5-%ED%8C%8C%EC%9D%BC-%EC%A0%95%EB%A6%AC&quot; aria-label=&quot;이름 중복 파일 정리 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;이름, 중복 파일 정리&lt;/h2&gt;
&lt;h3 id=&quot;일괄-이름-수정&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9D%BC%EA%B4%84-%EC%9D%B4%EB%A6%84-%EC%88%98%EC%A0%95&quot; aria-label=&quot;일괄 이름 수정 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;일괄 이름 수정&lt;/h3&gt;
&lt;p&gt;위와 같이 아이폰은 IMG_xxxx식으로 이미지에 이름을 붙이기 때문에 언제 또 이름이 겹칠지 모른다. 그래서 이미지, 영상들을 전부 날짜+시간을 포함해서 이름을 수정하였다. 프로그램이 있는지 찾아봤는데 날짜도 적용이 제대로 안되는 경우가 많고 비디오, heic 파일을 지원하는게 없어서 만들었다..(알씨, 포토스케이프 써봄)
&lt;a href=&quot;https://github.com/ljho01/ImageRenamer&quot;&gt;https://github.com/ljho01/ImageRenamer&lt;/a&gt; 여기서 확인할 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;중복-파일-정리&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A4%91%EB%B3%B5-%ED%8C%8C%EC%9D%BC-%EC%A0%95%EB%A6%AC&quot; aria-label=&quot;중복 파일 정리 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;중복 파일 정리&lt;/h3&gt;
&lt;p&gt;중복 유형이 두가지 있다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;백업 복원을 여러번 거치면서 그냥 중복이 발생하는 경우&lt;/li&gt;
&lt;li&gt;JPG, HEIC가 공존하는 경우(이유 모름)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;보통 1번의 경우 확장자가 같기 때문에 중복검사 프로그램에서 쉽게 찾아낼 수 있다. 근데 문제는 2번인데, 확장자가 다르면 같은 사진이라도 감지를 못하더라.. 그래서 heic를 jpg로 일괄 변환해서 중복 검사를 돌렸다.&lt;/p&gt;
&lt;p&gt;글로 적으니 별거 아닌 것 같은데 4일동안 이거에만 매달렸다.. 코드를 안짜고 그냥 손으로 한게 대부분이라 시행착오도 잦았다. 다음에도 이러면 코드로 짜서 해야지&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Python + SQLite]]></title><description><![CDATA[파이썬에서 SQLite 사용하기 골자는 파이썬에서 라이브러리를 사용하여 sql문을 사용하는 것이다. 이를 위해서 라는 오브젝트를 만들어서 사용한다.
sql문과 파이썬 sqlite3를 같이 배운다고 생각하자. SQLite3의 자료형들 NULL…]]></description><link>https://ljh01.github.io/blog/Python_SQL/</link><guid isPermaLink="false">https://ljh01.github.io/blog/Python_SQL/</guid><pubDate>Fri, 12 Aug 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;파이썬에서-sqlite-사용하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%97%90%EC%84%9C-sqlite-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0&quot; aria-label=&quot;파이썬에서 sqlite 사용하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;파이썬에서 SQLite 사용하기&lt;/h1&gt;
&lt;p&gt;골자는 파이썬에서 라이브러리를 사용하여 sql문을 사용하는 것이다. 이를 위해서 &lt;code class=&quot;language-text&quot;&gt;cursor&lt;/code&gt;라는 오브젝트를 만들어서 사용한다.
sql문과 파이썬 sqlite3를 같이 배운다고 생각하자.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import sqlite3

dbpath = &quot;파일명.db&quot; # db파일 경로 
conn = sqlite3.connect(dbpath) # db파일 연결하기

cur = conn.cursor() # db파일에 대한 커서 생성

conn.commit()  # 커밋하기
conn.rollback()  # 마지막 커밋 시점으로 롤백
conn.close()  # 저장하고 끝내기&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;sqlite3의-자료형들&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sqlite3%EC%9D%98-%EC%9E%90%EB%A3%8C%ED%98%95%EB%93%A4&quot; aria-label=&quot;sqlite3의 자료형들 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite3의 자료형들&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;NULL&lt;/li&gt;
&lt;li&gt;INTEGER, INT  #정수&lt;/li&gt;
&lt;li&gt;REAL  #실수(float)&lt;/li&gt;
&lt;li&gt;TEXT(or VARCHAR)&lt;/li&gt;
&lt;li&gt;BLOB  #binary large object 2진수 오브젝트&lt;/li&gt;
&lt;li&gt;TIMESTAMP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;h1 id=&quot;cursor-사용하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#cursor-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0&quot; aria-label=&quot;cursor 사용하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;cursor 사용하기&lt;/h1&gt;
&lt;h2 id=&quot;sql문-커서로-실행하기excute-excutescript&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sql%EB%AC%B8-%EC%BB%A4%EC%84%9C%EB%A1%9C-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0excute-excutescript&quot; aria-label=&quot;sql문 커서로 실행하기excute excutescript permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL문 커서로 실행하기(excute, excutescript)&lt;/h2&gt;
&lt;h3 id=&quot;테이블-만들기create&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%85%8C%EC%9D%B4%EB%B8%94-%EB%A7%8C%EB%93%A4%EA%B8%B0create&quot; aria-label=&quot;테이블 만들기create permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;테이블 만들기(CREATE)&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;cur.execute(&quot;&quot;&quot;
	CREATE TABLE employees(
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    salary REAL,
    ...
    );
    &quot;&quot;&quot;)  # sql문 스트링으로 전달.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;단일 sql문을 전달할 경우 세미콜론은 넣지 않아도 된다.
&lt;code class=&quot;language-text&quot;&gt;execute()&lt;/code&gt;는 단일 sql만 실행한다. 여러개 실행하려면 &lt;code class=&quot;language-text&quot;&gt;executescript()&lt;/code&gt;를 써야한다.&lt;/p&gt;
&lt;h3 id=&quot;테이블-확장key-생성&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%85%8C%EC%9D%B4%EB%B8%94-%ED%99%95%EC%9E%A5key-%EC%83%9D%EC%84%B1&quot; aria-label=&quot;테이블 확장key 생성 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;테이블 확장(key 생성)&lt;/h3&gt;
&lt;p&gt;테이블과 열&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;DROP TABLE IF EXIST employees;&lt;/code&gt; employees가 있으면 지우기
&lt;code class=&quot;language-text&quot;&gt;id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/code&gt; 자동으로 증가하는 키인 id 만들기
&lt;code class=&quot;language-text&quot;&gt;job TEXT NOT NULL,&lt;/code&gt; NULL을 허용하지 않음&lt;/p&gt;
&lt;h3 id=&quot;테이블에-데이터-주입insert&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%85%8C%EC%9D%B4%EB%B8%94%EC%97%90-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A3%BC%EC%9E%85insert&quot; aria-label=&quot;테이블에 데이터 주입insert permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;테이블에 데이터 주입(INSERT)&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;INSERT INTO 테이블(필드1, 필드2, 필드3, ...) VALUES(필드1, 필드2, 필드3, ...);&lt;/code&gt;
모든 필드에 데이터를 채울 경우 &lt;code class=&quot;language-text&quot;&gt;테이블(필드1, 필드2, 필드3, ...)&lt;/code&gt;의 괄호 부분은 생략해도 된다.&lt;/p&gt;
&lt;h3 id=&quot;데이터-읽기select-fetchall&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9D%BD%EA%B8%B0select-fetchall&quot; aria-label=&quot;데이터 읽기select fetchall permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 읽기(SELECT, fetchall)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;row를 불러오려면(데이터)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;cur.excecute(&quot;SELECT * FROM employees&quot;)
cur.fetchall()  # fetchone()도 가능&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;더 쉬운 방법 - pandas 사용하기&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import pandas as pd
df = pd.read_sql_query(&quot;SELECT * FROM employees;&quot;, conn) &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;커서를 거치지 않고 데이터를 뽑아야하니 conn라도 던져줘야한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;column을 불러오려면(테이블의 key값)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;[col[0] for col in cur.description]  --&gt;  [&apos;id&apos;, &apos;name&apos;, ...]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;을 이용하면 된다.
&lt;code class=&quot;language-text&quot;&gt;cur.description&lt;/code&gt;은 그냥 출력하면 null이 덕지덕지 나오는데 python db api에 맞추느라 그렇게 된다고 한다..&lt;/p&gt;
&lt;h3 id=&quot;데이터-한번에-넣기insert-executemany&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%95%9C%EB%B2%88%EC%97%90-%EB%84%A3%EA%B8%B0insert-executemany&quot; aria-label=&quot;데이터 한번에 넣기insert executemany permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 한번에 넣기(INSERT, executemany)&lt;/h3&gt;
&lt;p&gt;excute를 for문 돌리기엔 조금 더럽다. excutemany를 사용하면 알아서 여러번 넣어준다.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;cur.executemany(&quot;INSERT INTO 테이블(필드1, 필드2, 필드3, ...) VALUES(?, ?, ?, ...);&quot;, data)&lt;/code&gt;
데이터의 형식은 &lt;code class=&quot;language-text&quot;&gt;[(value, value, value),(),()]&lt;/code&gt; 요런식&lt;/p&gt;
&lt;h3 id=&quot;db-저장하고-끝내기connclose&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#db-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B3%A0-%EB%81%9D%EB%82%B4%EA%B8%B0connclose&quot; aria-label=&quot;db 저장하고 끝내기connclose permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;db 저장하고 끝내기(conn.close())&lt;/h3&gt;
&lt;p&gt;용도에 따라 &lt;code class=&quot;language-text&quot;&gt;conn.commit()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;conn.rollback()&lt;/code&gt;를 사용해주고 &lt;code class=&quot;language-text&quot;&gt;conn.close()&lt;/code&gt; 해주면 db파일이 저장된다.&lt;/p&gt;
&lt;h1 id=&quot;sqlite-파이썬-없이-db다루기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sqlite-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%97%86%EC%9D%B4-db%EB%8B%A4%EB%A3%A8%EA%B8%B0&quot; aria-label=&quot;sqlite 파이썬 없이 db다루기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite 파이썬 없이 db다루기&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://sqlitebrowser.org/&quot;&gt;https://sqlitebrowser.org/&lt;/a&gt; 요기서 브라우저를 받아 사용할 수도 있다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[DBMS & 3 Steps of Data Modeling]]></title><description><![CDATA[DBMS DataBase Management System
계층형/네트워크형/관계형/객체형 등등 다양한 데이터베이스가 있음
그중 많이 쓰이는 관계형을 다루는 RDBMS는 Oracle MySQL(MariaDB) SQLite MS SQL…]]></description><link>https://ljh01.github.io/blog/DBMS_DateModeling/</link><guid isPermaLink="false">https://ljh01.github.io/blog/DBMS_DateModeling/</guid><pubDate>Wed, 10 Aug 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h2 id=&quot;dbms&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dbms&quot; aria-label=&quot;dbms permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DBMS&lt;/h2&gt;
&lt;p&gt;DataBase Management System
계층형/네트워크형/&lt;strong&gt;관계형&lt;/strong&gt;/객체형 등등 다양한 데이터베이스가 있음
그중 많이 쓰이는 관계형을 다루는 RDBMS는&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Oracle&lt;/li&gt;
&lt;li&gt;MySQL(MariaDB)&lt;/li&gt;
&lt;li&gt;SQLite&lt;/li&gt;
&lt;li&gt;MS SQL&lt;/li&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;등이 있다.&lt;/p&gt;
&lt;h2 id=&quot;data-lakes-vs-data-warehouses&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#data-lakes-vs-data-warehouses&quot; aria-label=&quot;data lakes vs data warehouses permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Lakes vs Data Warehouses&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.datacamp.com/blog/data-lakes-vs-data-warehouses&quot;&gt;https://www.datacamp.com/blog/data-lakes-vs-data-warehouses&lt;/a&gt;를 참고함&lt;/p&gt;
&lt;h3 id=&quot;data-lakes&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#data-lakes&quot; aria-label=&quot;data lakes permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Lakes&lt;/h3&gt;
&lt;p&gt;무분별하게 데이터가 쌓여있는 호수를 생각하면 되겠다. 가공이 적게 되어있고 양이 방대하다. 딥러닝 등에 사용&lt;/p&gt;
&lt;h3 id=&quot;data-warehouses&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#data-warehouses&quot; aria-label=&quot;data warehouses permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Warehouses&lt;/h3&gt;
&lt;p&gt;전처리가 되어있는 데이터들의 모음이다. 가공이 잘 되어있어 비즈니스적인 데이터 분석에 사용한다.&lt;/p&gt;
&lt;h2 id=&quot;etl-vs-elt&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#etl-vs-elt&quot; aria-label=&quot;etl vs elt permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ETL vs ELT&lt;/h2&gt;
&lt;p&gt;추후작성&lt;/p&gt;
&lt;h2 id=&quot;데이터-모델링-3단계&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A7%81-3%EB%8B%A8%EA%B3%84&quot; aria-label=&quot;데이터 모델링 3단계 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;데이터 모델링 3단계&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/0d4d2a73-42a3-4828-8c32-ad55ae15f4d5/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-개념적-데이터-모델링&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-%EA%B0%9C%EB%85%90%EC%A0%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A7%81&quot; aria-label=&quot;1 개념적 데이터 모델링 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 개념적 데이터 모델링&lt;/h3&gt;
&lt;p&gt;현실세계 데이터에서 E(ntity)-R(elationship) 다이어그램 을 만든다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Entity: 개체 (ex. 회원, 제품 등) / 사각형&lt;/li&gt;
&lt;li&gt;Relationship: 관계 (ex. 회원은 제품과 구매로 연결된다.) / 마름모&lt;/li&gt;
&lt;li&gt;Attribute: 속성 (ex. 가격, 수량, 회원정보 등) / 타원&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/4b51650a-d9ea-4674-b171-882f0e4e8d8a/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ERD를 만들 때 &lt;a href=&quot;https://aquerytool.com/&quot;&gt;AQuerytool&lt;/a&gt; 이나 &lt;a href=&quot;https://www.erdcloud.com/&quot;&gt;erdcloud&lt;/a&gt;를 이용하면 편하다..&lt;/p&gt;
&lt;h3 id=&quot;2-논리적-데이터-모델링&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-%EB%85%BC%EB%A6%AC%EC%A0%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A7%81&quot; aria-label=&quot;2 논리적 데이터 모델링 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 논리적 데이터 모델링&lt;/h3&gt;
&lt;p&gt;E-R다이어그램에서 각 개체, 관계별로 2차원 table인 Relation을 만드는 과정이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Attribute: Column = field&lt;/li&gt;
&lt;li&gt;Tuple: Row = record, instance&lt;/li&gt;
&lt;li&gt;Degree: Column의 개수&lt;/li&gt;
&lt;li&gt;Cardinality: Row의 개수&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;tidy-data&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#tidy-data&quot; aria-label=&quot;tidy data permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tidy data&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://partrita.github.io/posts/tidy-data/&quot;&gt;https://partrita.github.io/posts/tidy-data/&lt;/a&gt;
이 곳을 참고하자.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;각 변수는 개별의 열(column)으로 존재한다.&lt;/li&gt;
&lt;li&gt;각 관측치는 행(row)를 구성한다.&lt;/li&gt;
&lt;li&gt;각 표는 단 하나의 관측기준에 의해서 조직된 데이터를 저장한다.&lt;/li&gt;
&lt;li&gt;만약 여러개의 표가 존재한다면, 적어도 하나이상의 열(column)이 공유되어야 한다&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;3-물리적-데이터-모델링&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#3-%EB%AC%BC%EB%A6%AC%EC%A0%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A7%81&quot; aria-label=&quot;3 물리적 데이터 모델링 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 물리적 데이터 모델링&lt;/h3&gt;
&lt;p&gt;2차원 table에서 SQL코드로 변환하는 과정이다.
ex)&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;CREATE TABLE member (
	memid INT PRIMARY KEY,
	name VARCHAR(40),
	...
);

CREATE TABLE order (
	orderid INT PRIMARY KEY,
    memid INT,
    FOREIGN KEY(memid) REFERENCES member(memid), # foreign key로 연결
    ...
);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;sql-sturctured-query-language&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sql-sturctured-query-language&quot; aria-label=&quot;sql sturctured query language permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL (Sturctured Query Language)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;RDBMS에서 데이터 관리, 처리를 위해 만들어진 언어&lt;/li&gt;
&lt;li&gt;ANSI SQL을 표준으로 함. DBMS마다 조금씩 다를 수 있다. 기반은 다 같음.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;ddl-data-definition-language&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#ddl-data-definition-language&quot; aria-label=&quot;ddl data definition language permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DDL (Data Definition Language)&lt;/h3&gt;
&lt;p&gt;relation 자체를 다루는 언어. CREATE / ALTER / DROP 등이 있다.&lt;/p&gt;
&lt;h3 id=&quot;dml-data-manipulation-language&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dml-data-manipulation-language&quot; aria-label=&quot;dml data manipulation language permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DML (Data Manipulation Language)&lt;/h3&gt;
&lt;p&gt;데이터 관리를 위한 언어. SELECT / INSERT / UPDATE / DELETE&lt;/p&gt;
&lt;h3 id=&quot;dcl-data-control-language&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dcl-data-control-language&quot; aria-label=&quot;dcl data control language permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DCL (Data Control Language)&lt;/h3&gt;
&lt;p&gt;사용자 관리, 사용자 별 권한 등을 다룬다. GRANT / REVOKE&lt;/p&gt;
&lt;h3 id=&quot;팁&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%8C%81&quot; aria-label=&quot;팁 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;팁&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;대소문자 구분 없음&lt;/li&gt;
&lt;li&gt;SQL 명령은 세미콜론으로 끝남&lt;/li&gt;
&lt;li&gt;고유 값은 따옴표 안에&lt;/li&gt;
&lt;li&gt;한줄 주석 --, 여러줄 주석 /* */&lt;/li&gt;
&lt;li&gt;키워드 순서 익히기 ex)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SELECT / FROM / INNER JOIN ~~ ON &lt;del&gt;.&lt;/del&gt; = &lt;del&gt;.&lt;/del&gt; / WHERE / GROUP BY / HAVING / ORDER BY / LIMIT ~ OFFSET /&lt;/p&gt;</content:encoded></item><item><title><![CDATA[통계검정(2) - 평균 차이 검정, 상관관계 분석]]></title><description><![CDATA[평균 차이 검정 평균을 이용해 두 변수 간 상관관계의 유무를 찾는 것인가보다.
평균의 차이가 통계적 의미를 가지는가? 를 찾는... 추후 추가 독립표본 t-test 서로 다른 두 집단 간 평균차이를 검정

p-value…]]></description><link>https://ljh01.github.io/blog/통계검정2/</link><guid isPermaLink="false">https://ljh01.github.io/blog/통계검정2/</guid><pubDate>Fri, 05 Aug 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;평균-차이-검정&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%8F%89%EA%B7%A0-%EC%B0%A8%EC%9D%B4-%EA%B2%80%EC%A0%95&quot; aria-label=&quot;평균 차이 검정 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;평균 차이 검정&lt;/h1&gt;
&lt;p&gt;평균을 이용해 두 변수 간 상관관계의 유무를 찾는 것인가보다.
평균의 차이가 통계적 의미를 가지는가? 를 찾는... 추후 추가&lt;/p&gt;
&lt;h2 id=&quot;독립표본-t-test&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8F%85%EB%A6%BD%ED%91%9C%EB%B3%B8-t-test&quot; aria-label=&quot;독립표본 t test permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;독립표본 t-test&lt;/h2&gt;
&lt;p&gt;서로 다른 두 집단 간 평균차이를 검정
&lt;code class=&quot;language-text&quot;&gt;stats.ttest_ind(array-series, array-series, equal_var=False)&lt;/code&gt;
p-value가 나온다. 값이 높으면 두 집단 간 평균차이가 통계적으로 의미를 가지지 않는다고 생각할 수 있다.(귀무가설)
&lt;code class=&quot;language-text&quot;&gt;equal_var&lt;/code&gt;은 말 그대로 두 집단의 분산이 같고, 표본수가 같을 때 &lt;code class=&quot;language-text&quot;&gt;True&lt;/code&gt;로 놓고 사용한다. 기본은 &lt;code class=&quot;language-text&quot;&gt;False&lt;/code&gt;이다.&lt;/p&gt;
&lt;h2 id=&quot;대응표본-t-test&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8C%80%EC%9D%91%ED%91%9C%EB%B3%B8-t-test&quot; aria-label=&quot;대응표본 t test permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;대응표본 t-test&lt;/h2&gt;
&lt;p&gt;한 집단 내 평균차이를 검정
&lt;code class=&quot;language-text&quot;&gt;stats.ttest_rel(array-series, array-series)&lt;/code&gt;
ex) 시험시간 변경 전후 시험 성적 평균을 검정
ex) 국어점수와 수학점수 평균 간 검정&lt;/p&gt;
&lt;h2 id=&quot;분산분석&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B6%84%EC%82%B0%EB%B6%84%EC%84%9D&quot; aria-label=&quot;분산분석 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;분산분석&lt;/h2&gt;
&lt;p&gt;Analysis of variance (ANOVA)
세개 이상의 표본으로 적어도 평균차이검정을 해 최소 하나의 관계가 있는지 찾는다.
표본이 세개인 독립표본 t-test라고 생각하면 편할듯하다.
&lt;code class=&quot;language-text&quot;&gt;stats.f_oneway(series, series, series)&lt;/code&gt;
f_oneway인 이유는 함수 실행시 뱉는 statistic 값이 f값이라고...한다...
pvalue도 나온다.
oneway인 이유는 세 집단의 차이(변수)가 한가지.. 예를들면 나이대를 세개로 쪼개놓는다던가..(나이 하나가 변수)&lt;/p&gt;
&lt;p&gt;여기서 대립가설 : 변수에 따라 세 집단의 평균값이 3C2중 &lt;strong&gt;적어도 하나는&lt;/strong&gt; 유의미한 차이가 있다&lt;/p&gt;
&lt;h3 id=&quot;상관관계-분석&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%83%81%EA%B4%80%EA%B4%80%EA%B3%84-%EB%B6%84%EC%84%9D&quot; aria-label=&quot;상관관계 분석 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;상관관계 분석&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;df.corr()&lt;/code&gt;메소드를 통해 변수간 피어슨 상관계수를 구할 수 있다.
피어슨 상관계수는 0에 가까울수록 상관관계가 적다고 본다.&lt;/p&gt;
&lt;p&gt;여기서 이산적인 데이터들 간의 피어슨 상관계수는 잘 구 하지 않는다.
예를 들어 범주형 데이터들의 범주가 3개, 5개등 범주가 너무 적으면 상관계수가 구해지더라도 산점도 위에선 관계가 안보이기 때문이다. 범주형 데이터들의 경우 보통 chi-square 검정을 사용한다고 함.
numerical data라도 피어슨 상관계수만 보고 상관관계를 판단하면 위험하다. 산점도를 그려보면 모양이 추세선에서 많이 벗어나는 경우도 있기 때문.  (심슨의 역설 참고)&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;sns.pairplot(df)&lt;/code&gt; (&lt;em&gt;산점도 그리기&lt;/em&gt;, sns는 seaborn)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;그래서 상관계수에 대해서도 pvalue를 구하기도 한다.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;stats.pearsonr(series, series) # 피어슨 상관계수와 p-value를 리턴한다.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;상관계수가 믿을만한 것인가? 를 알 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;상관관계-찾기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%83%81%EA%B4%80%EA%B4%80%EA%B3%84-%EC%B0%BE%EA%B8%B0&quot; aria-label=&quot;상관관계 찾기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;상관관계 찾기&lt;/h3&gt;
&lt;p&gt;그러니까 지금껏 배운 검정은&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;카이제곱검정&lt;/li&gt;
&lt;li&gt;평균차이 검정(독립표본 vs 대응표본)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;세 가지다.
범주형 데이터 -&gt; crosstab을 만들어 카이제곱검정(독립성검정) 사용
숫자형 데이터 -&gt; 평균차이 검정(다른 집단이면 독립, 같은 집단의 사전 vs 사후 라면 대응)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[통계검정(1) - 교차검정]]></title><description><![CDATA[categorical data와 numerical data 전자는 범주를 의미하는 데이터. 숫자로 치환하여 사용할 수 있지만 수 자체가 의미를 가지지 않아 계산 등이 안된다. ex) 성별, 직업 후자는 수 자체로 의미를 가지는 데이터. ex…]]></description><link>https://ljh01.github.io/blog/통계검정1/</link><guid isPermaLink="false">https://ljh01.github.io/blog/통계검정1/</guid><pubDate>Wed, 03 Aug 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h3 id=&quot;categorical-data와-numerical-data&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#categorical-data%EC%99%80-numerical-data&quot; aria-label=&quot;categorical data와 numerical data permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;categorical data와 numerical data&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;전자는 범주를 의미하는 데이터. 숫자로 치환하여 사용할 수 있지만 수 자체가 의미를 가지지 않아 계산 등이 안된다. ex) 성별, 직업&lt;/li&gt;
&lt;li&gt;후자는 수 자체로 의미를 가지는 데이터. ex) 판매량, 가격&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;crosstab&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#crosstab&quot; aria-label=&quot;crosstab permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;crosstab&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/0afd4ae0-1b00-4535-a26c-f4ab9621d825/image.png&quot; alt=&quot;&quot;&gt;
위와 같이 두 범주형 데이터(categorical data)로 만들어놓은 표다.
contingency table 이라고도 한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;pd.crosstab(series_y, series_x, margins=True, normalize=True)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;margins=True&lt;/code&gt;를 넣어주면 총 합을 보여준다.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;normalize=True&lt;/code&gt;를 넣어주면 모든 셀을 sum으로 나눠서 비율을 보여준다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;2차원 버전의 &lt;code class=&quot;language-text&quot;&gt;df.[&apos;columnname&apos;].value_counts&lt;/code&gt; 라고 생각하자.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;독립성-검정&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8F%85%EB%A6%BD%EC%84%B1-%EA%B2%80%EC%A0%95&quot; aria-label=&quot;독립성 검정 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;독립성 검정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;crosstab으로 먼저 두 범주형 데이터 간 표를 만들고, 두 데이터 사이 연관성이 있는지 파악해야 한다. (독립성 검정)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;귀무가설과-대립가설&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B7%80%EB%AC%B4%EA%B0%80%EC%84%A4%EA%B3%BC-%EB%8C%80%EB%A6%BD%EA%B0%80%EC%84%A4&quot; aria-label=&quot;귀무가설과 대립가설 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;귀무가설과 대립가설&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;귀무가설(영가설, Null hypothesis): 두 변수 간 관계가 없다. (독립)&lt;/li&gt;
&lt;li&gt;대립가설: 두 변수 간 관계가 있다. (비독립)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;chi-square-검정&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#chi-square-%EA%B2%80%EC%A0%95&quot; aria-label=&quot;chi square 검정 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;chi-square 검정&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;from scipy import stats
stats.chisquare(series0, series1)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;결과로 &lt;code class=&quot;language-text&quot;&gt;p-value&lt;/code&gt;가 나온다.&lt;/p&gt;
&lt;p&gt;아래부터 내가 카이제곱검정에 대해서 더 찾아본 내용이다.
&lt;a href=&quot;https://hsm-edu.tistory.com/1213&quot;&gt;https://hsm-edu.tistory.com/1213&lt;/a&gt; 여기 잘 요약되어 있다.
카이제곱검정은 세가지가 있는데&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;적합도 검정 (goodness of fit)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;위는 관찰한 분포가 기대되는 분포와 유사한지를 알아보는 검정이다. 표본집단이 모집단을 대표할 수 있는가? 를 알아볼 때 쓰는 것 같음. 이건 &lt;code class=&quot;language-text&quot;&gt;stats.chisquare()&lt;/code&gt; 함수를 사용한다.
2. 독립성 검정 (test of independence)
두 변수가 독립적인지 아닌지를 판단하는 검정이다. 본 수업에서 사용하는 카이제곱검정은 이런 것을 가리키는 듯함. &lt;code class=&quot;language-text&quot;&gt;stats.chi2_contingency()&lt;/code&gt; 함수를 사용한다.
3. 동질성 검정(test of homogeneity)
두 집단의 분포가 비슷한지를 판단할 때 사용. 이건 scipy에서 맞는 함수를 찾지 못했다. 필요하면 더 찾아봐야지&lt;/p&gt;
&lt;h3 id=&quot;p-value&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#p-value&quot; aria-label=&quot;p value permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;p-value&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;두 변수가 독립적임을 가정하였을 때(귀무가설)
현재와 같은 데이터, 혹은 더욱 극단적인(상관관계를 보여주는) 데이터가
다른 샘플 데이터에서도 나타날 조건부 확률&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;내가 이해한 대로 말하면 두 변수가 아무런 상관이 없다면 우리가 이 데이터를 마주칠 확률이 얼마일까? 에 대한 답이 p값이라는 것이다. 만약 p값이 너무 낮으면?
이런 희박한 확률을 뚫고 이 데이터를 마주쳤다는 것이 말이 안되므로 영가설인 &apos;두 데이터는 상관이 없다&apos;를 버려야 합리적이다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;p-value가 0.05 이하, 충분히 낮다면&lt;/strong&gt;
두 변수 간에 상관관계가 있다고 판단하고 귀무가설을 기각한다.
&lt;strong&gt;p-value가 0.05 이상, 충분히 높다면&lt;/strong&gt;
두 변수는 서로 독립적이라고 판단하여 귀무가설을 기각하지 않는다.&lt;/p&gt;
&lt;p&gt;*여기서 유의수준 0.05를 alpha라고 한다. 당연히 보수적으로 낮추거나 널널하게 높이는 식으로 조절 가능하다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[IQR Score를 활용한 Outlier 탐지]]></title><description><![CDATA[Boxplot  수염상자그림 https://towardsdatascience.com/understanding-boxplots-5e2df7bcbd51 boxplot 그림 만들기 quartile 계산 describe…]]></description><link>https://ljh01.github.io/blog/outlier/</link><guid isPermaLink="false">https://ljh01.github.io/blog/outlier/</guid><pubDate>Tue, 02 Aug 2022 00:00:00 GMT</pubDate><content:encoded>&lt;h2 id=&quot;boxplot&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#boxplot&quot; aria-label=&quot;boxplot permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Boxplot&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/155ef361-d3ad-4331-aec0-ae63f301fda2/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;수염상자그림 &lt;a href=&quot;https://towardsdatascience.com/understanding-boxplots-5e2df7bcbd51&quot;&gt;https://towardsdatascience.com/understanding-boxplots-5e2df7bcbd51&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;boxplot-그림-만들기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#boxplot-%EA%B7%B8%EB%A6%BC-%EB%A7%8C%EB%93%A4%EA%B8%B0&quot; aria-label=&quot;boxplot 그림 만들기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;boxplot 그림 만들기&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;df.boxplot(column=&apos;columnname&apos;, by=&apos;columnname&apos;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;quartile-계산&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#quartile-%EA%B3%84%EC%82%B0&quot; aria-label=&quot;quartile 계산 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;quartile 계산&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;describe 메소드로 가능하다. 최소, 최대, 평균, 분산 등이 나온다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;df.[&apos;columnname&apos;].describe()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;quantile 메소드 사용하기.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;df.[&apos;columnname&apos;].quantile(percentage) 기본입력은 0.5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;median-계산&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#median-%EA%B3%84%EC%82%B0&quot; aria-label=&quot;median 계산 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;median 계산&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;df.[&apos;columnname&apos;].median()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;개수가 적어 애매하게 걸린다면?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;위 아래 두 값을 평균내어 사용한다.
예를 들어 a[1]~ a[6]까지면 a[3], a[4]의 평균을 median으로 사용&lt;/p&gt;
&lt;h3 id=&quot;iqrinterquartile-range&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#iqrinterquartile-range&quot; aria-label=&quot;iqrinterquartile range permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IQR(Interquartile range)&lt;/h3&gt;
&lt;p&gt;그림에서 보이는 대로
upper quartile과 lower quartile의 차이를 IQR이라고 한다.&lt;/p&gt;
&lt;h3 id=&quot;whisker&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#whisker&quot; aria-label=&quot;whisker permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;whisker&lt;/h3&gt;
&lt;p&gt;이 IQR값에 1.5를 곱해 더하면 whisker들이 만들어진다. 그 바깥은 outlier라고 취급한다.
만약 min, max보다 whisker가 바깥에 있다면 그냥 min, max까지를 whisker라고 여긴다.&lt;/p&gt;
&lt;p&gt;IQR을 이용하여 outlier를 찾는 경우 정규분포의 경우엔 0.7%정도가 outlier가 된다.
근데 정규분포가 아닐 때는 그렇지 않으니 조심해야 한다.&lt;/p&gt;
&lt;h2 id=&quot;log로-데이터-스케일링&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#log%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%8A%A4%EC%BC%80%EC%9D%BC%EB%A7%81&quot; aria-label=&quot;log로 데이터 스케일링 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log로 데이터 스케일링&lt;/h2&gt;
&lt;p&gt;두 열을 가지고 jointplot을 만들 때 한쪽의 스케일이 너무 클 경우
np.log(열)을 이용해 로그를 씌워준다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsby]]></title><description><![CDATA[다크모드 구현 토글 컴포넌트 index.html에 스크립트 삽입 내가 기반으로 사용중인 gatsby-blog-starter는 html.js가 없는데, .cache/default-html.js 파일을 src폴더로 가져와서 html.js…]]></description><link>https://ljh01.github.io/blog/Gatsby/</link><guid isPermaLink="false">https://ljh01.github.io/blog/Gatsby/</guid><pubDate>Thu, 21 Jul 2022 10:12:03 GMT</pubDate><content:encoded>&lt;h2 id=&quot;다크모드-구현&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8B%A4%ED%81%AC%EB%AA%A8%EB%93%9C-%EA%B5%AC%ED%98%84&quot; aria-label=&quot;다크모드 구현 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;다크모드 구현&lt;/h2&gt;
&lt;h3 id=&quot;토글-컴포넌트&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%86%A0%EA%B8%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8&quot; aria-label=&quot;토글 컴포넌트 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;토글 컴포넌트&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import React, { useState, useEffect } from &quot;react&quot;
import &quot;./themetog.css&quot;


const Toggle = () =&gt; {
    const websiteTheme = typeof window != `undefined` ? window.__theme : null
    const [ theme, setTheme ] = useState(websiteTheme)
    useEffect(() =&gt; {
        setTheme(window.__theme)
        window.__onThemeChange = () =&gt; {
        setTheme(window.__theme)
        }
    }, [])

    const ThemeToggle = () =&gt; {
        window.__setPreferredTheme(websiteTheme === &apos;dark&apos; ? &apos;light&apos; : &apos;dark&apos;)
    }
    return (
        &amp;lt;&gt;
            &amp;lt;button onClick={ThemeToggle} id=&quot;tog&quot;/&gt;
            &amp;lt;label className=&quot;toggleback&quot; htmlFor=&quot;tog&quot;&gt;
                    &amp;lt;div className=&quot;togglecon&quot;/&gt;
            &amp;lt;/label&gt;
        &amp;lt;/&gt;   
    )
}

export default Toggle&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;indexhtml에-스크립트-삽입&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#indexhtml%EC%97%90-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%82%BD%EC%9E%85&quot; aria-label=&quot;indexhtml에 스크립트 삽입 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;index.html에 스크립트 삽입&lt;/h3&gt;
&lt;p&gt;내가 기반으로 사용중인 gatsby-blog-starter는 html.js가 없는데, .cache/default-html.js 파일을 src폴더로 가져와서 html.js로 바꿔주면 된다.
그 다음 body태그에 &apos;light&apos;과 같은 기본 테마를 &lt;code class=&quot;language-text&quot;&gt;className&lt;/code&gt;으로 지정해주고&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;dangerouslySetInnerHtml&lt;/code&gt; 사용하여 다음 스크립트를 삽입.
&lt;a href=&quot;https://overreacted.io&quot;&gt;https://overreacted.io&lt;/a&gt; 를 참고함&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;script dangerouslySetInnerHTML={{
		__html: `
        	(function() {
                window.__onThemeChange = function() {};
                function setTheme(newTheme) {
                  window.__theme = newTheme;
                  preferredTheme = newTheme;
                  document.body.className = newTheme;
                  window.__onThemeChange(newTheme);
                }
                var preferredTheme;
                try {
                  preferredTheme = localStorage.getItem(&apos;theme&apos;);
                } catch (err) { }
                window.__setPreferredTheme = function(newTheme) {
                  setTheme(newTheme);
                  try {
                    localStorage.setItem(&apos;theme&apos;, newTheme);
                  } catch (err) {}
                }
                var darkQuery = window.matchMedia(&apos;(prefers-color-scheme: dark)&apos;);
                darkQuery.addListener(function(e) {
                  window.__setPreferredTheme(e.matches ? &apos;dark&apos; : &apos;light&apos;)
                });
                setTheme(preferredTheme || (darkQuery.matches ? &apos;dark&apos; : &apos;light&apos;));
              })();
            `,
        }}
/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;css&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#css&quot; aria-label=&quot;css permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSS&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;.light {
  --color-text: black;
  --color-text-sub: var(--black-90);
  --color-line: rgba(10,10,10,0.2);
}


.dark {
  --color-text: white;
  --color-text-sub: var(--black-10);
  --color-line: rgba(240,240,240,0.2);
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이런 식으로 변수를 만들어주면 된다.&lt;/p&gt;
&lt;h2 id=&quot;네비바헤더-자동-숨기기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%84%A4%EB%B9%84%EB%B0%94%ED%97%A4%EB%8D%94-%EC%9E%90%EB%8F%99-%EC%88%A8%EA%B8%B0%EA%B8%B0&quot; aria-label=&quot;네비바헤더 자동 숨기기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;네비바(헤더) 자동 숨기기&lt;/h2&gt;
&lt;p&gt;스크롤을 내리면 사라지고 올리면 나타난다.
&lt;a href=&quot;https://lxieyang.github.io/blogs/tech-2018-08-18-reactstrap-gatsby-auto-hiding-navbar-trick/&quot;&gt;https://lxieyang.github.io/blogs/tech-2018-08-18-reactstrap-gatsby-auto-hiding-navbar-trick/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;toc-만들기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#toc-%EB%A7%8C%EB%93%A4%EA%B8%B0&quot; aria-label=&quot;toc 만들기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TOC 만들기&lt;/h2&gt;
&lt;h3 id=&quot;gatsby-remark-autolink-headers-설치&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#gatsby-remark-autolink-headers-%EC%84%A4%EC%B9%98&quot; aria-label=&quot;gatsby remark autolink headers 설치 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gatsby-remark-autolink-headers 설치&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.com/plugins/gatsby-remark-autolink-headers/&quot;&gt;https://www.gatsbyjs.com/plugins/gatsby-remark-autolink-headers/&lt;/a&gt;
&lt;code class=&quot;language-text&quot;&gt;npm install --save gatsby-remark-autolink-headers&lt;/code&gt;
각 제목들에 링크를 달아주는 역할을 함. 설치 후 gatsby-config에서
&lt;code class=&quot;language-text&quot;&gt;gatsby-transformer-remark&lt;/code&gt; 아래 plugin에 추가해준다.&lt;/p&gt;
&lt;h3 id=&quot;graphql-쿼리&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#graphql-%EC%BF%BC%EB%A6%AC&quot; aria-label=&quot;graphql 쿼리 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;graphql 쿼리&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;export const pageQuery = graphql`
  query BlogPostBySlug(
    $id: String!
    $previousPostId: String
    $nextPostId: String
  ) {
    site {
      siteMetadata {
        title
      }
    }
    markdownRemark(id: { eq: $id }) {
      id
      excerpt(pruneLength: 160)
      html
      tableOfContents
   	}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;blog-post.js&lt;/code&gt;의 일부이다. tableOfContents를 알아서 잘 불러와준다. html태그형태로 불러와지니 &lt;code class=&quot;language-text&quot;&gt;dangerouslySetInnerHTML&lt;/code&gt;로 밀어넣어주면 된다.&lt;/p&gt;
&lt;h3 id=&quot;네비바와-스크롤&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%84%A4%EB%B9%84%EB%B0%94%EC%99%80-%EC%8A%A4%ED%81%AC%EB%A1%A4&quot; aria-label=&quot;네비바와 스크롤 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;네비바와 스크롤&lt;/h3&gt;
&lt;p&gt;문제는 toc에서 각 제목으로 클릭해서 이동하면 제목이 위에 딱 붙는 식으로 스크롤이 되어버려서 네비바에 가려진다는 것..
css의 &lt;code class=&quot;language-text&quot;&gt;scroll-margin-top&lt;/code&gt;을 사용하면 약간의 여백을 만들어서 쉽게 해결할 수 있다.
&lt;code class=&quot;language-text&quot;&gt;gatsby-remark-autolink-headers&lt;/code&gt;에 &lt;code class=&quot;language-text&quot;&gt;offsetY&lt;/code&gt;라는 속성이 이 역할을 한다고는 나와있는데 뭘 잘못했는지 작동을 안했다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[LIS (Longest Increasing Sequence)]]></title><description><![CDATA[11053: 가장 긴 증가하는 부분 수열 문제를 풀었었는데 한 달쯤 뒤 17216: 가장 큰 감소 부분 수열 문제를 푸니 안풀렸다. 내가 11053을 풀었던 것 조차 잊어버림. 유사문제 11054번. 가장 긴 바이토닉 부분 수열 1105…]]></description><link>https://ljh01.github.io/blog/lis/</link><guid isPermaLink="false">https://ljh01.github.io/blog/lis/</guid><pubDate>Thu, 21 Jul 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;11053: 가장 긴 증가하는 부분 수열 문제를 풀었었는데 한 달쯤 뒤 17216: 가장 큰 감소 부분 수열 문제를 푸니 안풀렸다. 내가 11053을 풀었던 것 조차 잊어버림.&lt;/p&gt;
&lt;h2 id=&quot;유사문제&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9C%A0%EC%82%AC%EB%AC%B8%EC%A0%9C&quot; aria-label=&quot;유사문제 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;유사문제&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11054&quot;&gt;11054번. 가장 긴 바이토닉 부분 수열&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11055&quot;&gt;11055번. 가장 큰 증가 부분 수열&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/11722&quot;&gt;11722번. 가장 긴 감소하는 부분 수열&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/12015&quot;&gt;12015번. 가장 긴 증가하는 부분 수열 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/12738&quot;&gt;12738번. 가장 긴 증가하는 부분 수열 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/14002&quot;&gt;14002번. 가장 긴 증가하는 부분 수열 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/14003&quot;&gt;14003번. 가장 긴 증가하는 부분 수열 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1463&quot;&gt;1463번. 1로 만들기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1463번 1로 만들기도 LIS문제들 처럼
memoization을 1,2,3.. 순차적으로 하는데
새로운 항을 계산할 때 이전 저장값들의 일부만을 취해서 다음 항을 만들어낸다는 공통점이 있다.&lt;/p&gt;
&lt;h2 id=&quot;문제&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%AC%B8%EC%A0%9C&quot; aria-label=&quot;문제 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;문제&lt;/h2&gt;
&lt;p&gt;주어진 배열에서 우측으로 진행하는 가장 긴 증가하는 부분 수열의 길이를 찾으면 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/5848422d-b27d-46a3-8afc-a4eb2a3c2793/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;위의 예시 같은 경우는 10, 20, 30, 50으로 4가 정답이 됨.&lt;/p&gt;
&lt;h2 id=&quot;풀이&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%92%80%EC%9D%B4&quot; aria-label=&quot;풀이 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;풀이&lt;/h2&gt;
&lt;p&gt;뒤부터 슬라이싱한다. 앞에서부터 잘라도 풀이는 만들 수 있을 듯 하다.&lt;/p&gt;
&lt;p&gt;f(i)를 i번째 인덱스 뒤로 잘랐을 때 정답이라고 하자.&lt;/p&gt;
&lt;p&gt;여기서 f(i)는 수열을 만들 때 i번째 수를 수열에 포함한다고 간주한다.
&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/c28804f4-8a94-4d5c-b0cb-dd6fce03c81b/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;f(5)는 1이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/933a171a-1d1e-4595-b0a6-7b5d8aaf86c3/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;f(4)는 20을 포함한다. 그 다음 수가 50이므로 20보다 커 수열을 만들 수 있다.
50을 포함하여
f(4)=1+f(5)=2&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/e8e244fa-e06c-463d-8359-d649396f1121/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;f(3)은 30을 포함하고, 그 다음 수인 20은 30보다 작으니 건너뛴다. 50은 30보다 크니 포함한다.
f(3)=1+f(5)=2&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://velog.velcdn.com/images/ljho01/post/0c7849a6-f7bd-461c-a8a9-93e6403b1f63/image.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;f(2)는 최솟값이라 f(3), f(4), f(5)중 최댓값을 골라 더한다.
f(2)=1+max(f(3), f(4), f(5))=3&lt;/p&gt;
&lt;h3 id=&quot;코드&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%BD%94%EB%93%9C&quot; aria-label=&quot;코드 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;코드&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;n = int(input())
l = list(map(int, input().split()))
k = [1] * n
for i in range(n-2, -1, -1):
    max1 = 1
    passed = 0
    for j in range(i + 1, n):
        if l[j] &gt; l[i]:
            passed = 1
            if k[j] &gt; max1:
                max1 = k[j]
    k[i] = max1 + passed
print(max(k))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;k는 풀이의 f값을 적어두는 리스트이다.&lt;/p&gt;</content:encoded></item></channel></rss>