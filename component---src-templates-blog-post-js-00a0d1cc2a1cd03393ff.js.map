{"version":3,"file":"component---src-templates-blog-post-js-00a0d1cc2a1cd03393ff.js","mappings":"uJAiDA,IAvCY,IAAuC,IAAD,UAArC,YAAEA,EAAW,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBL,MAExC,OACE,gCACE,6BAAQM,EAAkBN,EAAK,MAAMM,EAAiBN,GACtD,wBAAMO,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASR,IACnC,wBAAMS,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzCH,EACA,C,oJC5BP,MAbaW,IACT,MAAMC,EAAUD,EAAKA,KACrB,MAAgB,KAAZC,EACQ,iCAGR,uBAAKC,UAAU,UACX,4BAAM,qBACN,uBAAKC,wBAAyB,CAAEC,OAAQH,KACtC,ECLd,MAqEaI,EAAO,IAAwC,IAArCL,MAAQM,eAAgBC,IAAQ,EACrD,OACE,gBAAC,IAAG,CACFnB,MAAOmB,EAAKC,YAAYpB,MACxBD,YAAaoB,EAAKC,YAAYrB,aAAeoB,EAAKE,SAClD,EAIN,MA9EyB,IAGnB,UAFJT,MAAM,SAAEU,EAAQ,KAAEC,EAAI,KAAErB,EAAMgB,eAAgBC,EAAI,kBAAEK,GAAmB,SACvEC,GACD,EACC,MAAMC,GAA6B,QAAjB,EAAAxB,EAAKG,oBAAY,aAAjB,EAAmBL,QAAK,QACpC2B,EAAUR,EAAKS,gBACrBC,QAAQC,IAAIN,GACZ,MAAMO,EAAaP,EAAkBQ,MAC/BC,EAAWT,EAAkBU,WACnC,OACE,gBAAC,IAAM,CAACT,SAAUA,EAAUzB,MAAO0B,GACjC,gBAAC,IAAG,CACJ1B,MAAOmB,EAAKC,YAAYpB,MACxBmC,KAAMhB,EAAKC,YAAYe,KACvBJ,WAAYA,EACZK,MAAOH,EACPR,SAAUN,EAAKC,YAAYiB,WAE3B,uBAAKvB,UAAU,mBACb,uBAAKA,UAAU,oBACb,uBACEA,UAAU,YACVwB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYrB,EAAKC,YAAYpB,OAC1C,yBAAImB,EAAKC,YAAYe,OAErB,2BACEpB,wBAAyB,CAAEC,OAAQG,EAAKsB,MACxCD,SAAS,gBAEb,gCAGF,gBAAC,EAAG,CAAC5B,KAAMe,KAEb,uBAAKb,UAAU,iBACb,sBACE4B,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,0BACGzB,GACC,gBAAC,EAAA0B,KAAI,CAACC,GAAI3B,EAAS4B,OAAOC,KAAMC,IAAI,QAAO,KACtC9B,EAASF,YAAYpB,QAI9B,0BACGuB,GACC,gBAAC,EAAAyB,KAAI,CAACC,GAAI1B,EAAK2B,OAAOC,KAAMC,IAAI,QAC7B7B,EAAKH,YAAYpB,MAAM,UAO7B,C","sources":["webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/components/toc.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport \"./toc.css\"\r\n\r\n\r\nconst Toc = (data) => {\r\n    const tochtml = data.data\r\n    if (tochtml === \"\") {\r\n        return (<></>)\r\n    }\r\n    return (\r\n        <nav className=\"tocnav\">\r\n            <span>Table of Contents</span>\r\n            <div dangerouslySetInnerHTML={{ __html: tochtml }}/>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Toc","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Nav from \"../components/nav\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Toc from \"../components/toc\"\r\n\r\nconst BlogPostTemplate = ({\r\n  data: { previous, next, site, markdownRemark: post, allMarkdownRemark },\r\n  location,\r\n}) => {\r\n  const siteTitle = site.siteMetadata?.title || `Title`\r\n  const tocdata = post.tableOfContents\r\n  console.log(allMarkdownRemark)\r\n  const categories = allMarkdownRemark.group\r\n  const totcount = allMarkdownRemark.totalCount\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Nav \r\n      title={post.frontmatter.title} \r\n      date={post.frontmatter.date} \r\n      categories={categories} \r\n      count={totcount} \r\n      location={post.frontmatter.category}\r\n      />\r\n      <div className=\"blogpostwrapper\">\r\n        <div className=\"post-toc-wrapper\">\r\n          <div\r\n            className=\"blog-post\"\r\n            itemScope\r\n            itemType=\"http://schema.org/Article\"\r\n          >\r\n            <header>\r\n              <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n              <p>{post.frontmatter.date}</p>\r\n            </header>\r\n              <section\r\n                dangerouslySetInnerHTML={{ __html: post.html }}\r\n                itemProp=\"articleBody\"\r\n              />\r\n            <footer>\r\n            </footer>\r\n          </div>\r\n          <Toc data={tocdata}/>\r\n        </div>\r\n        <nav className=\"blog-post-nav\">\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <li>\r\n              {previous && (\r\n                <Link to={previous.fields.slug} rel=\"prev\">\r\n                  ← {previous.frontmatter.title}\r\n                </Link>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {next && (\r\n                <Link to={next.fields.slug} rel=\"next\">\r\n                  {next.frontmatter.title} →\r\n                </Link>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = ({ data: { markdownRemark: post } }) => {\r\n  return (\r\n    <Seo\r\n      title={post.frontmatter.title}\r\n      description={post.frontmatter.description || post.excerpt}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) \r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      tableOfContents\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        category\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      totalCount\r\n      group(field: { frontmatter: { category: SELECT }}) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","data","tochtml","className","dangerouslySetInnerHTML","__html","Head","markdownRemark","post","frontmatter","excerpt","previous","next","allMarkdownRemark","location","siteTitle","tocdata","tableOfContents","console","log","categories","group","totcount","totalCount","date","count","category","itemScope","itemType","itemProp","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}